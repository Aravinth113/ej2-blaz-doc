{"data":{"allPostTitles":{"edges":[{"node":{"fields":{"slug":"/calendar/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/datepicker/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/daterangepicker/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/datetimepicker/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/timepicker/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4'"}}}]},"postBySlug":{"html":"<h1 id=\"getting-started\"><a href=\"#getting-started\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting Started</h1>\n<p>This section briefly explains how to include simple DateTimePicker control in your ASP.NET Core Razor application. You can refer to <a href=\"/production/aspnet-core-razor-components/documentation/getting-started/dotnet-cli-blazor/\">ASP .NET Core Razor Components Getting Started documentation</a> page for introduction part of the system requirements and configure the common specifications.</p>\n<h2 id=\"adding-component-to-the-application\"><a href=\"#adding-component-to-the-application\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding component to the Application</h2>\n<p>DateTimePicker component can be rendered by using the <code class=\"language-text\">EjsDateTimePicker</code> tag helper in ASP.NET Core Razor application. Add the DateTimePicker component in any web page <code class=\"language-text\">cshtml</code> in the <code class=\"language-text\">Pages</code> folder. For example, the DateTimePicker component is added in the <code class=\"language-text\">~/Pages/Index.cshtml</code> page.</p>\n<p>The following example shows a basic DateTimePicker component.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">```\n&lt;EjsDateTimePicker id=&#39;datetimepicker&#39; placeholder=&#39;Select a date and time&#39;&gt;&lt;/EjsDateTimePicker&gt;\n```</code></pre></div>\n<h2 id=\"run-the-application\"><a href=\"#run-the-application\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Run the application</h2>\n<p> After successful compilation of your application, simply press <code class=\"language-text\">F5</code> to run the application.</p>\n<p>Output be like the below.</p>\n<p><img src=\"/production/aspnet-core-razor-components/documentation/datetimepicker/images/datetimepicker_getting_started.PNG\" alt=\"DateTimePicker Sample\"></p>\n<h2 id=\"setting-the-min-and-max\"><a href=\"#setting-the-min-and-max\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting the min and max</h2>\n<p>The minimum and maximum date time can be defined with the help of <code class=\"language-text\">min</code> and <code class=\"language-text\">max</code> property.\nThe following example demonstrates to set the <code class=\"language-text\">min</code> and <code class=\"language-text\">max</code> on initializing the\nDateTimePicker.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">```\n&lt;EjsDateTimePicker id=&quot;datetimeicker&quot; value=&quot;@value&quot; min=&quot;@minDate&quot; max=&quot;@maxDate&quot;&gt;&lt;/EjsDateTimePicker&gt;\n\n@functions{\n    public DateTime value {get;set;} = new DateTime(DateTime.Now.Year,DateTime.Now.Month,10);\n    public DateTime minDate {get;set;} = new DateTime(DateTime.Now.Year,DateTime.Now.Month,05);\n    public DateTime maxDate {get;set;} = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 27);\n}\n```</code></pre></div>","timeToRead":1,"excerpt":"Getting Started This section briefly explains how to include simple DateTimePicker control in your ASP.NET Core Razor application. You can…","fields":{"slug":"/datetimepicker/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},"pageContext":{"slug":"/datetimepicker/getting-started/","previous":{"html":"<h1 id=\"getting-started\"><a href=\"#getting-started\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting Started</h1>\n<p>This section briefly explains how to include simple TimePicker control in your ASP.NET Core Razor application. You can refer to <a href=\"/production/aspnet-core-razor-components/documentation/getting-started/dotnet-cli-blazor/\">ASP .NET Core Razor Components Getting Started documentation</a> page for introduction part of the system requirements and configure the common specifications.</p>\n<h2 id=\"adding-component-to-the-application\"><a href=\"#adding-component-to-the-application\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding component to the Application</h2>\n<p>TimePicker component can be rendered by using the <code class=\"language-text\">EjsTimePicker</code> tag helper in ASP.NET Core Razor application. Add the TimePicker component in any web page <code class=\"language-text\">cshtml</code> in the <code class=\"language-text\">Pages</code> folder. For example, the TimePicker component is added in the <code class=\"language-text\">~/Pages/Index.cshtml</code> page.</p>\n<p>The following example shows a basic TimePicker component.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">```\n&lt;EjsTimePicker id=&quot;timepicker&quot; placeholder=&quot;Select a time&quot;&gt;&lt;/EjsTimePicker&gt;\n```</code></pre></div>\n<h2 id=\"run-the-application\"><a href=\"#run-the-application\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Run the application</h2>\n<p> After successful compilation of your application, simply press <code class=\"language-text\">F5</code> to run the application.</p>\n<p>Output be like the below.</p>\n<p><img src=\"/production/aspnet-core-razor-components/documentation/timepicker/images/timepicker_getting_started.PNG\" alt=\"TimePicker Sample\"></p>\n<h2 id=\"setting-the-time-format\"><a href=\"#setting-the-time-format\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting the time format</h2>\n<p>Time formats is a way of representing the time value in different string format in textbox and popup\nlist. By default, the TimePicker’s format is based on the culture. You can also customize the format by using the <code class=\"language-text\">format</code> property.</p>\n<p>The following example demonstrates the TimePicker component in 24 hours format with 60 minutes\ninterval. The time interval is set to\n60 minutes by using the <code class=\"language-text\">step</code> property.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">```\n&lt;EjsTimePicker id=&quot;timepicker&quot; value=&quot;@value&quot; step=&quot;60&quot; format=&quot;HH:mm&quot;&gt;&lt;/EjsTimePicker&gt;\n\n@functions{\n    public DateTime value {get;set;} = DateTime.Now;\n}\n```</code></pre></div>","id":"0f1dfea2-a0da-579c-99f0-4a8d2b11f2de","fields":{"slug":"/timepicker/getting-started/","parentPath":"timepicker","childPath":"getting-started","gcse":"014729256687841406486:qzbiyd0sri4'","header":"<div id=\"doc-right-toc\"><span>Contents</span>\n<ul>\n  <li class=\"doc-anchor-h2\"><a href=\"#adding-component-to-the-application\">Adding component to the Application</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#run-the-application\">Run the application</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#setting-the-time-format\">Setting the time format</a></li>\n</ul></div>","breadCrumb":"TimePicker/Getting Started","isReleaseNotes":false,"seoContent":"Getting Started in ASP.NET Core Razor Components [Preview] TimePicker | Syncfusion Documentation","platform":"ASP.NET Core Razor Components [Preview]","isRobots":true}},"next":{"html":"<h1 id=\"getting-started\"><a href=\"#getting-started\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting Started</h1>\n<p>This section briefly explains how to include simple DateRangePicker control in your ASP.NET Core Razor application. You can refer to <a href=\"/production/aspnet-core-razor-components/documentation/getting-started/dotnet-cli-blazor/\">ASP .NET Core Razor Components Getting Started documentation</a> page for introduction part of the system requirements and configure the common specifications.</p>\n<h2 id=\"adding-component-to-the-application\"><a href=\"#adding-component-to-the-application\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding component to the Application</h2>\n<p>DateRangePicker component can be rendered by using the <code class=\"language-text\">EjsDateRangePicker</code> tag helper in ASP.NET Core Razor application. Add the DateRangePicker component in any web page <code class=\"language-text\">cshtml</code> in the <code class=\"language-text\">Pages</code> folder. For example, the DateRangePicker component is added in the <code class=\"language-text\">~/Pages/Index.cshtml</code> page.</p>\n<p>The following example shows a basic DateRangePicker component.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">```\n&lt;EjsDateRangePicker id=&quot;daterangepicker&quot; placeHolder=&quot;Choose a Range&quot;&gt;&lt;/EjsDateRangePicker&gt;\n```</code></pre></div>\n<h2 id=\"run-the-application\"><a href=\"#run-the-application\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Run the application</h2>\n<p> After successful compilation of your application, simply press <code class=\"language-text\">F5</code> to run the application.</p>\n<p>Output be like the below.</p>\n<p><img src=\"/production/aspnet-core-razor-components/documentation/daterangepicker/images/daterangepicker_getting_started.PNG\" alt=\"DateRangePicker Sample\"></p>\n<h2 id=\"setting-the-min-and-max\"><a href=\"#setting-the-min-and-max\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting the min and max</h2>\n<p>The minimum and maximum date range can be defined with the help of <code class=\"language-text\">min</code> and <code class=\"language-text\">max</code> property.\nThe following example demonstrates to set the <code class=\"language-text\">min</code> and <code class=\"language-text\">max</code> on initializing the\nDateRangePicker.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">```\n&lt;EjsDateRangePicker id=&quot;daterangepicker&quot; placeHolder=&quot;Choose a Range&quot; min=&quot;minDate&quot; max=&quot;maxDate&quot;&gt;&lt;/EjsDateRangePicker&gt;&gt;\n\n@functions{\n    public DateTime minDate {get;set;} = new DateTime(2017, 01, 05);\n    public DateTime maxDate {get;set;} = new DateTime(2017, 12, 20);\n}\n```</code></pre></div>","id":"d104ff7c-9020-5124-946a-3e9ef37af0a1","fields":{"slug":"/daterangepicker/getting-started/","parentPath":"daterangepicker","childPath":"getting-started","gcse":"014729256687841406486:qzbiyd0sri4'","header":"<div id=\"doc-right-toc\"><span>Contents</span>\n<ul>\n  <li class=\"doc-anchor-h2\"><a href=\"#adding-component-to-the-application\">Adding component to the Application</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#run-the-application\">Run the application</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#setting-the-min-and-max\">Setting the min and max</a></li>\n</ul></div>","breadCrumb":"DateRangePicker/Getting Started","isReleaseNotes":false,"seoContent":"Getting Started in ASP.NET Core Razor Components [Preview] DateRangePicker | Syncfusion Documentation","platform":"ASP.NET Core Razor Components [Preview]","isRobots":true}},"gcse":"014729256687841406486:qzbiyd0sri4'","header":"<div id=\"doc-right-toc\"><span>Contents</span>\n<ul>\n  <li class=\"doc-anchor-h2\"><a href=\"#adding-component-to-the-application\">Adding component to the Application</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#run-the-application\">Run the application</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#setting-the-min-and-max\">Setting the min and max</a></li>\n</ul></div>","breadCrumb":"DateTimePicker/Getting Started","isReleaseNotes":false,"seoContent":"Getting Started in ASP.NET Core Razor Components [Preview] DateTimePicker | Syncfusion Documentation","platform":"ASP.NET Core Razor Components [Preview]","isRobots":true}}