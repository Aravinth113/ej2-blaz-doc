{"data":{"allPostTitles":{"edges":[{"node":{"fields":{"slug":"/browser/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/system-requirements/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/introduction/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/appearance/icons/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/appearance/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/appearance/theme-studio/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/common/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/appearance/theme/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/common/custom-resource-generator/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/common/deployment/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/common/localization/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/common/globalization/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/common/right-to-left/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/getting-started/dotnet-cli-blazor-server/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/common/state-persistance/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/getting-started/dotnet-cli-blazor/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/getting-started/dotnet-cli-razor/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/getting-started/vs-blazor-server/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/getting-started/vs-blazor/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/getting-started/vs-razor/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/visual-studio-code-integration/overview/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/visual-studio-integration/overview/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/common/how-to/customize-font-size-and-color/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/common/how-to/troubleshoot/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/common/how-to/render-blazor-server-app-in-ie/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/common/how-to/upgrade-syncfusion-components-to-latest-version/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/common/how-to/version-compatibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/visual-studio-code-integration/visual-studio-code-extensions/convert-project/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/visual-studio-code-integration/visual-studio-code-extensions/create-project/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/visual-studio-code-integration/visual-studio-code-extensions/download-and-installation/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/visual-studio-code-integration/visual-studio-code-extensions/upgrade-project/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/visual-studio-integration/visual-studio-extensions/convert-project/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/visual-studio-integration/visual-studio-extensions/create-project/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/visual-studio-integration/visual-studio-extensions/download-and-installation/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/visual-studio-integration/visual-studio-extensions/scaffolding/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/visual-studio-integration/visual-studio-extensions/upgrade-project/","gcse":"014729256687841406486:qzbiyd0sri4"}}}]},"postBySlug":{"html":"<h1 id=\"localization\"><a href=\"#localization\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Localization</h1>\n<p>Localization library allows you to localize the text content of the Syncfusion Blazor control.</p>\n<h2 id=\"loading-translations\"><a href=\"#loading-translations\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Loading translations</h2>\n<p>The following example demonstrates the Grid in <code class=\"language-text\">Deutsch</code> culture. Here, the <code class=\"language-text\">LoadLocaleData</code> method is used to load the <code class=\"language-text\">locale.json</code> file and the <code class=\"language-text\">SetCulture</code> method is set to the culture of the Component.</p>\n<p>To set different culture, other than <code class=\"language-text\">English</code>, follow the below steps:</p>\n<h2 id=\"syncfusion-locale-text\"><a href=\"#syncfusion-locale-text\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Syncfusion locale text</h2>\n<p>Syncfusion <code class=\"language-text\">ej2-locale</code> repository contains currently supported locale translations for Syncfusion Blazor components in multiple languages.</p>\n<ul>\n<li>\n<p>Download the required locale files to render the Blazor component with specified locale.</p>\n</li>\n<li>\n<p>Download the locale files of Blazor components from <a href=\"https://github.com/syncfusion/ej2-locale\">GitHub</a>.</p>\n</li>\n<li>\n<p>After downloading the <code class=\"language-text\">ej2-locale</code> repository, copy the required locale files into the <code class=\"language-text\">wwwroot</code> folder.</p>\n</li>\n<li>\n<p>By default, the <code class=\"language-text\">ej2-locale</code> repository contains the localized text for static text present in components such as button, placeholder, tooltip, and more.</p>\n</li>\n</ul>\n<h3 id=\"loading-translation-for-blazor-server-application\"><a href=\"#loading-translation-for-blazor-server-application\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Loading translation for Blazor Server application</h3>\n<p>The locale object can be loaded in the <code class=\"language-text\">./pages/index.razor</code> file using the following code snippet. The current locale can be changed for all Syncfusion Blazor components by invoking the <code class=\"language-text\">SetCulture</code> function with desired culture name.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@functions <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token class-name\">Inject</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">IJSRuntime</span> JsRuntime <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n     <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token keyword\">async</span> <span class=\"token class-name\">Task</span> <span class=\"token function\">OnInitializedAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">await</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnInitializedAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>JsRuntime<span class=\"token punctuation\">.</span><span class=\"token function\">Ejs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">LoadLocaleData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wwwroot/de.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCulture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"de\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"localization-translation-for-blazor-webassembly-application\"><a href=\"#localization-translation-for-blazor-webassembly-application\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Localization translation for Blazor WebAssembly application</h3>\n<p>Inject the <code class=\"language-text\">HttpClient</code> module in the <code class=\"language-text\">index.razor</code> file using the following code snippet in the <code class=\"language-text\">pages/index.razor</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@inject <span class=\"token class-name\">HttpClient</span> Http<span class=\"token punctuation\">;</span></code></pre></div>\n<p>To load locale object, read it using the <code class=\"language-text\">http</code> request, store using variable, and then load it as shown in the following code snippet in <code class=\"language-text\">./pages/index.razor</code>. The current locale can be changed for all Syncfusion Blazor components in your application by invoking the <code class=\"language-text\">SetCulture</code> function with desired culture name.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@functions <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token class-name\">Inject</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">IJSRuntime</span> JsRuntime <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token keyword\">async</span> <span class=\"token class-name\">Task</span> <span class=\"token function\">OnInitializedAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> Locale <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetJsonAsync</span><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ej2-locale/src/de.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>JsRuntime<span class=\"token punctuation\">.</span><span class=\"token function\">Ejs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">LoadLocaleData</span><span class=\"token punctuation\">(</span>Locale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCulture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"de\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Run the application.</p>\n<p>The following screenshot illustrates the output.</p>\n<p><img src=\"/production/blazor/documentation/common/images/de-culture.png\" alt=\"Grid\"> </p>\n<h2 id=\"customize-the-localized-text\"><a href=\"#customize-the-localized-text\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customize the localized text</h2>\n<ul>\n<li>\n<p>You can change the localized text of a particular component by editing the <code class=\"language-text\">wwwroot/ej2-locale/src/{{locale name}}.json</code> file.</p>\n</li>\n<li>\n<p>In the following code, modify the localized text of <code class=\"language-text\">GroupDropArea</code> in <code class=\"language-text\">de</code> culture.</p>\n</li>\n</ul>\n<p>[<code class=\"language-text\">wwwroot/ej2-locale/src/de.json</code>]</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"de\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"grid\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"GroupDropArea\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Ziehen Sie eine Spaltenberschrift hierher, um die Spalte zu gruppieren\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":2,"excerpt":"Localization Localization library allows you to localize the text content of the Syncfusion Blazor control. Loading translations The…","fields":{"slug":"/common/localization/","gcse":"014729256687841406486:qzbiyd0sri4"}}},"pageContext":{"slug":"/common/localization/","previous":{"html":"<h1 id=\"globalization\"><a href=\"#globalization\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Globalization</h1>\n<p>Globalization is the combination of adapting the control to various languages by parsing and formatting the date or number (<code class=\"language-text\">Internationalization</code>) and adding cultural-specific customizations and translating the text (<code class=\"language-text\">Localization</code>).</p>\n<p>By default, the component is specific to the <code class=\"language-text\">American English</code> culture. It utilizes the <code class=\"language-text\">Blazor Internationalization</code> package to parse and format the date object based on the culture using the official <a href=\"http://cldr.unicode.org/\">UNICODE CLDR</a> JSON data. It provides the <code class=\"language-text\">LoadLocaleData</code> and <code class=\"language-text\">LoadCldrData</code> method to load culture-specific CLDR JSON data.</p>\n<p>Set Culture and Currency using <code class=\"language-text\">SetCulture</code> and <code class=\"language-text\">SetCurrencyCode</code> property.</p>\n<p>To go with different cultures, other than <code class=\"language-text\">English</code>, follow the below steps:</p>\n<h2 id=\"load-cldr-data-to-an-application\"><a href=\"#load-cldr-data-to-an-application\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Load CLDR-Data to an application</h2>\n<ul>\n<li>Install the required <code class=\"language-text\">CLDR-Data</code> package using the following URL links in the below mentioned table (it installs the CLDR JSON data). To learn more about CLDR-Data, refer to <a href=\"http://cldr.unicode.org/index/cldr-spec/json\">CLDR-Data</a>.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>CLDR-Data</th>\n<th>Links</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/unicode-cldr/cldr-core/archive/35.1.0.zip\">cldr-core</a></td>\n<td><code class=\"language-text\">cldr-core</code> package provides the basic CLDR supplemental data.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/unicode-cldr/cldr-dates-full/archive/35.1.0.zip\">cldr-dates-full</a></td>\n<td><code class=\"language-text\">cldr-dates-full</code> package provides cldr-data for date/time formatting, including data for Gregorian calendar. Requires that the corresponding cldr-numbers package be installed as well.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/unicode-cldr/cldr-numbers-full/archive/35.1.0.zip\">cldr-numbers-full</a></td>\n<td><code class=\"language-text\">cldr-numbers-full</code> package provides cldr-data for number formatting.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/unicode-cldr/cldr-cal-islamic-full/archive/35.1.0.zip\">cldr-cal-islamic-full</a></td>\n<td><code class=\"language-text\">cldr-numbers-full</code> package provides islamic cldr-data .</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>Here, we have downloaded the cldr-data of <code class=\"language-text\">cldr-dates-full</code>, <code class=\"language-text\">cldr-numbers-full</code> and <code class=\"language-text\">cldr-core</code> for providing globalization support for grid component. You can find the culture-specific JSON data under the following location: <code class=\"language-text\">cldr-dates-full-35.1.0\\main</code>, <code class=\"language-text\">cldr-numbers-full-35.1.0\\main</code> and <code class=\"language-text\">cldr-core-35.1.0\\supplemental</code> respectively. Then, copy the <code class=\"language-text\">main</code> and <code class=\"language-text\">supplemental</code> folder from corresponding packages into the <code class=\"language-text\">wwwroot\\cldr-data</code> folder.</p>\n</li>\n<li>\n<p>To download the locale definition of Blazor components, refer to <a href=\"https://github.com/syncfusion/ej2-locale\">GitHub</a>.</p>\n</li>\n<li>\n<p>After downloading the <code class=\"language-text\">ej2-locale</code> repository, copy the <code class=\"language-text\">ej2-locale</code> folder with required locale files into the <code class=\"language-text\">wwwroot</code> folder.</p>\n</li>\n<li>\n<p>By default, the <code class=\"language-text\">ej2-locale</code> repository contains the localized text for static text present in components like button, placeholder, tooltip, and more.</p>\n</li>\n</ul>\n<h3 id=\"globalization-for-blazor-server-application\"><a href=\"#globalization-for-blazor-server-application\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Globalization for Blazor Server application</h3>\n<p>The locale object can be loaded in the <code class=\"language-text\">./pages/index.razor</code> file using the following code snippet. The current locale and currency can be changed for all Syncfusion server-side Blazor components by invoking the <code class=\"language-text\">SetCulture</code> and <code class=\"language-text\">SetCurrencyCode</code> functions with your desired culture name.</p>\n<p>Refer to the following code snippet for globalization in server-side Blazor components, where <code class=\"language-text\">EUR</code> is set as curreny code.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@functions <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token class-name\">Inject</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">IJSRuntime</span> JsRuntime <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token keyword\">async</span> <span class=\"token class-name\">Task</span> <span class=\"token function\">OnInitializedAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">await</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnInitializedAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>JsRuntime<span class=\"token punctuation\">.</span><span class=\"token function\">Ejs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">LoadLocaleData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wwwroot/de.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">LoadCldrData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wwwroot/cldr-data/main/de/numbers.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wwwroot/cldr-data/main/de/timeZoneNames.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wwwroot/cldr-data/main/de/ca-gregorian.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wwwroot/cldr-data/main/de/currencies.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wwwroot/cldr-data/supplemental/numberingSystems.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCulture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"de\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCurrencyCode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EUR\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"globalization-for-blazor-webassembly-application\"><a href=\"#globalization-for-blazor-webassembly-application\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Globalization for Blazor WebAssembly application</h3>\n<p>Inject the <code class=\"language-text\">HttpClient</code> module in the <code class=\"language-text\">index.razor</code> file using the following code snippet in the <code class=\"language-text\">pages/index.razor</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@inject <span class=\"token class-name\">HttpClient</span> Http<span class=\"token punctuation\">;</span></code></pre></div>\n<p>To load the locale object, read the object using the <code class=\"language-text\">http</code> request, store using variable, and then load as demonstrated in the following code snippet in <code class=\"language-text\">./pages/index.razor</code>. The current locale and currency can be changed for all Syncfusion client-side Blazor components by invoking the <code class=\"language-text\">SetCulture</code> and <code class=\"language-text\">SetCurrencyCode</code> functions with your desired culture name.</p>\n<p>Refer to the following code snippet for globalization in client-side Blazor components, where <code class=\"language-text\">EUR</code> is set as curreny code.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@functions <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token class-name\">Inject</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">IJSRuntime</span> JsRuntime <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token keyword\">async</span> <span class=\"token class-name\">Task</span> <span class=\"token function\">OnInitializedAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetJsonAsync</span><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ej2-locale/src/de.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> sup1 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetJsonAsync</span><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cldr-data/supplemental/numberingSystems.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> sup2 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetJsonAsync</span><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cldr-data/main/de/timeZoneNames.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> sup3 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetJsonAsync</span><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cldr-data/main/de/ca-gregorian.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> sup4 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetJsonAsync</span><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cldr-data/main/de/numbers.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> sup5 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Http<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetJsonAsync</span><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cldr-data/main/de/currencies.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n        <span class=\"token keyword\">var</span> cldrData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span> sup1<span class=\"token punctuation\">,</span> sup2<span class=\"token punctuation\">,</span> sup3<span class=\"token punctuation\">,</span> sup4<span class=\"token punctuation\">,</span> sup5 <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>JsRuntime<span class=\"token punctuation\">.</span><span class=\"token function\">Ejs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">LoadLocaleData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">LoadCldrData</span><span class=\"token punctuation\">(</span>cldrData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCulture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"de\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCurrencyCode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EUR\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The following screenshot illustrates the output.</p>\n<p><img src=\"/production/blazor/documentation/common/images/de_globalization.png\" alt=\"Grid\"></p>","id":"d18b0c0e-8313-595a-b560-08a59f240d54","fields":{"slug":"/common/globalization/","parentPath":"common","childPath":"globalization","gcse":"014729256687841406486:qzbiyd0sri4","header":"<div id=\"doc-right-toc\"><span>Contents</span>\n<ul>\n  <li class=\"doc-anchor-h2\"><a href=\"#load-cldr-data-to-an-application\">Load CLDR-Data to an application</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#globalization-for-blazor-server-application\">Globalization for Blazor Server application</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#globalization-for-blazor-webassembly-application\">Globalization for Blazor WebAssembly application</a></li>\n</ul></div>","breadCrumb":"Common/Globalization","isReleaseNotes":false,"title":"Globalization in Blazor [Preview] - Syncfusion","description":"Check out the documentation for Globalization in Blazor [Preview] ","platform":"Blazor [Preview]","isRobots":true}},"next":{"html":"<h1 id=\"deployment\"><a href=\"#deployment\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h1>\n<p>This section provides information about deploying applications with the Syncfusion Blazor components.</p>\n<p>You can get more information about deploying Blazor applications <a href=\"https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/blazor/\">Here</a>.</p>\n<h2 id=\"publish-blazor-application-with-visual-studio-2019\"><a href=\"#publish-blazor-application-with-visual-studio-2019\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Publish Blazor Application with Visual Studio 2019</h2>\n<ul>\n<li>Create the blazor Application with <a href=\"https://ej2.syncfusion.com/blazor/documentation/introduction/\">Syncfusion components</a>.</li>\n</ul>\n<blockquote>\n<p>Note: Need to change the base path of the application. Refer to the <a href=\"https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/blazor/?view=aspnetcore-3.1&#x26;tabs=visual-studio#app-base-path\">MSDN</a> for this.</p>\n</blockquote>\n<ul>\n<li>Right click the project name in <code class=\"language-text\">Solution Explorer</code> and select <code class=\"language-text\">Publish</code>.</li>\n</ul>\n<p><img src=\"/production/blazor/documentation/common/images/publish.png\" alt=\"Solution Explorer\"></p>\n<ul>\n<li>Then, select the <code class=\"language-text\">Folder</code> option and select the publishing target location.</li>\n</ul>\n<p><img src=\"/production/blazor/documentation/common/images/folder.png\" alt=\"Publish Location\"></p>\n<ul>\n<li>Check the configuration as Release by clicking the <code class=\"language-text\">Advanced...</code> option below the target location.</li>\n</ul>\n<p><img src=\"/production/blazor/documentation/common/images/config.png\" alt=\"Release Configuration\"></p>\n<blockquote>\n<p>Note : For <code class=\"language-text\">Blazor Server Application</code>, Deployment Mode is set to\n<code class=\"language-text\">Self-Contained</code>.\n<img src=\"/production/blazor/documentation/common/images/deploy.png\" alt=\"Deploy Mode\">\nBecause some dependencies are not loaded properly when we host the published folder.</p>\n</blockquote>\n<ul>\n<li>Then, click <code class=\"language-text\">Save</code> and <code class=\"language-text\">Publish</code>.</li>\n</ul>\n<blockquote>\n<p>Refer <a href=\"https://docs.microsoft.com/en-us/visualstudio/deployment/quickstart-deploy-to-azure?view=vs-2019\">here</a> for publishing the application to Azure App Service using Visual Studio.  </p>\n</blockquote>\n<h2 id=\"publish-blazor-application-with-cli\"><a href=\"#publish-blazor-application-with-cli\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Publish Blazor Application with CLI</h2>\n<p>Packing the application and its dependencies into a folder for deployment to a hosting system by using the <code class=\"language-text\">dotnet publish</code> command.</p>\n<p>For CLI deployment, run the following command from your root directory.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">    dotnet publish -c Release</code></pre></div>\n<p>For Blazor Server CLI deployment,</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">    dotnet publish -c Release --self-contained <span class=\"token boolean\">true</span> -r win-x86</code></pre></div>\n<p>Refer to the dotnet publish’s <a href=\"https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish?tabs=netcore21#arguments\">optional arguments</a>. </p>\n<h3 id=\"output-location\"><a href=\"#output-location\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Output location</h3>\n<p>Use the following command to specify the path for the output directory.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">    dotnet publish -c Release -o <span class=\"token operator\">&lt;</span>output directory<span class=\"token operator\">></span></code></pre></div>\n<blockquote>\n<p>If the output directory not specified, it defaults to <code class=\"language-text\">./bin/[configuration]/[framework]/publish/</code> for a <strong>framework-dependent deployment</strong> or <code class=\"language-text\">./bin/[configuration]/[framework]/[runtime]/publish/</code> for a <strong>self-contained deployment</strong>.</p>\n</blockquote>\n<p>If the path is relative, the output directory generated is relative to the project file location, not to the current working directory.</p>\n<p>Also refer to the MSDN reference <a href=\"https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/azure-apps/?view=aspnetcore-3.1&#x26;tabs=netcore-cli#deploy-the-app-self-contained\">here</a>.</p>\n<p>Now, you can host the published folder by using IIS or Azure app service.</p>\n<h2 id=\"see-also\"><a href=\"#see-also\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>See Also</h2>\n<ul>\n<li><a href=\"https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/blazor/?view=aspnetcore-3.1&#x26;tabs=visual-studio\">Host and Deploy blazor</a></li>\n<li><a href=\"https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/blazor/server?view=aspnetcore-3.1\">Host and deploy blazor server</a></li>\n<li><a href=\"https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/blazor/webassembly?view=aspnetcore-3.1\">Host and deploy ASP.NET Core Blazor WebAssembly</a></li>\n<li><a href=\"https://docs.microsoft.com/en-us/visualstudio/deployment/quickstart-deploy-to-azure?view=vs-2019\">Publish a Web app to Azure App Service using Visual Studio</a></li>\n<li><a href=\"https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/azure-apps/?view=aspnetcore-3.1&#x26;tabs=visual-studio\">Deploy ASP.NET Core apps to Azure App Service</a></li>\n</ul>","id":"4994b55b-f4b0-5102-afa4-9cd060afb6d6","fields":{"slug":"/common/deployment/","parentPath":"common","childPath":"deployment","gcse":"014729256687841406486:qzbiyd0sri4","header":"<div id=\"doc-right-toc\"><span>Contents</span>\n<ul>\n  <li class=\"doc-anchor-h2\"><a href=\"#publish-blazor-application-with-visual-studio-2019\">Publish Blazor Application with Visual Studio 2019</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#publish-blazor-application-with-cli\">Publish Blazor Application with CLI</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#output-location\">Output location</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#see-also\">See Also</a></li>\n</ul></div>","breadCrumb":"Common/Deployment","isReleaseNotes":false,"title":"Deployment in Blazor [Preview] - Syncfusion","description":"Check out the documentation for Deployment in Blazor [Preview] ","platform":"Blazor [Preview]","isRobots":true}},"gcse":"014729256687841406486:qzbiyd0sri4","header":"<div id=\"doc-right-toc\"><span>Contents</span>\n<ul>\n  <li class=\"doc-anchor-h2\"><a href=\"#loading-translations\">Loading translations</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#syncfusion-locale-text\">Syncfusion locale text</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#loading-translation-for-blazor-server-application\">Loading translation for Blazor Server application</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#localization-translation-for-blazor-webassembly-application\">Localization translation for Blazor WebAssembly application</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#customize-the-localized-text\">Customize the localized text</a></li>\n</ul></div>","breadCrumb":"Common/Localization","isReleaseNotes":false,"title":"Localization in Blazor [Preview] - Syncfusion","description":"Check out the documentation for Localization in Blazor [Preview] ","platform":"Blazor [Preview]","isRobots":true}}