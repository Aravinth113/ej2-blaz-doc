{"data":{"allPostTitles":{"edges":[{"node":{"fields":{"slug":"/diagram/automatic-layout/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/bpmn-shapes/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/commands/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/connectors/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/constraints/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/context-menu/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/grid-lines/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/group/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/interaction/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/labels/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/layers/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/native-events/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/nodes/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/overview/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/page-settings/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/ports/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/scroll-settings/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/serialization/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/shapes/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/swim-lane/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/symbol-palette/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/umldiagram/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/undo-redo/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/virtualization/","gcse":"014729256687841406486:qzbiyd0sri4'"}}}]},"postBySlug":{"html":"<h1 id=\"history-list\"><a href=\"#history-list\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>History List</h1>\n<p>Diagram tracks the history of actions that are performed after initializing the diagram and provides support to reverse and restore those changes.</p>\n<h2 id=\"undo-and-redo\"><a href=\"#undo-and-redo\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Undo and redo</h2>\n<p>Diagram provides built-in support to track the changes that are made through interaction and through public APIs. The changes can be reverted or restored either through shortcut keys or through commands.</p>\n<h2 id=\"undoredo-through-shortcut-keys\"><a href=\"#undoredo-through-shortcut-keys\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Undo/redo through shortcut keys</h2>\n<p>Undo/redo commands can be executed through shortcut keys. Shortcut key for undo is Ctrl+z and shortcut key for redo is Ctrl+y.</p>\n<h2 id=\"undoredo-through-public-apis\"><a href=\"#undoredo-through-public-apis\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Undo/redo through public APIs</h2>\n<p>The client-side methods <a href=\"/production/aspnet-core-blazor/documentation/api/diagram/\"><code class=\"language-text\">Undo</code></a> and <a href=\"/production/aspnet-core-blazor/documentation/api/diagram/\"><code class=\"language-text\">Redo</code></a> help you to revert/restore the changes. The following code example illustrates how to undo/redo the changes through script.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span>button onclick<span class=\"token operator\">=</span><span class=\"token string\">\"@Undo\"</span><span class=\"token operator\">></span>Undo<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>button onclick<span class=\"token operator\">=</span><span class=\"token string\">\"@Redo\"</span><span class=\"token operator\">></span>Redo<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> <span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span>\n@functions<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">EjsDiagram</span> diagram<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Reverts the last action performed</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>diagram<span class=\"token punctuation\">.</span><span class=\"token function\">Undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Redo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Restores the last undone action</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>diagram<span class=\"token punctuation\">.</span><span class=\"token function\">Redo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>When a change in the diagram is reverted or restored (undo/redo), the <code class=\"language-text\">HistoryChange</code> event gets triggered.</p>\n<h3 id=\"group-multiple-changes\"><a href=\"#group-multiple-changes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Group multiple changes</h3>\n<p>History list allows to revert or restore multiple changes through a single undo/redo command. For example, revert/restore the fill color change of multiple elements at a time.</p>\n<p>The client-side method <a href=\"/production/aspnet-core-blazor/documentation/api/diagram/\"><code class=\"language-text\">StartGroupAction</code></a> is used  to notify the diagram to start grouping the changes. The client-side method <a href=\"/production/aspnet-core-blazor/documentation/api/diagram/\"><code class=\"language-text\">EndGroupAction</code></a> is used to notify to stop grouping the changes. The following code illustrates how to undo/redo fillColor change of multiple elements at a time.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span>button onclick<span class=\"token operator\">=</span><span class=\"token string\">\"@Undo\"</span><span class=\"token operator\">></span>Undo<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>button onclick<span class=\"token operator\">=</span><span class=\"token string\">\"@Redo\"</span><span class=\"token operator\">></span>Redo<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> <span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span>\n@functions<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">EjsDiagram</span> diagram<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">DiagramNode</span> node1<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//Makes the changes here...</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">GroupAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>diagram<span class=\"token punctuation\">.</span><span class=\"token function\">StartGroupAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//Ends grouping the changes</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>diagram<span class=\"token punctuation\">.</span><span class=\"token function\">EndGroupAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Reverts the last action performed</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>diagram<span class=\"token punctuation\">.</span><span class=\"token function\">Undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Redo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Restores the last undone action</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>diagram<span class=\"token punctuation\">.</span><span class=\"token function\">Redo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"track-custom-changes\"><a href=\"#track-custom-changes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Track custom changes</h3>\n<p>Diagram provides options to track the changes that are made to custom properties. For example, in case of an employee relationship diagram, track the changes in the employee information. The <code class=\"language-text\">HistoryList</code> of the diagram enables you to track such changes.\nThe following example illustrates how to track such custom property changes.</p>\n<p>Before changing the employee information, save the existing information to history list by using the client-side method push of <code class=\"language-text\">HistoryList</code>.\nThe history list <code class=\"language-text\">CanLog</code> method can be used which takes a history entry as argument and returns whether the specific entry can be added or not.</p>\n<p>The following code example illustrates how to save the existing property values.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"NewIdea\"</span> @<span class=\"token keyword\">ref</span> <span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span><span class=\"token class-name\">Customizes</span> the appearance of the node<span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"#6BA5D7\"</span> StrokeColor<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeShapeStyle<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNodeAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span><span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span><span class=\"token class-name\">Customizes</span> the appearance of the annotations<span class=\"token operator\">*</span>@\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeAnnotationStyle</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span> StrokeColor<span class=\"token operator\">=</span><span class=\"token string\">\"None\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeAnnotationStyle<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotation<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span><span class=\"token class-name\">Customizes</span> the appearance of the node shadow style<span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramShadow</span> Angle<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span> Opacity<span class=\"token operator\">=</span><span class=\"token string\">\"0.8\"</span> Distance<span class=\"token operator\">=</span><span class=\"token string\">\"9\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramShadow<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span>\n@functions<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">EjsDiagram</span> diagram<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">DiagramNode</span> node1<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">TrackCustomActions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//Creates a custom entry</span>\n        <span class=\"token keyword\">object</span> entry <span class=\"token operator\">=</span> node1<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// adds that to history list</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>diagram<span class=\"token punctuation\">.</span><span class=\"token function\">AddHistoryEntry</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>diagram<span class=\"token punctuation\">.</span><span class=\"token function\">DataBind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":3,"excerpt":"History List Diagram tracks the history of actions that are performed after initializing the diagram and provides support to reverse and…","fields":{"slug":"/diagram/undo-redo/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},"pageContext":{"slug":"/diagram/undo-redo/","previous":{"html":"<h1 id=\"virtualization\"><a href=\"#virtualization\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Virtualization</h1>\n<h2 id=\"virtualization-in-diagram\"><a href=\"#virtualization-in-diagram\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Virtualization in Diagram</h2>\n<p>Virtualization is the process of loading the diagramming objects available in the visible area of the Diagram control, that is, only the diagramming objects that lie within the <code class=\"language-text\">ViewPort</code> of the Scroll Viewer are loaded (remaining objects are loaded only when they come into view).</p>\n<p>This feature gives an optimized performance while loading and dragging items to the Diagram that consists of many Nodes and Connectors.</p>\n<p>The following code illustrates how to enable Virtualization mode in the diagram.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span> Constraints<span class=\"token operator\">=</span><span class=\"token string\">\"@constraints\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span>\n\n@functions<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DiagramConstraints</span> constraints <span class=\"token operator\">=</span> DiagramConstraints<span class=\"token punctuation\">.</span>Default <span class=\"token operator\">|</span> DiagramConstraints<span class=\"token punctuation\">.</span>Virtualization<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","id":"55cf7505-2a8c-59a1-864f-9aeb97ef8de6","fields":{"slug":"/diagram/virtualization/","parentPath":"diagram","childPath":"virtualization","gcse":"014729256687841406486:qzbiyd0sri4'","header":"","breadCrumb":"Diagram/Virtualization","isReleaseNotes":false,"seoContent":"Virtualization in ASP.NET Core Blazor [Preview] Diagram | Syncfusion Documentation","platform":"ASP.NET Core Blazor [Preview]","isRobots":true}},"next":{"html":"<h1 id=\"uml-diagram-shapes\"><a href=\"#uml-diagram-shapes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uml Diagram Shapes</h1>\n<h2 id=\"uml-class-diagram-shapes\"><a href=\"#uml-class-diagram-shapes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uml Class Diagram Shapes</h2>\n<p>Class diagram is used to represent the static view of an application. The class diagrams are widely used in the modelling of object oriented systems because they are the only UML diagrams which can be mapped directly with object-oriented languages.\nDiagram supports to generate the class diagram shapes from business logic.</p>\n<p>The UML class diagram shapes are explained as follows.</p>\n<h2 id=\"class\"><a href=\"#class\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Class</h2>\n<ul>\n<li>\n<p>A class describes a set of objects that shares the same specifications of features, constraints, and semantics. To define a class object, you should define the classifier as <code class=\"language-text\">Class</code>.</p>\n</li>\n<li>\n<p>Also, define the <code class=\"language-text\">Name</code>, <code class=\"language-text\">Attributes</code>, and <code class=\"language-text\">Methods</code> of the class using the class property of node.</p>\n</li>\n<li>\n<p>The attribute’s <code class=\"language-text\">Name</code>, <code class=\"language-text\">Type</code>, and <code class=\"language-text\">Scope</code> properties allow you to define the name, data type, and visibility of the attribute.</p>\n</li>\n<li>\n<p>The method’s <code class=\"language-text\">Name</code>, <code class=\"language-text\">Parameters</code>, <code class=\"language-text\">Type</code>, and <code class=\"language-text\">Scope</code> properties allow you to define the name, parameter, return type, and visibility of the methods.</p>\n</li>\n<li>\n<p>The method parameters object properties allow you to define the name and type of the parameter.</p>\n</li>\n<li>\n<p>The following code example illustrates how to create a class.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"Patient\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"40\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"105\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"85\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> type of shape and classifier <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlClassifierShape</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Syncfusion.EJ2.Blazor.Diagrams.Shapes.UmlClassifier\"</span> Classifier<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Class\"</span><span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the <span class=\"token keyword\">class</span> <span class=\"token keyword\">object</span> with <span class=\"token class-name\">Name</span> of a <span class=\"token keyword\">class</span> header <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlClass</span> Name<span class=\"token operator\">=</span><span class=\"token string\">\"Patient\"</span><span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the collection of attributes <span class=\"token operator\">*</span>@\n                    <span class=\"token operator\">&lt;</span>DiagramUmlClassAttributes <span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlClassAttribute</span> Name<span class=\"token operator\">=</span><span class=\"token string\">\"accepted\"</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"Date\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlClassAttribute<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlClassAttributes<span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the collection of methods <span class=\"token operator\">*</span>@\n                    <span class=\"token operator\">&lt;</span>DiagramUmlClassMethods <span class=\"token operator\">></span>\n                        @<span class=\"token operator\">*</span> sets the arguments <span class=\"token keyword\">for</span> methods <span class=\"token operator\">*</span>@\n                        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlClassMethod</span> Name<span class=\"token operator\">=</span><span class=\"token string\">\"GetHistory\"</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"GetHistory\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlClassMethod<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlClassMethods<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlClass<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlClassifierShape<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"interface\"><a href=\"#interface\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interface</h2>\n<ul>\n<li>\n<p>An Interface is a kind of classifier that represents a declaration of a set of coherent public features and obligations. To create an interface, define the classifier property as <code class=\"language-text\">Interface</code>.</p>\n</li>\n<li>\n<p>Also, define the <code class=\"language-text\">Name</code>, <code class=\"language-text\">Attributes</code>, and <code class=\"language-text\">Methods</code> of the interface using the interface property of the node.</p>\n</li>\n<li>\n<p>The attribute’s name, type, and scope properties allow you to define the name, data type, and visibility of the attribute.</p>\n</li>\n<li>\n<p>The method’s name, parameter, type, and scope properties allow you to define the name, parameter, return type, and visibility of the methods.</p>\n</li>\n<li>\n<p>The method parameter object properties of name and type allows you to define the name and type of the parameter.</p>\n</li>\n<li>\n<p>The following code example illustrates how to create an interface.</p>\n</li>\n</ul>\n<h2 id=\"enumeration\"><a href=\"#enumeration\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Enumeration</h2>\n<ul>\n<li>\n<p>To define an enumeration, define the classifier property of node as <code class=\"language-text\">Enumeration</code>. Also, define the name and members of the enumeration using the enumeration property of the node.</p>\n</li>\n<li>\n<p>You can set a name for the enumeration members collection using the name property of members collection.</p>\n</li>\n<li>\n<p>The following code example illustrates how to create an enumeration.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"Patient\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"40\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"105\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"85\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> type of shape and classifier <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlClassifierShape</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Syncfusion.EJ2.Blazor.Diagrams.Shapes.UmlClassifier\"</span> Classifier<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Enumeration\"</span><span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the enumeration <span class=\"token keyword\">object</span> with <span class=\"token class-name\">Name</span> of a <span class=\"token keyword\">class</span> header <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlEnumeration</span> Name<span class=\"token operator\">=</span><span class=\"token string\">\"AccountType\"</span><span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span> sets the <span class=\"token class-name\">Enumeration</span> Members <span class=\"token operator\">*</span>@\n                    <span class=\"token operator\">&lt;</span>DiagramUmlEnumerationMembers<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlEnumerationMember</span> Name<span class=\"token operator\">=</span><span class=\"token string\">\"Checking Account\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlEnumerationMember<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlEnumerationMember</span> Name<span class=\"token operator\">=</span><span class=\"token string\">\"Savings Account\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlEnumerationMember<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlEnumerationMember</span> Name<span class=\"token operator\">=</span><span class=\"token string\">\"Credit Account\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlEnumerationMember<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlEnumerationMembers<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlEnumeration<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlClassifierShape<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"connector-shapes\"><a href=\"#connector-shapes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Connector shapes</h2>\n<ul>\n<li>\n<p>The connector shape property defines the role or meaning of the connector.</p>\n</li>\n<li>\n<p>The different types of connector shapes are <code class=\"language-text\">BPMN</code>, <code class=\"language-text\">UmlClassifier</code> and <code class=\"language-text\">UmlActivity</code> and can render these shapes by setting the connector shape type property.</p>\n</li>\n<li>\n<p>The type of flow shapes in a BPMN process are sequence, association, and message.</p>\n</li>\n</ul>\n<h2 id=\"relationships\"><a href=\"#relationships\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Relationships</h2>\n<ul>\n<li>\n<p>A relationship is a general term covering the specific types of logical connections found on class diagrams.</p>\n</li>\n<li>\n<p>The list of relationships are demonstrated as follows.</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Shape</th>\n<th>Image</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Association</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Association.png\" alt=\"Association\"></td>\n</tr>\n<tr>\n<td>Aggregation</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Aggregation.png\" alt=\"Aggregation\"></td>\n</tr>\n<tr>\n<td>Composition</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Composition.png\" alt=\"Composition\"></td>\n</tr>\n<tr>\n<td>Inheritance</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Inheritance.png\" alt=\"Inheritance\"></td>\n</tr>\n<tr>\n<td>Dependency</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Dependency.png\" alt=\"Dependency\"></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"association\"><a href=\"#association\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Association</h2>\n<p>Association is basically a set of links that connects elements of an UML model. The type of association are as follows.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. Directional\n2. BiDirectional</code></pre></div>\n<p>The association property allows you to define the type of association. The default value of association is “Directional”. The following code example illustrates how to create an association.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the <span class=\"token class-name\">Diagram</span> uml connector <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnector</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connector1\"</span><span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the source and target points <span class=\"token keyword\">for</span> the connector <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorSourcePoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorSourcePoint<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorTargetPoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorTargetPoint<span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the type of the relationships <span class=\"token keyword\">as</span> association <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramRelationShip</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@ConnectionShapes.UmlClassifier\"</span> Relationship<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Association\"</span> AssociationType<span class=\"token operator\">=</span><span class=\"token string\">\"@AssociationFlow.BiDirectional\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramRelationShip<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnector<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"aggregation\"><a href=\"#aggregation\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Aggregation</h2>\n<p>Aggregation is a binary association between a property and one or more composite objects which group together a set of instances.\nAggregation is decorated with a hollow diamond. To create an aggregation shape, define the relationship as “aggregation”.</p>\n<p>The following code example illustrates how to create an aggregation.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the <span class=\"token class-name\">Diagram</span> uml connector <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnector</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connector1\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the source and target points <span class=\"token keyword\">for</span> the connector <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorSourcePoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorSourcePoint<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorTargetPoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorTargetPoint<span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span>  <span class=\"token class-name\">Sets</span> the type of the relationships <span class=\"token keyword\">as</span> Aggregation <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramRelationShip</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@ConnectionShapes.UmlClassifier\"</span> Relationship<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Aggregation\"</span> AssociationType<span class=\"token operator\">=</span><span class=\"token string\">\"@AssociationFlow.BiDirectional\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramRelationShip<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnector<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"composition\"><a href=\"#composition\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Composition</h2>\n<p>Composition is a “strong” form of “aggregation”. Composition is decorated with a black diamond. To create a composition shape, define the relationship property of connector as “composition”.</p>\n<p>The following code example illustrates how to create a composition.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the <span class=\"token class-name\">Diagram</span> uml connector <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnector</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connector1\"</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorSourcePoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorSourcePoint<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorTargetPoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorTargetPoint<span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the type of the relationships <span class=\"token keyword\">as</span> Composition <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramRelationShip</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@ConnectionShapes.UmlClassifier\"</span> Relationship<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Composition\"</span> AssociationType<span class=\"token operator\">=</span><span class=\"token string\">\"@AssociationFlow.BiDirectional\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramRelationShip<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnector<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"dependency\"><a href=\"#dependency\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dependency</h2>\n<p>Dependency is a directed relationship, which is used to show that some UML elements needs or depends on other model elements for specifications. Dependency is shown as dashed line with opened arrow.\nTo create a dependency, define the relationship property of connector as “dependency”.</p>\n<p>The following code example illustrates how to create an dependency.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the <span class=\"token class-name\">Diagram</span> uml connector <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnector</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connector1\"</span><span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the source and target points <span class=\"token keyword\">for</span> the connector <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorSourcePoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorSourcePoint<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorTargetPoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorTargetPoint<span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span>  <span class=\"token class-name\">Sets</span> the type of the relationships <span class=\"token keyword\">as</span> Dependency <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramRelationShip</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@ConnectionShapes.UmlClassifier\"</span> Relationship<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Dependency\"</span> AssociationType<span class=\"token operator\">=</span><span class=\"token string\">\"@AssociationFlow.BiDirectional\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramRelationShip<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnector<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"inheritance\"><a href=\"#inheritance\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Inheritance</h2>\n<p>Inheritance is also called as “generalization”. Inheritance is a binary taxonomic directed relationship between a more general classifier (super class) and a more specific classifier (subclass).\nInheritance is shown as a line with hollow triangle.</p>\n<p>To create an inheritance, define the relationship as “inheritance”.</p>\n<p>The following code example illustrates how to create an inheritance.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the <span class=\"token class-name\">Diagram</span> uml connector <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnector</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connector1\"</span><span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the source and target points <span class=\"token keyword\">for</span> the connector <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorSourcePoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorSourcePoint<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorTargetPoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorTargetPoint<span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span>  <span class=\"token class-name\">Sets</span> the type of the relationships <span class=\"token keyword\">as</span> Inheritance <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramRelationShip</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@ConnectionShapes.UmlClassifier\"</span> Relationship<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Inheritance\"</span> AssociationType<span class=\"token operator\">=</span><span class=\"token string\">\"@AssociationFlow.BiDirectional\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramRelationShip<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnector<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"multiplicity\"><a href=\"#multiplicity\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Multiplicity</h2>\n<p>Multiplicity is a definition of an inclusive interval of non-negative integers to specify the allowable number of instances of described element. The type of multiplicity are as follows.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. OneToOne\n2. ManyToOne\n3. OneToMany\n4. ManyToMany</code></pre></div>\n<ul>\n<li>\n<p>By default the multiplicity will be considered as “OneToOne”.</p>\n</li>\n<li>\n<p>The multiplicity property in UML allows you to specify large number of elements or some collection of elements.</p>\n</li>\n<li>\n<p>The shape multiplicity’s source property is used to set the source label to connector and the target property is used to set the target label to connector.</p>\n</li>\n<li>\n<p>To set an optionality or cardinality for the connector source label, use optional property.</p>\n</li>\n<li>\n<p>The <code class=\"language-text\">LowerBounds</code> and <code class=\"language-text\">UpperBounds</code> could be natural constants or constant expressions evaluated to natural (non negative) number. Upper bound could be also specified as asterisk ‘*’ which denotes unlimited number of elements. Upper bound should be greater than or equal to the lower bound.</p>\n</li>\n<li>\n<p>The following code example illustrates how to customize the multiplicity.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"> <span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the <span class=\"token class-name\">Diagram</span> uml connector <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnector</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connector1\"</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Segments.Straight\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the source and target points <span class=\"token keyword\">for</span> the connector <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorSourcePoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorSourcePoint<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorTargetPoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorTargetPoint<span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> sets the <span class=\"token class-name\">UmlClassifier</span> shape connector <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnectorShape</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@ConnectionShapes.UmlClassifier\"</span><span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span>  <span class=\"token class-name\">Sets</span> the type of the relationships <span class=\"token keyword\">as</span> Dependency <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramRelationShip</span> Relationship<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Dependency\"</span><span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the type of multiplicity <span class=\"token operator\">*</span>@\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramClassifierMultiplicity</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Multiplicity.OneToMany\"</span><span class=\"token operator\">></span>\n                        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the source label <span class=\"token operator\">*</span>@\n                        <span class=\"token operator\">&lt;</span>SourceMultiplicityLabel<span class=\"token operator\">></span>\n                            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the optionality<span class=\"token operator\">/</span>cardinality <span class=\"token keyword\">for</span> the connector and <span class=\"token class-name\">Specifies</span> interval <span class=\"token keyword\">for</span> number of instances of described element <span class=\"token operator\">*</span>@\n                            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorsMultiplicityLabel</span> Optional<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> LowerBounds<span class=\"token operator\">=</span><span class=\"token string\">\"80\"</span> UpperBounds<span class=\"token operator\">=</span><span class=\"token string\">\"67\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorsMultiplicityLabel<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SourceMultiplicityLabel<span class=\"token operator\">></span>\n                        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the target label <span class=\"token operator\">*</span>@\n                        <span class=\"token operator\">&lt;</span>TargerMultiplicityLabel<span class=\"token operator\">></span>\n                            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the optionality<span class=\"token operator\">/</span>cardinality <span class=\"token keyword\">for</span> the connector and <span class=\"token class-name\">Specifies</span> interval <span class=\"token keyword\">for</span> number of instances of described element <span class=\"token operator\">*</span>@\n                            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorsMultiplicityLabel</span> Optional<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> LowerBounds<span class=\"token operator\">=</span><span class=\"token string\">\"78\"</span> UpperBounds<span class=\"token operator\">=</span><span class=\"token string\">\"90\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorsMultiplicityLabel<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TargerMultiplicityLabel<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramClassifierMultiplicity<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramRelationShip<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectorShape<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnector<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"umlactivity-diagram\"><a href=\"#umlactivity-diagram\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UmlActivity diagram</h2>\n<p>Activity diagram is basically a flowchart to represent the flow from one activity to another. The activity can be described as an operation of the system.</p>\n<p>The purpose of an activity diagram can be described as follows.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. Draw the activity flow of a system.\n\n2. Describe the sequence from one activity to another.\n\n3. Describe the parallel, branched, and concurrent flow of the system.</code></pre></div>\n<p>To create a UmlActivity, define type as “UmlActivity” and the list of built-in shapes as demonstrated as follows and it should be set in the “shape” property.</p>\n<table>\n<thead>\n<tr>\n<th>Shape</th>\n<th>Image</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Action</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Action.png\" alt=\"Action\"></td>\n</tr>\n<tr>\n<td>Decision</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Decision.png\" alt=\"Decision\"></td>\n</tr>\n<tr>\n<td>MergeNode</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/MergeNode.png\" alt=\"MergeNode\"></td>\n</tr>\n<tr>\n<td>InitialNode</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/InitialNode.png\" alt=\"InitialNode\"></td>\n</tr>\n<tr>\n<td>FinalNode</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/FinalNode.png\" alt=\"FinalNode\"></td>\n</tr>\n<tr>\n<td>ForkNode</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/ForkNode.png\" alt=\"ForkNode\"></td>\n</tr>\n<tr>\n<td>JoinNode</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/JoinNode.png\" alt=\"JoinNode\"></td>\n</tr>\n<tr>\n<td>TimeEvent</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/TimeEvent.png\" alt=\"TimeEvent\"></td>\n</tr>\n<tr>\n<td>AcceptingEvent</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/AcceptingEvent.png\" alt=\"AcceptingEvent\"></td>\n</tr>\n<tr>\n<td>SendSignal</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/SendSignal.png\" alt=\"SendSignal\"></td>\n</tr>\n<tr>\n<td>ReceiveSignal</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/ReceiveSignal.png\" alt=\"ReceiveSignal\"></td>\n</tr>\n<tr>\n<td>StructuredNode</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/StructuredNode.png\" alt=\"StructuredNode\"></td>\n</tr>\n<tr>\n<td>Note</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Note.png\" alt=\"Note\"></td>\n</tr>\n</tbody>\n</table>\n<p>The following code illustrates how to create a UmlActivity shapes.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"> <span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the activity shape <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"UmlDiagram\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> <span class=\"token class-name\">Type</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">UmlActivity</span> and <span class=\"token class-name\">Shape</span> <span class=\"token keyword\">as</span> Action <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlActivityShape</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Shapes.UmlActivity\"</span> Shape<span class=\"token operator\">=</span><span class=\"token string\">\"@UmlActivityShapes.Action\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlActivityShape<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"umlactivity-connector\"><a href=\"#umlactivity-connector\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UmlActivity connector</h3>\n<p>To create an UmlActivity connector, define the type as “UmlActivity” and flow as either “Exception” or “Control” or “Object”.</p>\n<p>The following code illustrates how to create a UmlActivity connector.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the <span class=\"token class-name\">Diagram</span> uml connector <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnector</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connector1\"</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Segments.Straight\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the source and target points <span class=\"token keyword\">for</span> the connector <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorSourcePoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"700\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorSourcePoint<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorTargetPoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"800\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorTargetPoint<span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> sets the <span class=\"token class-name\">UmlClassifier</span> shape connector <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnectorShape</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@ConnectionShapes.UmlActivity\"</span> Flow<span class=\"token operator\">=</span><span class=\"token string\">\"@UmlActivityFlows.Exception\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectorShape<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnector<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"editing\"><a href=\"#editing\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Editing</h3>\n<p>You can edit the name, attributes, and methods of the class diagram shapes just double clicking, similar to editing a node annotation.</p>\n<p>The following image illustrates how the text editor looks in an edit mode.</p>\n<p><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/ClassEdit.png\" alt=\"Editing Class Diagram\"></p>","id":"7c3e26dc-c7b0-51f5-b6da-b4be69b14327","fields":{"slug":"/diagram/umldiagram/","parentPath":"diagram","childPath":"umldiagram","gcse":"014729256687841406486:qzbiyd0sri4'","header":"<div id=\"doc-right-toc\"><span>Contents</span>\n<ul>\n  <li class=\"doc-anchor-h2\"><a href=\"#uml-class-diagram-shapes\">Uml Class Diagram Shapes</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#class\">Class</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#interface\">Interface</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#enumeration\">Enumeration</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#connector-shapes\">Connector shapes</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#relationships\">Relationships</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#association\">Association</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#aggregation\">Aggregation</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#composition\">Composition</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#dependency\">Dependency</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#inheritance\">Inheritance</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#multiplicity\">Multiplicity</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#umlactivity-diagram\">UmlActivity diagram</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#umlactivity-connector\">UmlActivity connector</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#editing\">Editing</a></li>\n</ul></div>","breadCrumb":"Diagram/UML Diagram Shapes","isReleaseNotes":false,"seoContent":"UML Diagram Shapes in ASP.NET Core Blazor [Preview] Diagram | Syncfusion Documentation","platform":"ASP.NET Core Blazor [Preview]","isRobots":true}},"gcse":"014729256687841406486:qzbiyd0sri4'","header":"<div id=\"doc-right-toc\"><span>Contents</span>\n<ul>\n  <li class=\"doc-anchor-h2\"><a href=\"#undo-and-redo\">Undo and redo</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#undoredo-through-shortcut-keys\">Undoredo through shortcut keys</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#undoredo-through-public-apis\">Undoredo through public APIs</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#group-multiple-changes\">Group multiple changes</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#track-custom-changes\">Track custom changes</a></li>\n</ul></div>","breadCrumb":"Diagram/Undo Redo","isReleaseNotes":false,"seoContent":"Undo Redo in ASP.NET Core Blazor [Preview] Diagram | Syncfusion Documentation","platform":"ASP.NET Core Blazor [Preview]","isRobots":true}}