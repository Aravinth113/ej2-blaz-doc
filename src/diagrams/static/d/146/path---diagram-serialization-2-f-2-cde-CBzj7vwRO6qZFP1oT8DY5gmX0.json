{"data":{"allPostTitles":{"edges":[{"node":{"fields":{"slug":"/diagram/automatic-layout/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/bpmn-shapes/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/commands/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/connectors/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/constraints/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/context-menu/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/grid-lines/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/group/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/interaction/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/labels/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/layers/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/native-events/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/nodes/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/overview/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/page-settings/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/ports/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/scroll-settings/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/serialization/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/shapes/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/swim-lane/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/symbol-palette/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/umldiagram/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/undo-redo/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/virtualization/","gcse":"014729256687841406486:qzbiyd0sri4'"}}}]},"postBySlug":{"html":"<h1 id=\"serialization\"><a href=\"#serialization\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Serialization</h1>\n<p><strong>Serialization</strong>Â is the process of saving and loading for state persistence of the diagram.</p>\n<h2 id=\"save\"><a href=\"#save\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Save</h2>\n<p>The diagram is serialized as string while saving. The client-side method, <a href=\"/production/aspnet-core-blazor/documentation/api/diagram/#saveDiagram\"><code class=\"language-text\">SaveDiagram</code></a> helps to serialize the diagram as a string. The following code illustrates how to save the diagram.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span>button id<span class=\"token operator\">=</span><span class=\"token string\">\"button1\"</span> onclick<span class=\"token operator\">=</span><span class=\"token string\">\"@Save\"</span><span class=\"token operator\">></span>Save<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>button id<span class=\"token operator\">=</span><span class=\"token string\">\"button2\"</span> onclick<span class=\"token operator\">=</span><span class=\"token string\">\"@Load\"</span><span class=\"token operator\">></span>Load<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n@<span class=\"token operator\">*</span> initialize diagram component <span class=\"token operator\">*</span>@\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span><span class=\"token class-name\">Customizes</span> the appearance of the node<span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"#6BA5D7\"</span> StrokeColor<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeShapeStyle<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNodeAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span><span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span><span class=\"token class-name\">Customizes</span> the appearance of the annotations<span class=\"token operator\">*</span>@\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeAnnotationStyle</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span> StrokeColor<span class=\"token operator\">=</span><span class=\"token string\">\"None\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeAnnotationStyle<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotation<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span>\n@functions<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">EjsDiagram</span> diagram<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">DiagramNode</span> node1<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">string</span> data<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">string</span> save <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>diagram<span class=\"token punctuation\">.</span><span class=\"token function\">SaveDiagram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//returns serialized string of the Diagram</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> save<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//Loads the Diagram from saved json data</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>diagram<span class=\"token punctuation\">.</span><span class=\"token function\">LoadDiagram</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This string can be converted to JSON data and stored for future use. The following snippet illustrates how to save the serialized string into local storage.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fileName'</span><span class=\"token punctuation\">,</span> saveData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsaveData <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fileName'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Diagram can also be saved as raster or vector image files. For more information about saving the diagram as images, refer to <code class=\"language-text\">Print and Export</code>.</p>\n<h2 id=\"load\"><a href=\"#load\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Load</h2>\n<p>Diagram is loaded from the serialized string data by client-side method, <a href=\"/production/aspnet-core-blazor/documentation/api/diagram/#loadDiagram\"><code class=\"language-text\">loadDiagram</code></a>.\nThe following code illustrates how to load the diagram from serialized string data.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span>button id<span class=\"token operator\">=</span><span class=\"token string\">\"button1\"</span> onclick<span class=\"token operator\">=</span><span class=\"token string\">\"@Save\"</span><span class=\"token operator\">></span>Save<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>button id<span class=\"token operator\">=</span><span class=\"token string\">\"button2\"</span> onclick<span class=\"token operator\">=</span><span class=\"token string\">\"@Load\"</span><span class=\"token operator\">></span>Load<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n@<span class=\"token operator\">*</span> initialize diagram component <span class=\"token operator\">*</span>@\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span><span class=\"token class-name\">Customizes</span> the appearance of the node<span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"#6BA5D7\"</span> StrokeColor<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeShapeStyle<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNodeAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span><span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span><span class=\"token class-name\">Customizes</span> the appearance of the annotations<span class=\"token operator\">*</span>@\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeAnnotationStyle</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span> StrokeColor<span class=\"token operator\">=</span><span class=\"token string\">\"None\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeAnnotationStyle<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotation<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span>\n@functions<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">EjsDiagram</span> diagram<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">DiagramNode</span> node1<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">string</span> data<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">string</span> save <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>diagram<span class=\"token punctuation\">.</span><span class=\"token function\">SaveDiagram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//returns serialized string of the Diagram</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> save<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//Loads the Diagram from saved json data</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>diagram<span class=\"token punctuation\">.</span><span class=\"token function\">LoadDiagram</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>Note: Before loading a new diagram, existing diagram is cleared.</p>\n</blockquote>\n<h2 id=\"prevent-default-values\"><a href=\"#prevent-default-values\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prevent Default Values</h2>\n<p>The diagram provides supports to simplifying the saved JSON object without adding the default properties that are presented in the diagram.\nThe following code illustrates how to simplify the JSON object.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramSerializationSettings</span> PreventDefaults<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramSerializationSettings<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>","timeToRead":3,"excerpt":"Serialization Serialization Â is the process of saving and loading for state persistence of the diagram. Save The diagram is serialized asâ¦","fields":{"slug":"/diagram/serialization/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},"pageContext":{"slug":"/diagram/serialization/","previous":{"html":"<h1 id=\"shapes\"><a href=\"#shapes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Shapes</h1>\n<p>Diagram provides support to add different kind of nodes. They are as follows:</p>\n<ul>\n<li>Text node</li>\n<li>Image node</li>\n<li>HTML node</li>\n<li>Native node</li>\n<li>Basic shapes</li>\n<li>Flow shapes</li>\n</ul>\n<!-- markdownlint-disable MD033 -->\n<!-- markdownlint-disable MD010 -->\n<h2 id=\"text\"><a href=\"#text\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Text</h2>\n<p>Texts can be added to the diagram as <code class=\"language-text\">Text</code> nodes. The shape property of the node allows you to set the type of node and for text nodes, it should be set as <strong>text</strong>. In addition, define the content object that is used to define the text to be added and style is used to customize the appearance of that text. The following code illustrates how to create a text node.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Creates</span> a text node <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramText</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Syncfusion.EJ2.Blazor.Diagrams.Shapes.Text\"</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Text Node\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramText<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"White\"</span> StrokeColor<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeShapeStyle<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"image\"><a href=\"#image\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Image</h2>\n<p>Diagram allows to add images as <code class=\"language-text\">Image</code> nodes. The shape property of node allows you to set the type of node and for image nodes, it should be set as <strong>image</strong>. In addition, the source property of shape enables you to set the image source.</p>\n<p>The following code illustrates how an image node is created.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Creates</span> a image node <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramImage</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Syncfusion.EJ2.Blazor.Diagrams.Shapes.Image\"</span>\n                            Source<span class=\"token operator\">=</span><span class=\"token string\">\"http://www.syncfusion.com/content/images/nuget/sync_logo_icon.png\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramImage<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"White\"</span> StrokeColor<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeShapeStyle<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<blockquote>\n<p>Note: Deploy your HTML file in the web application and export the diagram (image node) or else the image node will not be exported in the Chrome and Firefox due to security issues. Refer to the following link.</p>\n</blockquote>\n<p>Link 1: <a href=\"http://asked.online/draw-images-on-canvas-locally-using-chrome/2546077/\"><code class=\"language-text\">http://asked.online/draw-images-on-canvas-locally-using-chrome/2546077/</code></a></p>\n<p>Link 2: <a href=\"http://stackoverflow.com/questions/4761711/local-image-in-canvas-in-chrome\"><code class=\"language-text\">http://stackoverflow.com/questions/4761711/local-image-in-canvas-in-chrome</code></a></p>\n<h2 id=\"image-alignment\"><a href=\"#image-alignment\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Image alignment</h2>\n<p>Stretch and align the image content anywhere but within the node boundary.</p>\n<p>The scale property of the node allows to stretch the image as you desired (either to maintain proportion or to stretch). By default, the <a href=\"https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2~Syncfusion.EJ2.Diagrams.Scale.html\"><code class=\"language-text\">Scale</code></a> property of the node is set as <strong>meet</strong>.\nThe following code illustrates how to scale or stretch the content of the image node.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> an image alignment <span class=\"token keyword\">for</span> the image node <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramImage</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Syncfusion.EJ2.Blazor.Diagrams.Shapes.Image\"</span>\n                            Source<span class=\"token operator\">=</span><span class=\"token string\">\"http://www.syncfusion.com/content/images/nuget/sync_logo_icon.png\"</span> Scale<span class=\"token operator\">=</span><span class=\"token string\">\"@Scale.Meet\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramImage<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"White\"</span> StrokeColor<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeShapeStyle<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<p>The following table illustrates all the possible scale options for the image node.</p>\n<table>\n<thead>\n<tr>\n<th>Values</th>\n<th>Images</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>None</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Image1.png\" alt=\"None Alignment\"></td>\n</tr>\n<tr>\n<td>Meet</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Image2.png\" alt=\"Meet Alignment\"></td>\n</tr>\n<tr>\n<td>Slice</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Image3.png\" alt=\"Slice Alignment\"></td>\n</tr>\n<tr>\n<td>Stretch</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Image4.png\" alt=\"Stretch Alignment\"></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"html\"><a href=\"#html\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML</h2>\n<p>Html elements can be embedded in the diagram through <code class=\"language-text\">Html</code> type node. The shape property of node allows you to set the type of node and to create a HTML node it should be set as <code class=\"language-text\">HTML</code>. The following code illustrates how an Html node is created.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> ModelType<span class=\"token operator\">=</span><span class=\"token string\">\"@model\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"400\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span> AddInfo<span class=\"token operator\">=</span><span class=\"token string\">\"@addinfo\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramHtml</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Shapes.HTML\"</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Content<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"template\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"background-color:blue;height:100px\"</span><span class=\"token operator\">></span>@<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>context <span class=\"token keyword\">as</span> Node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>addInfo<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Content<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramHtml<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNodeAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Node Label\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeAnnotationStyle</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span> StrokeColor<span class=\"token operator\">=</span><span class=\"token string\">\"None\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeAnnotationStyle<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotation<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span>\n\n@functions<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">string</span> addinfo <span class=\"token operator\">=</span> <span class=\"token string\">\"Syncfusion\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">string</span> template <span class=\"token operator\">=</span> <span class=\"token string\">\"template\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">string</span> id <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">string</span> isHeader <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> List<span class=\"token operator\">&lt;</span>Annotation<span class=\"token operator\">></span> annotations<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">string</span> addInfo <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Annotation</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">string</span> content <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token class-name\">Node</span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>Note: HTML node cannot be exported to image format, like JPEG, PNG and BMP. It is by design, while exporting the diagram is drawn in a canvas. Further, this canvas is exported into image formats. Currently, drawing in a canvas equivalent from all possible HTML is not feasible. Hence, this limitation.</p>\n</blockquote>\n<h2 id=\"svg-content-alignment\"><a href=\"#svg-content-alignment\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SVG content alignment</h2>\n<p>Stretch and align the svg content anywhere but within the node boundary.</p>\n<p>The scale property of the node allows to stretch the svg content as you desired (either to maintain proportion or to stretch). By default, the <code class=\"language-text\">scale</code> property of node is set as <strong>meet</strong>.\nThe following code illustrates how to scale or stretch the content of the node.</p>\n<p>The following tables illustrates all the possible scale options for the node.</p>\n<table>\n<thead>\n<tr>\n<th>Values</th>\n<th>Images</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>None</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Native1.png\" alt=\"None SVG Content Alignment\"></td>\n</tr>\n<tr>\n<td>Meet</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Native2.png\" alt=\"Meet SVG Content Alignment\"></td>\n</tr>\n<tr>\n<td>Slice</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Native3.png\" alt=\"Slice SVG Content Alignment\"></td>\n</tr>\n<tr>\n<td>Stretch</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Native4.png\" alt=\"Stretch SVG Content Alignment\"></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"basic-shapes\"><a href=\"#basic-shapes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic shapes</h2>\n<ul>\n<li>\n<p>The <code class=\"language-text\">Basic</code> shapes are common shapes that are used to represent the geometrical information visually. To create basic shapes, the type of the shape should be set as <strong>basic</strong>. Its shape property can be set with any one of the built-in shape.</p>\n</li>\n<li>\n<p>To render a rounded rectangle, you need to set the type as basic and shape as rectangle. Set the <a href=\"https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2~Syncfusion.EJ2.Diagrams.DiagramBasicShape~CornerRadius.html\"><code class=\"language-text\">CornerRadius</code></a> property to specify the radius of rounded rectangle.</p>\n</li>\n</ul>\n<p>The following code example illustrates how to create a basic shape.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramBasicShape</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Syncfusion.EJ2.Blazor.Diagrams.Shapes.Basic\"</span>\n                                Shape<span class=\"token operator\">=</span><span class=\"token string\">\"@BasicShapes.Rectangle\"</span> CornerRadius<span class=\"token operator\">=</span><span class=\"token string\">\"10\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramBasicShape<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<blockquote>\n<p>Note: By default, the <code class=\"language-text\">Shape</code> property of the node is set as <strong>basic</strong>.</p>\n</blockquote>\n<p>Default property for shape is Rectangle.</p>\n<blockquote>\n<p>Note: When the <code class=\"language-text\">Shape</code> is not set for a basic shape, it is considered as a <strong>rectangle</strong>.</p>\n</blockquote>\n<p>The list of basic shapes are as follows.</p>\n<p><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Basic.png\" alt=\"BasicShapes\"></p>\n<h2 id=\"path\"><a href=\"#path\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Path</h2>\n<p>The <code class=\"language-text\">Path</code> node is a commonly used basic shape that allows visually to represent the geometrical information. To create a path node, specify the shape as <strong>path</strong>. The path property of node allows you to define the path to be drawn. The following code illustrates how a path node is created.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Creates</span> a <span class=\"token class-name\">Path</span> node <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramPath</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Syncfusion.EJ2.Blazor.Diagrams.Shapes.Path\"</span>\n                Data<span class=\"token operator\">=</span><span class=\"token string\">\"M35.2441,25 L22.7161,49.9937 L22.7161,0.00657536 L35.2441,25 z M22.7167,25 L-0.00131226,25 M35.2441,49.6337 L35.2441,0.368951 M35.2441,25 L49.9981,25\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPath<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"flow-shapes\"><a href=\"#flow-shapes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flow Shapes</h2>\n<p>The <code class=\"language-text\">Flow</code> shapes are used to represent the process flow. It is used for analyzing, designing and managing for documentation process. To create a flow shape, specify the shape type as <strong>flow</strong>. Flow shapes and by default, it is considered as <strong>process</strong>. The following code example illustrates how to create a flow shape.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Creates</span> a <span class=\"token class-name\">Flow</span> shape node <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramFlowShape</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Syncfusion.EJ2.Blazor.Diagrams.Shapes.Flow\"</span>\n                                Shape<span class=\"token operator\">=</span><span class=\"token string\">\"@FlowShapes.DirectData\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramFlowShape<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<p>The list of flow shapes are as follows.</p>\n<p><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/FlowShapes.png\" alt=\"FlowShapes\"></p>","id":"5b1a8f81-f8a5-5f7b-ac77-e41cfa525f0a","fields":{"slug":"/diagram/shapes/","parentPath":"diagram","childPath":"shapes","gcse":"014729256687841406486:qzbiyd0sri4'","header":"<div id=\"doc-right-toc\"><span>Contents</span>\n<ul>\n  <li class=\"doc-anchor-h2\"><a href=\"#text\">Text</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#image\">Image</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#image-alignment\">Image alignment</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#html\">HTML</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#svg-content-alignment\">SVG content alignment</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#basic-shapes\">Basic shapes</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#path\">Path</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#flow-shapes\">Flow Shapes</a></li>\n</ul></div>","breadCrumb":"Diagram/Shapes","isReleaseNotes":false,"seoContent":"Shapes in ASP.NET Core Blazor [Preview] Diagram | Syncfusion Documentation","platform":"ASP.NET Core Blazor [Preview]","isRobots":true}},"next":{"html":"<h1 id=\"scroll-settings\"><a href=\"#scroll-settings\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scroll Settings</h1>\n<p>The diagram can be scrolled by using the vertical and horizontal scrollbars. In addition to the scrollbars, mousewheel can be used to scroll the diagram.\nDiagramâs <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.EjsDiagram~ScrollSettings.html\"><code class=\"language-text\">ScrollSettings</code></a> enable you to read the current scroll status, view port size, current zoom and zoom factor. It also allows you to scroll the diagram programmatically.</p>\n<h2 id=\"get-current-scroll-status\"><a href=\"#get-current-scroll-status\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get current scroll status</h2>\n<p>Scroll settings allow you to read the scroll status, <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.DiagramScrollSettings~ViewPortWidth.html\"><code class=\"language-text\">ViewPortWidth</code></a>, <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.DiagramScrollSettings~ViewPortHeight.html\"><code class=\"language-text\">ViewPortHeight</code></a>, and <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.DiagramScrollSettings~CurrentZoom.html\"><code class=\"language-text\">CurrentZoom</code></a> with a set of properties. To explore those properties, see <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.EjsDiagram~ScrollSettings.html\"><code class=\"language-text\">Scroll Settings</code></a>.</p>\n<h2 id=\"define-scroll-status\"><a href=\"#define-scroll-status\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Define scroll status</h2>\n<p>Diagram allows you to pan the diagram before loading, so that any desired region of a large diagram is made to view. You can programmatically pan the diagram with the <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.DiagramScrollSettings~HorizontalOffset.html\"><code class=\"language-text\">horizontalOffset</code></a> and <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.DiagramScrollSettings~VerticalOffset.html\"><code class=\"language-text\">verticalOffset</code></a> properties of scroll settings. The following code illustrates how to set pan the diagram programmatically.</p>\n<p>In the following example, the vertical scroll bar is scrolled down by 50px and horizontal scroll bar is scrolled to right by 100px.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"700\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"700\"</span><span class=\"token operator\">></span>\n    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the <span class=\"token class-name\">ScrollSettings</span> <span class=\"token keyword\">for</span> the diagram <span class=\"token operator\">*</span>@\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramScrollSettings</span> HorizontalOffset<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> VerticalOffset<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramScrollSettings<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"autoscroll\"><a href=\"#autoscroll\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AutoScroll</h2>\n<p>Autoscroll feature automatically scrolls the diagram, whenever the node or connector is moved beyond the boundary of the diagram. So that, it is always visible during dragging, resizing, and multiple selection operations. Autoscroll is automatically triggered when any one of the following is done towards the edges of the diagram.</p>\n<ul>\n<li>Node dragging, resizing</li>\n<li>Connection editing</li>\n<li>Rubber band selection</li>\n<li>Label dragging</li>\n</ul>\n<p>The diagram client-side event <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.EjsDiagram~ScrollChange.html\"><code class=\"language-text\">ScrollChange</code></a> gets triggered when the autoscroll (scrollbars) is changed and you can do your own customization in this event.</p>\n<p>The autoscroll behavior in your diagram can be enabled/disabled by using the <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.DiagramScrollSettings~CanAutoScroll.html\"><code class=\"language-text\">CanAutoScroll</code></a> property of the diagram.</p>\n<h2 id=\"autoscroll-border\"><a href=\"#autoscroll-border\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Autoscroll border</h2>\n<p>The autoscroll border is used to specify the maximum distance between the object and diagram edge to trigger autoscroll. The default value is set as 15 for all sides (left, right, top, and bottom) and it can be changed by using the <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.DiagramScrollSettings~AutoScrollBorder.html\"><code class=\"language-text\">AutoScrollBorder</code></a> property of page settings. The following code example illustrates how to set autoscroll border.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span><span class=\"token operator\">></span>\n    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the <span class=\"token class-name\">ScrollSettings</span> <span class=\"token keyword\">for</span> the diagram <span class=\"token operator\">*</span>@\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramScrollSettings</span> HorizontalOffset<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> VerticalOffset<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the <span class=\"token class-name\">Auto</span> <span class=\"token class-name\">Scroll</span> <span class=\"token keyword\">for</span> the diagram <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">AutoScrollBorder</span> Left<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Bottom<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Right<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Top<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AutoScrollBorder<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramScrollSettings<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"#6BA5D7\"</span> StrokeWidth<span class=\"token operator\">=</span><span class=\"token string\">\"3\"</span> StrokeColor<span class=\"token operator\">=</span><span class=\"token string\">\"#6BA5D7\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeShapeStyle<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNodeAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Node1\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeAnnotationStyle</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span> Bold<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeAnnotationStyle<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotation<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"scroll-limit\"><a href=\"#scroll-limit\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scroll limit</h2>\n<p>The scroll limit allows you to define the scrollable region of the diagram. It includes the following options:</p>\n<ul>\n<li>Allows to scroll in all directions without any restriction.</li>\n<li>Allows to scroll within the diagram content.</li>\n<li>Allows to scroll within the specified scrollable area.</li>\n<li>The <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.DiagramScrollSettings~ScrollLimit.html\"><code class=\"language-text\">ScrollLimit</code></a> property of scroll settings helps to limit the scrolling.</li>\n</ul>\n<p>The ScrollSettings <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.DiagramScrollSettings~ScrollableArea.html\"><code class=\"language-text\">ScrollableArea</code></a> allow to extend the scrollable region that is based on the scroll limit.\nThe following code example illustrates how to specify the scroll limit.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span><span class=\"token operator\">></span>\n    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the <span class=\"token class-name\">ScrollSettings</span> <span class=\"token keyword\">for</span> the diagram <span class=\"token operator\">*</span>@\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramScrollSettings</span> HorizontalOffset<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> VerticalOffset<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span> ScrollLimit<span class=\"token operator\">=</span><span class=\"token string\">\"@ScrollLimit.Infinity\"</span><span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the <span class=\"token class-name\">Auto</span> <span class=\"token class-name\">Scroll</span> <span class=\"token keyword\">for</span> the diagram <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">AutoScrollBorder</span> Left<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Bottom<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Right<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Top<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AutoScrollBorder<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramScrollSettings<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"#6BA5D7\"</span> StrokeWidth<span class=\"token operator\">=</span><span class=\"token string\">\"3\"</span> StrokeColor<span class=\"token operator\">=</span><span class=\"token string\">\"#6BA5D7\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeShapeStyle<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNodeAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Node1\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeAnnotationStyle</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span> Bold<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeAnnotationStyle<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotation<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"scroll-padding\"><a href=\"#scroll-padding\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scroll Padding</h2>\n<p>The scroll padding allows you to extend the scrollable region that is based on the scroll limit.</p>\n<p>The following code example illustrates how to set scroll padding to diagram region.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span><span class=\"token operator\">></span>\n    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the <span class=\"token class-name\">ScrollSettings</span> <span class=\"token keyword\">for</span> the diagram <span class=\"token operator\">*</span>@\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramScrollSettings</span> HorizontalOffset<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> VerticalOffset<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span> ScrollLimit<span class=\"token operator\">=</span><span class=\"token string\">\"@ScrollLimit.Infinity\"</span><span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the <span class=\"token class-name\">Auto</span> <span class=\"token class-name\">Scroll</span> <span class=\"token keyword\">for</span> the diagram <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">AutoScrollBorder</span> Left<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Bottom<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Right<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Top<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AutoScrollBorder<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the <span class=\"token class-name\">Padding</span> <span class=\"token keyword\">for</span> the diagram Scroll<span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">Padding</span> Right<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span> Bottom<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Padding<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramScrollSettings<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"#6BA5D7\"</span> StrokeWidth<span class=\"token operator\">=</span><span class=\"token string\">\"3\"</span> StrokeColor<span class=\"token operator\">=</span><span class=\"token string\">\"#6BA5D7\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeShapeStyle<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNodeAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Node1\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeAnnotationStyle</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span> Bold<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeAnnotationStyle<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotation<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"scrollable-area\"><a href=\"#scrollable-area\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scrollable Area</h2>\n<p>Scrolling beyond any particular rectangular area can be restricted by using the <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.DiagramScrollSettings~ScrollableArea.html\"><code class=\"language-text\">ScrollableArea</code></a> property of scroll settings. To restrict scrolling beyond any custom region, set the <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.DiagramScrollSettings~ScrollLimit.html\"><code class=\"language-text\">ScrollLimit</code></a> as âlimitedâ. The following code example illustrates how to customize scrollable area.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span><span class=\"token operator\">></span>\n    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the <span class=\"token class-name\">ScrollSettings</span> <span class=\"token keyword\">for</span> the diagram <span class=\"token operator\">*</span>@\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramScrollSettings</span> HorizontalOffset<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> VerticalOffset<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span> ScrollLimit<span class=\"token operator\">=</span><span class=\"token string\">\"@ScrollLimit.Infinity\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ScrollableArea</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"500\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"500\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ScrollableArea<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramScrollSettings<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"#6BA5D7\"</span> StrokeWidth<span class=\"token operator\">=</span><span class=\"token string\">\"3\"</span> StrokeColor<span class=\"token operator\">=</span><span class=\"token string\">\"#6BA5D7\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeShapeStyle<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNodeAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Node1\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">NodeAnnotationStyle</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span> Bold<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NodeAnnotationStyle<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotation<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodeAnnotations<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"updateviewport\"><a href=\"#updateviewport\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UpdateViewport</h2>\n<p>The <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.EjsDiagram~UpdateViewPort.html\"><code class=\"language-text\">UpdateViewPort</code></a> method is used to update the diagram page and view size at runtime.</p>","id":"959ff6a2-01a1-52bd-9317-ccceda088475","fields":{"slug":"/diagram/scroll-settings/","parentPath":"diagram","childPath":"scroll-settings","gcse":"014729256687841406486:qzbiyd0sri4'","header":"<div id=\"doc-right-toc\"><span>Contents</span>\n<ul>\n  <li class=\"doc-anchor-h2\"><a href=\"#get-current-scroll-status\">Get current scroll status</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#define-scroll-status\">Define scroll status</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#autoscroll\">AutoScroll</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#autoscroll-border\">Autoscroll border</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#scroll-limit\">Scroll limit</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#scroll-padding\">Scroll Padding</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#scrollable-area\">Scrollable Area</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#updateviewport\">UpdateViewport</a></li>\n</ul></div>","breadCrumb":"Diagram/Scroll Settings","isReleaseNotes":false,"seoContent":"Scroll Settings in ASP.NET Core Blazor [Preview] Diagram | Syncfusion Documentation","platform":"ASP.NET Core Blazor [Preview]","isRobots":true}},"gcse":"014729256687841406486:qzbiyd0sri4'","header":"<div id=\"doc-right-toc\"><span>Contents</span>\n<ul>\n  <li class=\"doc-anchor-h2\"><a href=\"#save\">Save</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#load\">Load</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#prevent-default-values\">Prevent Default Values</a></li>\n</ul></div>","breadCrumb":"Diagram/Serialization","isReleaseNotes":false,"seoContent":"Serialization in ASP.NET Core Blazor [Preview] Diagram | Syncfusion Documentation","platform":"ASP.NET Core Blazor [Preview]","isRobots":true}}