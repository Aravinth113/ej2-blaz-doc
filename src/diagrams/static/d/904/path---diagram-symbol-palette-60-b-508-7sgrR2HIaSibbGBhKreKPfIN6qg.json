{"data":{"allPostTitles":{"edges":[{"node":{"fields":{"slug":"/diagram/automatic-layout/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/bpmn-shapes/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/commands/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/connectors/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/constraints/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/context-menu/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/grid-lines/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/group/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/interaction/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/labels/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/layers/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/native-events/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/nodes/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/overview/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/page-settings/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/ports/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/scroll-settings/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/serialization/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/shapes/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/swim-lane/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/symbol-palette/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/umldiagram/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/undo-redo/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},{"node":{"fields":{"slug":"/diagram/virtualization/","gcse":"014729256687841406486:qzbiyd0sri4'"}}}]},"postBySlug":{"html":"<h1 id=\"symbol-palette\"><a href=\"#symbol-palette\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Symbol Palette</h1>\n<p>The <strong>SymbolPalette</strong> displays a collection of palettes. The palette shows a set of nodes and connectors. It allows to drag and drop the nodes and connectors into the diagram.</p>\n<h2 id=\"create-symbol-palette\"><a href=\"#create-symbol-palette\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create symbol palette</h2>\n<p>The <code class=\"language-text\">Width</code> and <code class=\"language-text\">Height</code> properties of the symbol palette allows to define the size of the symbol palette.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"> @<span class=\"token operator\">*</span> initialize <span class=\"token class-name\">Symbol</span> palette <span class=\"token operator\">*</span>@\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsSymbolPalette</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"palettes\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"700px\"</span> SymbolHeight<span class=\"token operator\">=</span><span class=\"token number\">60</span> SymbolWidth<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsSymbolPalette<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"add-palettes-to-symbolpalette\"><a href=\"#add-palettes-to-symbolpalette\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add palettes to SymbolPalette</h2>\n<p>A palette allows to display a group of related symbols and it textually annotates the group with its header.\nA <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.SymbolPalettePalette.html\"><code class=\"language-text\">Palettes</code></a> can be added as a collection of symbol groups.</p>\n<p>The collection of predefined symbols can be added in palettes using the <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.SymbolPalettePalette~Symbols.html\"><code class=\"language-text\">Symbols</code></a> property.</p>\n<p>To initialize a palette, define a JSON object with the property <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.SymbolPalettePalette~Id.html\"><code class=\"language-text\">Id</code></a> that is unique ID is set to the palettes.</p>\n<p>The following code example illustrates how to define a palette and how its added to symbol palette.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@<span class=\"token operator\">*</span> initialize <span class=\"token class-name\">Symbol</span> palette <span class=\"token operator\">*</span>@\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsSymbolPalette</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"palettes\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"700px\"</span> SymbolHeight<span class=\"token operator\">=</span><span class=\"token number\">60</span> SymbolWidth<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>SymbolPalettePalettes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SymbolPalettePalette</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"flow\"</span> Expanded<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> Symbols<span class=\"token operator\">=</span><span class=\"token string\">\"@flowShapes\"</span> IconCss<span class=\"token operator\">=</span><span class=\"token string\">\"e-ddb-icons e-flow\"</span> Title<span class=\"token operator\">=</span><span class=\"token string\">\"Flow Shapes\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SymbolPalettePalette<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SymbolPalettePalette</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connectors\"</span> Expanded<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> Symbols<span class=\"token operator\">=</span><span class=\"token string\">\"@connectors\"</span> IconCss<span class=\"token operator\">=</span><span class=\"token string\">\"e-ddb-icons e-connector\"</span> Title<span class=\"token operator\">=</span><span class=\"token string\">\"Connectors\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SymbolPalettePalette<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SymbolPalettePalettes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsSymbolPalette<span class=\"token operator\">></span>\n\n@functions<span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> List<span class=\"token operator\">&lt;</span><span class=\"token keyword\">object</span><span class=\"token operator\">></span> segment1 <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">object</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token punctuation\">{</span> direction<span class=\"token operator\">=</span> <span class=\"token string\">\"Top\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">=</span> <span class=\"token string\">\"Orthogonal\"</span><span class=\"token punctuation\">,</span> length<span class=\"token operator\">=</span> <span class=\"token number\">120</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> List<span class=\"token operator\">&lt;</span><span class=\"token keyword\">object</span><span class=\"token operator\">></span> segment2 <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">object</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span>  <span class=\"token punctuation\">{</span> direction<span class=\"token operator\">=</span> <span class=\"token string\">\"Right\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">=</span> <span class=\"token string\">\"Orthogonal\"</span><span class=\"token punctuation\">,</span> length<span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//Initialize the flowshapes for the symbol palatte</span>\n    <span class=\"token keyword\">private</span> List<span class=\"token operator\">&lt;</span>DiagramNode<span class=\"token operator\">></span> flowShapes <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span>DiagramNode<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Terminator\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>Terminator <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Process\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>Process <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Decision\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>Decision <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Document\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>Document <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"PreDefinedProcess\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>PreDefinedProcess <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"PaperTap\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>PaperTap <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"DirectData\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>DirectData <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"SequentialData\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>SequentialData <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Sort\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>Sort <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"MultiDocument\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>MultiDocument <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Collate\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>Collate <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Or\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>Or <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Extract\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>Extract <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Merge\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>Merge <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"OffPageReference\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>OffPageReference <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"SequentialAccessStorage\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>SequentialAccessStorage <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Annotation\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>Annotation <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Annotation2\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>Annotation2 <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Data\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>Data <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Card\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>Card <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Delay\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramFlowShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Flow<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>FlowShapes<span class=\"token punctuation\">.</span>Delay <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//Initializes connector symbols for the symbol palette</span>\n    <span class=\"token keyword\">private</span> List<span class=\"token operator\">&lt;</span>DiagramConnector<span class=\"token operator\">></span> connectors <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span>DiagramConnector<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramConnector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Link11\"</span> <span class=\"token punctuation\">,</span>  Type<span class=\"token operator\">=</span>Segments<span class=\"token punctuation\">.</span>Orthogonal<span class=\"token punctuation\">,</span>SourcePoint<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramPolygonPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> X<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Y<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>TargetPoint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramPolygonPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  X<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span>Y<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          TargetDecorator<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConnectorDecorator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> Shape<span class=\"token operator\">=</span>DecoratorShapes<span class=\"token punctuation\">.</span>Arrow<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>Style<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramsShapeStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> StrokeWidth<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramConnector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"link12\"</span> <span class=\"token punctuation\">,</span>  Type<span class=\"token operator\">=</span>Segments<span class=\"token punctuation\">.</span>Orthogonal<span class=\"token punctuation\">,</span>SourcePoint<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramPolygonPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> X<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Y<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>TargetPoint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramPolygonPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  X<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span>Y<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n         TargetDecorator<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConnectorDecorator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> Shape<span class=\"token operator\">=</span>DecoratorShapes<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>Style<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramsShapeStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> StrokeWidth<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramConnector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Link21\"</span> <span class=\"token punctuation\">,</span>  Type<span class=\"token operator\">=</span>Segments<span class=\"token punctuation\">.</span>Straight<span class=\"token punctuation\">,</span>SourcePoint<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramPolygonPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> X<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Y<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>TargetPoint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramPolygonPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  X<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span>Y<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          TargetDecorator<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConnectorDecorator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> Shape<span class=\"token operator\">=</span>DecoratorShapes<span class=\"token punctuation\">.</span>Arrow<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>Style<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramsShapeStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> StrokeWidth<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramConnector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"link22\"</span> <span class=\"token punctuation\">,</span>  Type<span class=\"token operator\">=</span>Segments<span class=\"token punctuation\">.</span>Straight<span class=\"token punctuation\">,</span>SourcePoint<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramPolygonPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> X<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Y<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>TargetPoint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramPolygonPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  X<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span>Y<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          TargetDecorator<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConnectorDecorator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> Shape<span class=\"token operator\">=</span>DecoratorShapes<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>Style<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramsShapeStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> StrokeWidth<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramConnector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Link31\"</span> <span class=\"token punctuation\">,</span>  Type<span class=\"token operator\">=</span>Segments<span class=\"token punctuation\">.</span>Bezier<span class=\"token punctuation\">,</span>SourcePoint<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramPolygonPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> X<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Y<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>TargetPoint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramPolygonPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  X<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span>Y<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          TargetDecorator<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConnectorDecorator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> Shape<span class=\"token operator\">=</span>DecoratorShapes<span class=\"token punctuation\">.</span>Arrow<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>Style<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramsShapeStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> StrokeWidth<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramConnector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"link32\"</span> <span class=\"token punctuation\">,</span>  Type<span class=\"token operator\">=</span>Segments<span class=\"token punctuation\">.</span>Bezier<span class=\"token punctuation\">,</span>SourcePoint<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramPolygonPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> X<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Y<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>TargetPoint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramPolygonPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  X<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span>Y<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          TargetDecorator<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConnectorDecorator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> Shape<span class=\"token operator\">=</span>DecoratorShapes<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>Style<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramsShapeStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> StrokeWidth<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"addremove-symbols-to-palette-at-runtime\"><a href=\"#addremove-symbols-to-palette-at-runtime\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add/Remove symbols to palette at runtime</h2>\n<ul>\n<li>\n<p>Symbols can be added to palette at runtime by using public method, <a href=\"/production/aspnet-core-blazor/documentation/api/diagram/palette/#addPaletteItem-number\"><code class=\"language-text\">AddPaletteItem</code></a>.</p>\n</li>\n<li>\n<p>Symbols can be removed from palette at runtime by using public method, <a href=\"/production/aspnet-core-blazor/documentation/api/diagram/palette/#removePaletteItem-number\"><code class=\"language-text\">RemovePaletteItem</code></a>.</p>\n</li>\n</ul>\n<h2 id=\"customize-the-size-of-symbols\"><a href=\"#customize-the-size-of-symbols\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customize the size of symbols</h2>\n<p>The size of the individual symbol can be customized. The <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.EjsSymbolPalette~SymbolWidth.html\"><code class=\"language-text\">SymbolWidth</code></a> and  <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.EjsSymbolPalette~SymbolHeight.html\"><code class=\"language-text\">SymbolHeight</code></a> properties of node enables you to define the size of the symbols. The following code example illustrates how to change the size of a symbol.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@<span class=\"token operator\">*</span> initialize <span class=\"token class-name\">Symbol</span> palette with customize symbol size<span class=\"token operator\">*</span>@\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsSymbolPalette</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"palettes\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"700px\"</span> SymbolHeight<span class=\"token operator\">=</span><span class=\"token number\">60</span> SymbolWidth<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token operator\">></span>\n    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the margin <span class=\"token keyword\">for</span> the symbols <span class=\"token operator\">*</span>@\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SymbolMargin</span> Left<span class=\"token operator\">=</span><span class=\"token string\">\"15\"</span> Bottom<span class=\"token operator\">=</span><span class=\"token string\">\"15\"</span> Right<span class=\"token operator\">=</span><span class=\"token string\">\"15\"</span> Top<span class=\"token operator\">=</span><span class=\"token string\">\"15\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SymbolMargin<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>SymbolPalettePalettes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SymbolPalettePalette</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"flow\"</span> Expanded<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> Symbols<span class=\"token operator\">=</span><span class=\"token string\">\"@BasicsShapes\"</span> IconCss<span class=\"token operator\">=</span><span class=\"token string\">\"e-ddb-icons e-flow\"</span> Title<span class=\"token operator\">=</span><span class=\"token string\">\"Flow Shapes\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SymbolPalettePalette<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SymbolPalettePalettes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsSymbolPalette<span class=\"token operator\">></span>\n\n@functions<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> List<span class=\"token operator\">&lt;</span>DiagramNode<span class=\"token operator\">></span> BasicsShapes <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span>DiagramNode<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Rectangle\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramBasicShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Basic<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>BasicShapes<span class=\"token punctuation\">.</span>Rectangle <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Ellipse\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramBasicShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Basic<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>BasicShapes<span class=\"token punctuation\">.</span>Ellipse <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Hexagon\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramBasicShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Basic<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>BasicShapes<span class=\"token punctuation\">.</span>Hexagon <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.EjsSymbolPalette~SymbolMargin.html\"><code class=\"language-text\">SymbolMargin</code></a> property is used to create the space around\nelements, outside of any defined borders.</p>\n<h2 id=\"symbol-preview\"><a href=\"#symbol-preview\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Symbol preview</h2>\n<p>The symbol preview size of the palette items can be customized using <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.EjsSymbolPalette~SymbolPreview.html\"><code class=\"language-text\">SymbolPreview</code></a>.\nThe <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.SymbolPaletteSymbolPreview~Width.html\"><code class=\"language-text\">Width</code></a> and <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.SymbolPaletteSymbolPreview~Height.html\"><code class=\"language-text\">Height</code></a> properties of SymbolPalette enables you to define the preview size to all the symbol palette items.\nThe <a href=\"https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.RazorComponents~Syncfusion.EJ2.RazorComponents.Diagrams.SymbolPaletteSymbolPreview~Offset.html\"><code class=\"language-text\">Offset</code></a> of the dragging helper relative to the mouse cursor.</p>\n<p>The following code example illustrates how to change the preview size of a palette item.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@<span class=\"token operator\">*</span> initialize <span class=\"token class-name\">Symbol</span> palette with customize symbol size<span class=\"token operator\">*</span>@\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsSymbolPalette</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"palettes\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"700px\"</span> SymbolHeight<span class=\"token operator\">=</span><span class=\"token number\">60</span> SymbolWidth<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token operator\">></span>\n    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the margin <span class=\"token keyword\">for</span> the symbols <span class=\"token operator\">*</span>@\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SymbolMargin</span> Left<span class=\"token operator\">=</span><span class=\"token string\">\"15\"</span> Bottom<span class=\"token operator\">=</span><span class=\"token string\">\"15\"</span> Right<span class=\"token operator\">=</span><span class=\"token string\">\"15\"</span> Top<span class=\"token operator\">=</span><span class=\"token string\">\"15\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SymbolMargin<span class=\"token operator\">></span>\n    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the preview <span class=\"token keyword\">for</span> the symbols <span class=\"token keyword\">in</span> symbo palette <span class=\"token operator\">*</span>@\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SymbolPreview</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"0.5\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"0.5\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SymbolPreview<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>SymbolPalettePalettes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SymbolPalettePalette</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"flow\"</span> Expanded<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> Symbols<span class=\"token operator\">=</span><span class=\"token string\">\"@BasicsShapes\"</span> IconCss<span class=\"token operator\">=</span><span class=\"token string\">\"e-ddb-icons e-flow\"</span> Title<span class=\"token operator\">=</span><span class=\"token string\">\"Flow Shapes\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SymbolPalettePalette<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SymbolPalettePalettes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsSymbolPalette<span class=\"token operator\">></span>\n\n@functions<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> List<span class=\"token operator\">&lt;</span>DiagramNode<span class=\"token operator\">></span> BasicsShapes <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span>DiagramNode<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Rectangle\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramBasicShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Basic<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>BasicShapes<span class=\"token punctuation\">.</span>Rectangle <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Ellipse\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramBasicShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Basic<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>BasicShapes<span class=\"token punctuation\">.</span>Ellipse <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>Id<span class=\"token operator\">=</span><span class=\"token string\">\"Hexagon\"</span> <span class=\"token punctuation\">,</span> Shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiagramBasicShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Type <span class=\"token operator\">=</span>Shapes<span class=\"token punctuation\">.</span>Basic<span class=\"token punctuation\">,</span>Shape<span class=\"token operator\">=</span>BasicShapes<span class=\"token punctuation\">.</span>Hexagon <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"palette-interaction\"><a href=\"#palette-interaction\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Palette interaction</h2>\n<p>Palette interaction notifies the element enter, leave, and dragging of the symbols into the diagram.</p>\n<h2 id=\"escape-key-function\"><a href=\"#escape-key-function\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Escape Key function</h2>\n<p>The diagram provides support to cancel the node from symbol palette when the ESC key is pressed.</p>\n<h2 id=\"clear-previous-selection\"><a href=\"#clear-previous-selection\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Clear Previous Selection</h2>\n<p>We have provided the new support to prevent “previous selection gets cleared when dragging a new symbol from the symbol palette and dropping it to the diagram”.\nThe following image illustrate how to cancel the selection in previous object while we drop symbol from palette</p>\n<h2 id=\"dragenter\"><a href=\"#dragenter\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DragEnter</h2>\n<p>[<code class=\"language-text\">DragEnter</code>][`idragentereventargs`](../api/diagram/iDragEnterEventArgs) notifies, when the element enter into the diagram from symbol palette.</p>\n<h2 id=\"dragleave\"><a href=\"#dragleave\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DragLeave</h2>\n<p>[<code class=\"language-text\">DragLeave</code>][`idragleaveeventargs`](../api/diagram/iDragLeaveEventArgs) notifies, when the element leaves from  the diagram.</p>\n<h2 id=\"dragover\"><a href=\"#dragover\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DragOver</h2>\n<p>[<code class=\"language-text\">DragOver</code>][`idragovereventargs`](../api/diagram/iDragOverEventArgs) notifies, when an element drag over another diagram element.</p>\n<h2 id=\"see-also\"><a href=\"#see-also\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>See Also</h2>\n<ul>\n<li><a href=\"./nodes.html\">How to add the symbol to the diagram</a></li>\n</ul>","timeToRead":8,"excerpt":"Symbol Palette The  SymbolPalette  displays a collection of palettes. The palette shows a set of nodes and connectors. It allows to drag and…","fields":{"slug":"/diagram/symbol-palette/","gcse":"014729256687841406486:qzbiyd0sri4'"}}},"pageContext":{"slug":"/diagram/symbol-palette/","previous":{"html":"<h1 id=\"uml-diagram-shapes\"><a href=\"#uml-diagram-shapes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uml Diagram Shapes</h1>\n<h2 id=\"uml-class-diagram-shapes\"><a href=\"#uml-class-diagram-shapes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uml Class Diagram Shapes</h2>\n<p>Class diagram is used to represent the static view of an application. The class diagrams are widely used in the modelling of object oriented systems because they are the only UML diagrams which can be mapped directly with object-oriented languages.\nDiagram supports to generate the class diagram shapes from business logic.</p>\n<p>The UML class diagram shapes are explained as follows.</p>\n<h2 id=\"class\"><a href=\"#class\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Class</h2>\n<ul>\n<li>\n<p>A class describes a set of objects that shares the same specifications of features, constraints, and semantics. To define a class object, you should define the classifier as <code class=\"language-text\">Class</code>.</p>\n</li>\n<li>\n<p>Also, define the <code class=\"language-text\">Name</code>, <code class=\"language-text\">Attributes</code>, and <code class=\"language-text\">Methods</code> of the class using the class property of node.</p>\n</li>\n<li>\n<p>The attribute’s <code class=\"language-text\">Name</code>, <code class=\"language-text\">Type</code>, and <code class=\"language-text\">Scope</code> properties allow you to define the name, data type, and visibility of the attribute.</p>\n</li>\n<li>\n<p>The method’s <code class=\"language-text\">Name</code>, <code class=\"language-text\">Parameters</code>, <code class=\"language-text\">Type</code>, and <code class=\"language-text\">Scope</code> properties allow you to define the name, parameter, return type, and visibility of the methods.</p>\n</li>\n<li>\n<p>The method parameters object properties allow you to define the name and type of the parameter.</p>\n</li>\n<li>\n<p>The following code example illustrates how to create a class.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"Patient\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"40\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"105\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"85\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> type of shape and classifier <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlClassifierShape</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Syncfusion.EJ2.Blazor.Diagrams.Shapes.UmlClassifier\"</span> Classifier<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Class\"</span><span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the <span class=\"token keyword\">class</span> <span class=\"token keyword\">object</span> with <span class=\"token class-name\">Name</span> of a <span class=\"token keyword\">class</span> header <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlClass</span> Name<span class=\"token operator\">=</span><span class=\"token string\">\"Patient\"</span><span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the collection of attributes <span class=\"token operator\">*</span>@\n                    <span class=\"token operator\">&lt;</span>DiagramUmlClassAttributes <span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlClassAttribute</span> Name<span class=\"token operator\">=</span><span class=\"token string\">\"accepted\"</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"Date\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlClassAttribute<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlClassAttributes<span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the collection of methods <span class=\"token operator\">*</span>@\n                    <span class=\"token operator\">&lt;</span>DiagramUmlClassMethods <span class=\"token operator\">></span>\n                        @<span class=\"token operator\">*</span> sets the arguments <span class=\"token keyword\">for</span> methods <span class=\"token operator\">*</span>@\n                        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlClassMethod</span> Name<span class=\"token operator\">=</span><span class=\"token string\">\"GetHistory\"</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"GetHistory\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlClassMethod<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlClassMethods<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlClass<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlClassifierShape<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"interface\"><a href=\"#interface\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interface</h2>\n<ul>\n<li>\n<p>An Interface is a kind of classifier that represents a declaration of a set of coherent public features and obligations. To create an interface, define the classifier property as <code class=\"language-text\">Interface</code>.</p>\n</li>\n<li>\n<p>Also, define the <code class=\"language-text\">Name</code>, <code class=\"language-text\">Attributes</code>, and <code class=\"language-text\">Methods</code> of the interface using the interface property of the node.</p>\n</li>\n<li>\n<p>The attribute’s name, type, and scope properties allow you to define the name, data type, and visibility of the attribute.</p>\n</li>\n<li>\n<p>The method’s name, parameter, type, and scope properties allow you to define the name, parameter, return type, and visibility of the methods.</p>\n</li>\n<li>\n<p>The method parameter object properties of name and type allows you to define the name and type of the parameter.</p>\n</li>\n<li>\n<p>The following code example illustrates how to create an interface.</p>\n</li>\n</ul>\n<h2 id=\"enumeration\"><a href=\"#enumeration\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Enumeration</h2>\n<ul>\n<li>\n<p>To define an enumeration, define the classifier property of node as <code class=\"language-text\">Enumeration</code>. Also, define the name and members of the enumeration using the enumeration property of the node.</p>\n</li>\n<li>\n<p>You can set a name for the enumeration members collection using the name property of members collection.</p>\n</li>\n<li>\n<p>The following code example illustrates how to create an enumeration.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"Patient\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"40\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"105\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"85\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> type of shape and classifier <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlClassifierShape</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Syncfusion.EJ2.Blazor.Diagrams.Shapes.UmlClassifier\"</span> Classifier<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Enumeration\"</span><span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the enumeration <span class=\"token keyword\">object</span> with <span class=\"token class-name\">Name</span> of a <span class=\"token keyword\">class</span> header <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlEnumeration</span> Name<span class=\"token operator\">=</span><span class=\"token string\">\"AccountType\"</span><span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span> sets the <span class=\"token class-name\">Enumeration</span> Members <span class=\"token operator\">*</span>@\n                    <span class=\"token operator\">&lt;</span>DiagramUmlEnumerationMembers<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlEnumerationMember</span> Name<span class=\"token operator\">=</span><span class=\"token string\">\"Checking Account\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlEnumerationMember<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlEnumerationMember</span> Name<span class=\"token operator\">=</span><span class=\"token string\">\"Savings Account\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlEnumerationMember<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlEnumerationMember</span> Name<span class=\"token operator\">=</span><span class=\"token string\">\"Credit Account\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlEnumerationMember<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlEnumerationMembers<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlEnumeration<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlClassifierShape<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"connector-shapes\"><a href=\"#connector-shapes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Connector shapes</h2>\n<ul>\n<li>\n<p>The connector shape property defines the role or meaning of the connector.</p>\n</li>\n<li>\n<p>The different types of connector shapes are <code class=\"language-text\">BPMN</code>, <code class=\"language-text\">UmlClassifier</code> and <code class=\"language-text\">UmlActivity</code> and can render these shapes by setting the connector shape type property.</p>\n</li>\n<li>\n<p>The type of flow shapes in a BPMN process are sequence, association, and message.</p>\n</li>\n</ul>\n<h2 id=\"relationships\"><a href=\"#relationships\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Relationships</h2>\n<ul>\n<li>\n<p>A relationship is a general term covering the specific types of logical connections found on class diagrams.</p>\n</li>\n<li>\n<p>The list of relationships are demonstrated as follows.</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Shape</th>\n<th>Image</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Association</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Association.png\" alt=\"Association\"></td>\n</tr>\n<tr>\n<td>Aggregation</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Aggregation.png\" alt=\"Aggregation\"></td>\n</tr>\n<tr>\n<td>Composition</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Composition.png\" alt=\"Composition\"></td>\n</tr>\n<tr>\n<td>Inheritance</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Inheritance.png\" alt=\"Inheritance\"></td>\n</tr>\n<tr>\n<td>Dependency</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Dependency.png\" alt=\"Dependency\"></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"association\"><a href=\"#association\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Association</h2>\n<p>Association is basically a set of links that connects elements of an UML model. The type of association are as follows.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. Directional\n2. BiDirectional</code></pre></div>\n<p>The association property allows you to define the type of association. The default value of association is “Directional”. The following code example illustrates how to create an association.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the <span class=\"token class-name\">Diagram</span> uml connector <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnector</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connector1\"</span><span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the source and target points <span class=\"token keyword\">for</span> the connector <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorSourcePoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorSourcePoint<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorTargetPoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorTargetPoint<span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the type of the relationships <span class=\"token keyword\">as</span> association <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramRelationShip</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@ConnectionShapes.UmlClassifier\"</span> Relationship<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Association\"</span> AssociationType<span class=\"token operator\">=</span><span class=\"token string\">\"@AssociationFlow.BiDirectional\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramRelationShip<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnector<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"aggregation\"><a href=\"#aggregation\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Aggregation</h2>\n<p>Aggregation is a binary association between a property and one or more composite objects which group together a set of instances.\nAggregation is decorated with a hollow diamond. To create an aggregation shape, define the relationship as “aggregation”.</p>\n<p>The following code example illustrates how to create an aggregation.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the <span class=\"token class-name\">Diagram</span> uml connector <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnector</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connector1\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the source and target points <span class=\"token keyword\">for</span> the connector <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorSourcePoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorSourcePoint<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorTargetPoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorTargetPoint<span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span>  <span class=\"token class-name\">Sets</span> the type of the relationships <span class=\"token keyword\">as</span> Aggregation <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramRelationShip</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@ConnectionShapes.UmlClassifier\"</span> Relationship<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Aggregation\"</span> AssociationType<span class=\"token operator\">=</span><span class=\"token string\">\"@AssociationFlow.BiDirectional\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramRelationShip<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnector<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"composition\"><a href=\"#composition\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Composition</h2>\n<p>Composition is a “strong” form of “aggregation”. Composition is decorated with a black diamond. To create a composition shape, define the relationship property of connector as “composition”.</p>\n<p>The following code example illustrates how to create a composition.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the <span class=\"token class-name\">Diagram</span> uml connector <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnector</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connector1\"</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorSourcePoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorSourcePoint<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorTargetPoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorTargetPoint<span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the type of the relationships <span class=\"token keyword\">as</span> Composition <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramRelationShip</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@ConnectionShapes.UmlClassifier\"</span> Relationship<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Composition\"</span> AssociationType<span class=\"token operator\">=</span><span class=\"token string\">\"@AssociationFlow.BiDirectional\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramRelationShip<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnector<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"dependency\"><a href=\"#dependency\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dependency</h2>\n<p>Dependency is a directed relationship, which is used to show that some UML elements needs or depends on other model elements for specifications. Dependency is shown as dashed line with opened arrow.\nTo create a dependency, define the relationship property of connector as “dependency”.</p>\n<p>The following code example illustrates how to create an dependency.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the <span class=\"token class-name\">Diagram</span> uml connector <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnector</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connector1\"</span><span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the source and target points <span class=\"token keyword\">for</span> the connector <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorSourcePoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorSourcePoint<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorTargetPoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorTargetPoint<span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span>  <span class=\"token class-name\">Sets</span> the type of the relationships <span class=\"token keyword\">as</span> Dependency <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramRelationShip</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@ConnectionShapes.UmlClassifier\"</span> Relationship<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Dependency\"</span> AssociationType<span class=\"token operator\">=</span><span class=\"token string\">\"@AssociationFlow.BiDirectional\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramRelationShip<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnector<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"inheritance\"><a href=\"#inheritance\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Inheritance</h2>\n<p>Inheritance is also called as “generalization”. Inheritance is a binary taxonomic directed relationship between a more general classifier (super class) and a more specific classifier (subclass).\nInheritance is shown as a line with hollow triangle.</p>\n<p>To create an inheritance, define the relationship as “inheritance”.</p>\n<p>The following code example illustrates how to create an inheritance.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the <span class=\"token class-name\">Diagram</span> uml connector <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnector</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connector1\"</span><span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the source and target points <span class=\"token keyword\">for</span> the connector <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorSourcePoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorSourcePoint<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorTargetPoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorTargetPoint<span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span>  <span class=\"token class-name\">Sets</span> the type of the relationships <span class=\"token keyword\">as</span> Inheritance <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramRelationShip</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@ConnectionShapes.UmlClassifier\"</span> Relationship<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Inheritance\"</span> AssociationType<span class=\"token operator\">=</span><span class=\"token string\">\"@AssociationFlow.BiDirectional\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramRelationShip<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnector<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"multiplicity\"><a href=\"#multiplicity\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Multiplicity</h2>\n<p>Multiplicity is a definition of an inclusive interval of non-negative integers to specify the allowable number of instances of described element. The type of multiplicity are as follows.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. OneToOne\n2. ManyToOne\n3. OneToMany\n4. ManyToMany</code></pre></div>\n<ul>\n<li>\n<p>By default the multiplicity will be considered as “OneToOne”.</p>\n</li>\n<li>\n<p>The multiplicity property in UML allows you to specify large number of elements or some collection of elements.</p>\n</li>\n<li>\n<p>The shape multiplicity’s source property is used to set the source label to connector and the target property is used to set the target label to connector.</p>\n</li>\n<li>\n<p>To set an optionality or cardinality for the connector source label, use optional property.</p>\n</li>\n<li>\n<p>The <code class=\"language-text\">LowerBounds</code> and <code class=\"language-text\">UpperBounds</code> could be natural constants or constant expressions evaluated to natural (non negative) number. Upper bound could be also specified as asterisk ‘*’ which denotes unlimited number of elements. Upper bound should be greater than or equal to the lower bound.</p>\n</li>\n<li>\n<p>The following code example illustrates how to customize the multiplicity.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"> <span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the <span class=\"token class-name\">Diagram</span> uml connector <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnector</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connector1\"</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Segments.Straight\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the source and target points <span class=\"token keyword\">for</span> the connector <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorSourcePoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorSourcePoint<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorTargetPoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorTargetPoint<span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> sets the <span class=\"token class-name\">UmlClassifier</span> shape connector <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnectorShape</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@ConnectionShapes.UmlClassifier\"</span><span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span>  <span class=\"token class-name\">Sets</span> the type of the relationships <span class=\"token keyword\">as</span> Dependency <span class=\"token operator\">*</span>@\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramRelationShip</span> Relationship<span class=\"token operator\">=</span><span class=\"token string\">\"@ClassifierShape.Dependency\"</span><span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the type of multiplicity <span class=\"token operator\">*</span>@\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramClassifierMultiplicity</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Multiplicity.OneToMany\"</span><span class=\"token operator\">></span>\n                        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the source label <span class=\"token operator\">*</span>@\n                        <span class=\"token operator\">&lt;</span>SourceMultiplicityLabel<span class=\"token operator\">></span>\n                            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the optionality<span class=\"token operator\">/</span>cardinality <span class=\"token keyword\">for</span> the connector and <span class=\"token class-name\">Specifies</span> interval <span class=\"token keyword\">for</span> number of instances of described element <span class=\"token operator\">*</span>@\n                            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorsMultiplicityLabel</span> Optional<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> LowerBounds<span class=\"token operator\">=</span><span class=\"token string\">\"80\"</span> UpperBounds<span class=\"token operator\">=</span><span class=\"token string\">\"67\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorsMultiplicityLabel<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SourceMultiplicityLabel<span class=\"token operator\">></span>\n                        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the target label <span class=\"token operator\">*</span>@\n                        <span class=\"token operator\">&lt;</span>TargerMultiplicityLabel<span class=\"token operator\">></span>\n                            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the optionality<span class=\"token operator\">/</span>cardinality <span class=\"token keyword\">for</span> the connector and <span class=\"token class-name\">Specifies</span> interval <span class=\"token keyword\">for</span> number of instances of described element <span class=\"token operator\">*</span>@\n                            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorsMultiplicityLabel</span> Optional<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> LowerBounds<span class=\"token operator\">=</span><span class=\"token string\">\"78\"</span> UpperBounds<span class=\"token operator\">=</span><span class=\"token string\">\"90\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorsMultiplicityLabel<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TargerMultiplicityLabel<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramClassifierMultiplicity<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramRelationShip<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectorShape<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnector<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"umlactivity-diagram\"><a href=\"#umlactivity-diagram\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UmlActivity diagram</h2>\n<p>Activity diagram is basically a flowchart to represent the flow from one activity to another. The activity can be described as an operation of the system.</p>\n<p>The purpose of an activity diagram can be described as follows.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. Draw the activity flow of a system.\n\n2. Describe the sequence from one activity to another.\n\n3. Describe the parallel, branched, and concurrent flow of the system.</code></pre></div>\n<p>To create a UmlActivity, define type as “UmlActivity” and the list of built-in shapes as demonstrated as follows and it should be set in the “shape” property.</p>\n<table>\n<thead>\n<tr>\n<th>Shape</th>\n<th>Image</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Action</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Action.png\" alt=\"Action\"></td>\n</tr>\n<tr>\n<td>Decision</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Decision.png\" alt=\"Decision\"></td>\n</tr>\n<tr>\n<td>MergeNode</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/MergeNode.png\" alt=\"MergeNode\"></td>\n</tr>\n<tr>\n<td>InitialNode</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/InitialNode.png\" alt=\"InitialNode\"></td>\n</tr>\n<tr>\n<td>FinalNode</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/FinalNode.png\" alt=\"FinalNode\"></td>\n</tr>\n<tr>\n<td>ForkNode</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/ForkNode.png\" alt=\"ForkNode\"></td>\n</tr>\n<tr>\n<td>JoinNode</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/JoinNode.png\" alt=\"JoinNode\"></td>\n</tr>\n<tr>\n<td>TimeEvent</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/TimeEvent.png\" alt=\"TimeEvent\"></td>\n</tr>\n<tr>\n<td>AcceptingEvent</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/AcceptingEvent.png\" alt=\"AcceptingEvent\"></td>\n</tr>\n<tr>\n<td>SendSignal</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/SendSignal.png\" alt=\"SendSignal\"></td>\n</tr>\n<tr>\n<td>ReceiveSignal</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/ReceiveSignal.png\" alt=\"ReceiveSignal\"></td>\n</tr>\n<tr>\n<td>StructuredNode</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/StructuredNode.png\" alt=\"StructuredNode\"></td>\n</tr>\n<tr>\n<td>Note</td>\n<td><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/Note.png\" alt=\"Note\"></td>\n</tr>\n</tbody>\n</table>\n<p>The following code illustrates how to create a UmlActivity shapes.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"> <span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the activity shape <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"UmlDiagram\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> <span class=\"token class-name\">Type</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">UmlActivity</span> and <span class=\"token class-name\">Shape</span> <span class=\"token keyword\">as</span> Action <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramUmlActivityShape</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Shapes.UmlActivity\"</span> Shape<span class=\"token operator\">=</span><span class=\"token string\">\"@UmlActivityShapes.Action\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramUmlActivityShape<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"umlactivity-connector\"><a href=\"#umlactivity-connector\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UmlActivity connector</h3>\n<p>To create an UmlActivity connector, define the type as “UmlActivity” and flow as either “Exception” or “Control” or “Object”.</p>\n<p>The following code illustrates how to create a UmlActivity connector.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> ID<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"690px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>DiagramConnectors<span class=\"token operator\">></span>\n        @<span class=\"token operator\">*</span> <span class=\"token class-name\">Initialize</span> the <span class=\"token class-name\">Diagram</span> uml connector <span class=\"token operator\">*</span>@\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnector</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"connector1\"</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Segments.Straight\"</span><span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> <span class=\"token class-name\">Sets</span> the source and target points <span class=\"token keyword\">for</span> the connector <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorSourcePoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"100\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"700\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorSourcePoint<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ConnectorTargetPoint</span> X<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span> Y<span class=\"token operator\">=</span><span class=\"token string\">\"800\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ConnectorTargetPoint<span class=\"token operator\">></span>\n            @<span class=\"token operator\">*</span> sets the <span class=\"token class-name\">UmlClassifier</span> shape connector <span class=\"token operator\">*</span>@\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramConnectorShape</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@ConnectionShapes.UmlActivity\"</span> Flow<span class=\"token operator\">=</span><span class=\"token string\">\"@UmlActivityFlows.Exception\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectorShape<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnector<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramConnectors<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"editing\"><a href=\"#editing\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Editing</h3>\n<p>You can edit the name, attributes, and methods of the class diagram shapes just double clicking, similar to editing a node annotation.</p>\n<p>The following image illustrates how the text editor looks in an edit mode.</p>\n<p><img src=\"/production/aspnet-core-blazor/documentation/diagram/images/ClassEdit.png\" alt=\"Editing Class Diagram\"></p>","id":"7c3e26dc-c7b0-51f5-b6da-b4be69b14327","fields":{"slug":"/diagram/umldiagram/","parentPath":"diagram","childPath":"umldiagram","gcse":"014729256687841406486:qzbiyd0sri4'","header":"<div id=\"doc-right-toc\"><span>Contents</span>\n<ul>\n  <li class=\"doc-anchor-h2\"><a href=\"#uml-class-diagram-shapes\">Uml Class Diagram Shapes</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#class\">Class</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#interface\">Interface</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#enumeration\">Enumeration</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#connector-shapes\">Connector shapes</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#relationships\">Relationships</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#association\">Association</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#aggregation\">Aggregation</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#composition\">Composition</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#dependency\">Dependency</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#inheritance\">Inheritance</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#multiplicity\">Multiplicity</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#umlactivity-diagram\">UmlActivity diagram</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#umlactivity-connector\">UmlActivity connector</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#editing\">Editing</a></li>\n</ul></div>","breadCrumb":"Diagram/UML Diagram Shapes","isReleaseNotes":false,"seoContent":"UML Diagram Shapes in ASP.NET Core Blazor [Preview] Diagram | Syncfusion Documentation","platform":"ASP.NET Core Blazor [Preview]","isRobots":true}},"next":{"html":"<h1 id=\"swimlane\"><a href=\"#swimlane\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swimlane</h1>\n<p>Swimlane is a type of diagram nodes,which is typically used to visualize the relationship between a business process and the department responsible for it by focusing on the logical relationships between activities.</p>\n<h2 id=\"create-a-swimlane\"><a href=\"#create-a-swimlane\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create a Swimlane</h2>\n<p>To create a swimlane,the type of shape should be set as <code class=\"language-text\">Swimlane</code>.By Default swimlane’s are arranged vertically.</p>\n<p>The following code example illustrates how to define a swimlane object.</p>\n<h3 id=\"headers\"><a href=\"#headers\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Headers</h3>\n<p>Header was the primary element for swimlanes. The <code class=\"language-text\">Header</code> property of swimlane allows you to define its textual description and to customize its appearance.</p>\n<blockquote>\n<p>Note: By using this header,the swimlane interaction will be performed,like selection, dragging,etc.</p>\n</blockquote>\n<p>The following code example illustrates how to define a swimlane header.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"> @<span class=\"token operator\">*</span> initialize the diagram with swimlane nodes<span class=\"token operator\">*</span>@\n <span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span><span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"250\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"150\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"400\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span><span class=\"token operator\">></span>\n               @<span class=\"token operator\">*</span> initialize swimlane nodes<span class=\"token operator\">*</span>@\n               <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramSwimLane</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Shapes.SwimLane\"</span><span class=\"token operator\">></span>\n                @<span class=\"token operator\">*</span> initialize swimlane Header<span class=\"token operator\">*</span>@\n               <span class=\"token operator\">&lt;</span>SwimLaneHeader<span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span> initialize swimlane <span class=\"token class-name\">Header</span> annotation<span class=\"token operator\">*</span>@\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"SwimLane\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneTextStyle</span> Bold<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"Red\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneTextStyle<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneHeaderAnnotation<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneHeader<span class=\"token operator\">></span>\n               @<span class=\"token operator\">*</span> initialize swimlane phases collection<span class=\"token operator\">*</span>@\n               <span class=\"token operator\">&lt;</span>DiagramPhases<span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span> initialize swimlane phases<span class=\"token operator\">*</span>@\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramPhase</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"phase1\"</span> Offset<span class=\"token operator\">=</span><span class=\"token string\">\"170\"</span><span class=\"token operator\">></span>\n                         @<span class=\"token operator\">*</span> initialize swimlane phase header<span class=\"token operator\">*</span>@\n                         <span class=\"token operator\">&lt;</span>PhaseHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">PhaseHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Phase2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhase<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramPhase</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"phase2\"</span> Offset<span class=\"token operator\">=</span><span class=\"token string\">\"400\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>PhaseHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">PhaseHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Phase2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeader<span class=\"token operator\">></span>\n\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhase<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhases<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>DiagramLanes<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramLane</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"lane1\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>LaneHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">LaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Lane1\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLane<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramLane</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"lane2\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>LaneHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">LaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Lane2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLane<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLanes<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramSwimLane<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"customization-of-headers\"><a href=\"#customization-of-headers\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customization of headers</h3>\n<p>The height and width of swimlane header can be customized with <code class=\"language-text\">Weight</code> and <code class=\"language-text\">Height</code> properties of swimlane header. set fill color of header by using the <code class=\"language-text\">Style</code> property. The orientation of swimlane can be customized with the <code class=\"language-text\">Orientation</code> property of the header.</p>\n<blockquote>\n<p>Note: By default the swimlane orientation has Horizontal.</p>\n</blockquote>\n<p>The following code example illustrates how to customise the swimlane header..</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span><span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"250\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"150\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"400\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span><span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramSwimLane</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Shapes.SwimLane\"</span><span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>SwimLaneHeader<span class=\"token operator\">></span>\n                    @<span class=\"token operator\">*</span> <span class=\"token class-name\">Customize</span> the <span class=\"token class-name\">SwimLane</span> header style <span class=\"token operator\">*</span>@\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"red\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneShapeStyle<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"SwimLane\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneTextStyle</span> Bold<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"Red\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneTextStyle<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneHeaderAnnotation<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneHeader<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>DiagramPhases<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramPhase</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"phase1\"</span> Offset<span class=\"token operator\">=</span><span class=\"token string\">\"170\"</span><span class=\"token operator\">></span>\n                         @<span class=\"token operator\">*</span> <span class=\"token class-name\">Customize</span> the <span class=\"token class-name\">SwimLane</span> header style <span class=\"token operator\">*</span>@\n                         <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"Blue\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneShapeStyle<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>PhaseHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">PhaseHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Phase2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhase<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramPhase</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"phase2\"</span> Offset<span class=\"token operator\">=</span><span class=\"token string\">\"400\"</span><span class=\"token operator\">></span>\n                         @<span class=\"token operator\">*</span> <span class=\"token class-name\">Customize</span> the <span class=\"token class-name\">SwimLane</span> header style <span class=\"token operator\">*</span>@\n                         <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"Blue\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneShapeStyle<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>PhaseHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">PhaseHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Phase2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhase<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhases<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>DiagramLanes<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramLane</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"lane1\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>LaneHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">LaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Lane1\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLane<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramLane</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"lane2\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>LaneHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">LaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Lane2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLane<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLanes<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramSwimLane<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"header-editing\"><a href=\"#header-editing\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Header Editing</h3>\n<p>Diagram provides the support to edit swimlane headers at runtime. We achieve the header editing by double click event. Double clicking the header label will enables the editing of that.\nThe following image illustrates how to edit the phase header.\n<img src=\"/production/aspnet-core-blazor/documentation/diagram/gifs/phase-header-edit.gif\" alt=\"Phase Header Editing\"></p>\n<h2 id=\"lanes\"><a href=\"#lanes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lanes</h2>\n<p>Lane is a functional unit or a responsible department of a business process that helps to map a  process within the functional unit or in between other functional units.</p>\n<p>The number of <a href=\"https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2~Syncfusion.EJ2.Diagrams.Shapes.html\"><code class=\"language-text\">Lanes</code></a> can be added to swimlane. The lanes are automatically stacked inside  swimlane based on the order they are added.</p>\n<h3 id=\"create-an-empty-lane\"><a href=\"#create-an-empty-lane\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create an empty lane</h3>\n<ul>\n<li>The lanes <code class=\"language-text\">Id</code> is used to define the name of the lane and its further used to find the lane at runtime and do any customization.</li>\n</ul>\n<p>The following code example illustrates how to define a swimlane with lane.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span><span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"250\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"150\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"400\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span><span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramSwimLane</span> Orientation<span class=\"token operator\">=</span><span class=\"token string\">\"@Orientation.Horizontal\"</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Shapes.SwimLane\"</span><span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneHeader</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"red\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneShapeStyle<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"ONLINE PURCHASE STATUS\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneTextStyle</span> Bold<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"#111111\"</span> FontSize<span class=\"token operator\">=</span><span class=\"token string\">\"11\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneTextStyle<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneHeaderAnnotation<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneHeader<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>DiagramPhases<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramPhase</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"phase1\"</span> Offset<span class=\"token operator\">=</span><span class=\"token string\">\"170\"</span><span class=\"token operator\">></span>\n                         @<span class=\"token operator\">*</span> <span class=\"token class-name\">Customize</span> the <span class=\"token class-name\">SwimLane</span> header style <span class=\"token operator\">*</span>@\n                         <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"Blue\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneShapeStyle<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>PhaseHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">PhaseHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Phase2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhase<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhases<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>DiagramLanes<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramLane</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"lane1\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>LaneHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">LaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Lane1\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLane<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLanes<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramSwimLane<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"create-lane-header\"><a href=\"#create-lane-header\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create lane header</h3>\n<ul>\n<li>The <code class=\"language-text\">Header</code> property of lane allows you to textually describe the lane and to customize the appearance of the description.</li>\n</ul>\n<p>The following code example illustrates how to define a lane header.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span><span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"250\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"150\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"400\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span><span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramSwimLane</span> Orientation<span class=\"token operator\">=</span><span class=\"token string\">\"@Orientation.Horizontal\"</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Shapes.SwimLane\"</span><span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneHeader</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"red\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneShapeStyle<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"ONLINE PURCHASE STATUS\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneTextStyle</span> Bold<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"#111111\"</span> FontSize<span class=\"token operator\">=</span><span class=\"token string\">\"11\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneTextStyle<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneHeaderAnnotation<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneHeader<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>DiagramPhases<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramPhase</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"phase1\"</span> Offset<span class=\"token operator\">=</span><span class=\"token string\">\"170\"</span><span class=\"token operator\">></span>\n                         @<span class=\"token operator\">*</span> <span class=\"token class-name\">Customize</span> the <span class=\"token class-name\">SwimLane</span> header style <span class=\"token operator\">*</span>@\n                         <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"Blue\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneShapeStyle<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>PhaseHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">PhaseHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Phase2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhase<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhases<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>DiagramLanes<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramLane</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"lane1\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n                         @<span class=\"token operator\">*</span> <span class=\"token class-name\">Customize</span> the <span class=\"token class-name\">SwimLane</span> header style <span class=\"token operator\">*</span>@\n                         <span class=\"token operator\">&lt;</span>LaneHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">LaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"CUSTOMER\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLane<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLanes<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramSwimLane<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"customizing-lane-header\"><a href=\"#customizing-lane-header\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customizing Lane header</h3>\n<ul>\n<li>The size of lane can be controlled by using the <code class=\"language-text\">Width</code> and <code class=\"language-text\">Height</code> properties of the lane.</li>\n<li>The appearance of the lane can be set by using the <code class=\"language-text\">Style</code> properties.</li>\n</ul>\n<p>The following code example illustrates how to customize the lane header.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"> <span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span><span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"250\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"150\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"400\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span><span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramSwimLane</span> Orientation<span class=\"token operator\">=</span><span class=\"token string\">\"@Orientation.Horizontal\"</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Shapes.SwimLane\"</span><span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneHeader</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"ONLINE PURCHASE STATUS\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneTextStyle</span> Bold<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"#111111\"</span> FontSize<span class=\"token operator\">=</span><span class=\"token string\">\"11\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneTextStyle<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneHeaderAnnotation<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneHeader<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>DiagramPhases<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramPhase</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"phase1\"</span> Offset<span class=\"token operator\">=</span><span class=\"token string\">\"170\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>PhaseHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">PhaseHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Phase2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhase<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhases<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>DiagramLanes<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramLane</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"lane1\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>LaneHeader<span class=\"token operator\">></span>\n                              @<span class=\"token operator\">*</span> <span class=\"token class-name\">Customize</span> the <span class=\"token class-name\">SwimLane</span> header style <span class=\"token operator\">*</span>@\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"red\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneShapeStyle<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">LaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"CUSTOMER\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLane<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLanes<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramSwimLane<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"lane-interaction\"><a href=\"#lane-interaction\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lane Interaction</h2>\n<h3 id=\"resizing-lane\"><a href=\"#resizing-lane\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resizing Lane</h3>\n<ul>\n<li>Lane can be resized in the bottom and left direction.</li>\n<li>Lane can be resized by using resize selector of the lane.</li>\n<li>Once you can resize the lane,the swimlane will be resized automatically.</li>\n<li>The lane can be resized either resizing the selector or the tight bounds of the child object. If the child node move to edge of the lane it can be automatically resized.\nThe following image illustrates how resize the lane.\n<img src=\"/production/aspnet-core-blazor/documentation/diagram/gifs/lane-resize.gif\" alt=\"Lane Resizing\"></li>\n</ul>\n<h3 id=\"lane-swapping\"><a href=\"#lane-swapping\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lane Swapping</h3>\n<ul>\n<li>Lanes can be swapped using drag the lanes over another lane.</li>\n<li>Helper should intimate the insertion point while lane swapping.\nThe following image illustrates how swapping the lane.\n<img src=\"/production/aspnet-core-blazor/documentation/diagram/images/swapping.gif\" alt=\"Lane Swapping\"></li>\n</ul>\n<h3 id=\"resize-helper\"><a href=\"#resize-helper\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resize Helper</h3>\n<ul>\n<li>The special resize helper will be used to resize the lanes.</li>\n<li>The resize cursor will be available on the left and bottom direction alone.</li>\n<li>Once resize the lane the swimlane will be resized automatically.</li>\n</ul>\n<h3 id=\"children-interaction-in-lanes\"><a href=\"#children-interaction-in-lanes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Children interaction in Lanes</h3>\n<ul>\n<li>\n<p>You can resize the child node within swimlanes.</p>\n</li>\n<li>\n<p>You can drag the child nodes within lane.</p>\n</li>\n<li>\n<p>Interchange the child nodes from one lane to another lane.</p>\n</li>\n<li>\n<p>Drag and drop the child nodes from lane to diagram.</p>\n</li>\n<li>\n<p>Drag and drop the child nodes from diagram to lane.</p>\n</li>\n<li>\n<p>Based on the child node interactions,the lane size should be updated.\nThe following image illustrates children interaction in lane.\n<img src=\"/production/aspnet-core-blazor/documentation/diagram/gifs/child-interaction.gif\" alt=\"Lane Children Interaction\">  </p>\n</li>\n</ul>\n<h3 id=\"lane-header-editing\"><a href=\"#lane-header-editing\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lane Header Editing</h3>\n<p>Diagram provides the support to edit Lane headers at runtime. We achieve the header editing by double click event. Double clicking the header label will enables the editing of that.\nThe following image illustrates how to edit the swimlane header.\n<img src=\"/production/aspnet-core-blazor/documentation/diagram/gifs/lane-header-edit.gif\" alt=\"Lane Header Editing\"></p>\n<h2 id=\"phase\"><a href=\"#phase\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Phase</h2>\n<p> Phase are the subprocess which will split each lane as horizontally or vertically based on the swimlane orientation. The multiple number of <code class=\"language-text\">Phase</code> can be added to swimlane.\nThe following code example illustrates how to add phase at swimlane.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span><span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"250\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"150\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"400\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span><span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramSwimLane</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Shapes.SwimLane\"</span><span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneHeader</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"ONLINE PURCHASE STATUS\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneTextStyle</span> Bold<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"#111111\"</span> FontSize<span class=\"token operator\">=</span><span class=\"token string\">\"11\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneTextStyle<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneHeaderAnnotation<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneHeader<span class=\"token operator\">></span>\n               @<span class=\"token operator\">*</span> <span class=\"token class-name\">Customize</span> the <span class=\"token class-name\">SwimLane</span> phase style <span class=\"token operator\">*</span>@\n               <span class=\"token operator\">&lt;</span>DiagramPhases<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramPhase</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"phase1\"</span> Offset<span class=\"token operator\">=</span><span class=\"token string\">\"120\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>PhaseHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">PhaseHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Phase2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhase<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramPhase</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"phase2\"</span> Offset<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>PhaseHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">PhaseHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Phase2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhase<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhases<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>DiagramLanes<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramLane</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"lane1\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>LaneHeader<span class=\"token operator\">></span>\n                              @<span class=\"token operator\">*</span> <span class=\"token class-name\">Customize</span> the <span class=\"token class-name\">SwimLane</span> header style <span class=\"token operator\">*</span>@\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"red\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneShapeStyle<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">LaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"CUSTOMER\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLane<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLanes<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramSwimLane<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"customizing-phase\"><a href=\"#customizing-phase\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customizing Phase</h3>\n<ul>\n<li>The length of region can be set by using the <code class=\"language-text\">Offset</code> property of the phase.</li>\n<li>Every phase region can be textually described with the <code class=\"language-text\">Header</code> property of the phase</li>\n<li>You can increase the width of phase by using <code class=\"language-text\">PhaseSize</code> property of swimlane.</li>\n</ul>\n<p>The following code example illustrates how to customize the phase in swimlane.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">EjsDiagram</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"diagram\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"1000\"</span><span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span>DiagramNodes<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramNode</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"250\"</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"150\"</span> OffsetX<span class=\"token operator\">=</span><span class=\"token string\">\"400\"</span> OffsetY<span class=\"token operator\">=</span><span class=\"token string\">\"300\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"node1\"</span><span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramSwimLane</span> Type<span class=\"token operator\">=</span><span class=\"token string\">\"@Shapes.SwimLane\"</span><span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneHeader</span> Height<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"ONLINE PURCHASE STATUS\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneTextStyle</span> Bold<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> Color<span class=\"token operator\">=</span><span class=\"token string\">\"#111111\"</span> FontSize<span class=\"token operator\">=</span><span class=\"token string\">\"11\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneTextStyle<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneHeaderAnnotation<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneHeader<span class=\"token operator\">></span>\n               @<span class=\"token operator\">*</span> <span class=\"token class-name\">Customize</span> the <span class=\"token class-name\">SwimLane</span> phase style <span class=\"token operator\">*</span>@\n               <span class=\"token operator\">&lt;</span>DiagramPhases<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramPhase</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"phase1\"</span> Offset<span class=\"token operator\">=</span><span class=\"token string\">\"120\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>PhaseHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">PhaseHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Phase2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhase<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramPhase</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"phase2\"</span> Offset<span class=\"token operator\">=</span><span class=\"token string\">\"200\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>PhaseHeader<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">PhaseHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Phase2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PhaseHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhase<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramPhases<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>DiagramLanes<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">DiagramLane</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"lane1\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"50\"</span><span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span>LaneHeader<span class=\"token operator\">></span>\n                              @<span class=\"token operator\">*</span> <span class=\"token class-name\">Customize</span> the <span class=\"token class-name\">SwimLane</span> header style <span class=\"token operator\">*</span>@\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SwimLaneShapeStyle</span> Fill<span class=\"token operator\">=</span><span class=\"token string\">\"red\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SwimLaneShapeStyle<span class=\"token operator\">></span>\n                              <span class=\"token operator\">&lt;</span><span class=\"token class-name\">LaneHeaderAnnotation</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"CUSTOMER\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeaderAnnotation<span class=\"token operator\">></span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LaneHeader<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLane<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramLanes<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramSwimLane<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNode<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DiagramNodes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EjsDiagram<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"phase-interaction\"><a href=\"#phase-interaction\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Phase Interaction</h3>\n<h3 id=\"resizing\"><a href=\"#resizing\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resizing</h3>\n<ul>\n<li>The phase can be resized by using its selector.</li>\n<li>You must select the phase header to enable the phase selection.</li>\n<li>Once the phase can be resized, the lane size will be updated automatically.</li>\n</ul>\n<h3 id=\"resizing-helper\"><a href=\"#resizing-helper\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resizing Helper</h3>\n<ul>\n<li>The special resize selector will be used to resize the phase.</li>\n<li>The resize cursor will be available on the left and bottom direction for horizontal, and the top and bottom direction for vertical swimlane.</li>\n</ul>\n<h3 id=\"phase-header-editing\"><a href=\"#phase-header-editing\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Phase Header Editing</h3>\n<p>Diagram provides the support to edit phase headers at runtime. We achieve the header editing by double click event. Double clicking the header label will enables the editing of that.\nThe following image illustrates how to edit the phase header.\n<img src=\"/production/aspnet-core-blazor/documentation/diagram/gifs/phase-header-edit.gif\" alt=\"Phase Header Editing\"></p>\n<h2 id=\"add-swimlane-to-palette\"><a href=\"#add-swimlane-to-palette\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add Swimlane to palette</h2>\n<p>Diagram provides support to add swimlane and phases to symbol palette. The following code sample illustrate how to add swimlane and phases to palette.</p>\n<h3 id=\"drag-and-drop-swimlane-to-palette\"><a href=\"#drag-and-drop-swimlane-to-palette\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Drag and Drop swimlane to palette</h3>\n<ul>\n<li>The drag and drop support for swimlane shapes has been provided.</li>\n<li>When you drag and drop the lane shape,if the diagram already contains swimlane with the same orientation, the lane will be added and stacked inside a swimlane based on the order. Otherwise, it will be added a new swimlane.</li>\n<li>The phase will only drop on swimlane shape with same orientation.\n<img src=\"/production/aspnet-core-blazor/documentation/diagram/gifs/symbol-palette.gif\" alt=\"Drag Symbol from Palette\"></li>\n</ul>\n<h2 id=\"limitations\"><a href=\"#limitations\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Limitations</h2>\n<ul>\n<li>Connectors cannot be cancelled when added directly to swimlane. You must initialize the connector through connector collection.</li>\n<li>We cannot edit the phase line style.</li>\n</ul>","id":"0bb57c73-8413-556c-abf3-91ababcf43f5","fields":{"slug":"/diagram/swim-lane/","parentPath":"diagram","childPath":"swim-lane","gcse":"014729256687841406486:qzbiyd0sri4'","header":"<div id=\"doc-right-toc\"><span>Contents</span>\n<ul>\n  <li class=\"doc-anchor-h2\"><a href=\"#create-a-swimlane\">Create a Swimlane</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#headers\">Headers</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#customization-of-headers\">Customization of headers</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#header-editing\">Header Editing</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#lanes\">Lanes</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#create-an-empty-lane\">Create an empty lane</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#create-lane-header\">Create lane header</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#customizing-lane-header\">Customizing Lane header</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#lane-interaction\">Lane Interaction</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#resizing-lane\">Resizing Lane</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#lane-swapping\">Lane Swapping</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#resize-helper\">Resize Helper</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#children-interaction-in-lanes\">Children interaction in Lanes</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#lane-header-editing\">Lane Header Editing</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#phase\">Phase</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#customizing-phase\">Customizing Phase</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#phase-interaction\">Phase Interaction</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#resizing\">Resizing</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#resizing-helper\">Resizing Helper</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#phase-header-editing\">Phase Header Editing</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#add-swimlane-to-palette\">Add Swimlane to palette</a></li>\n  <li class=\"doc-anchor-h3\"><a href=\"#drag-and-drop-swimlane-to-palette\">Drag and Drop swimlane to palette</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#limitations\">Limitations</a></li>\n</ul></div>","breadCrumb":"Diagram/Swimlane","isReleaseNotes":false,"seoContent":"Swimlane in ASP.NET Core Blazor [Preview] Diagram | Syncfusion Documentation","platform":"ASP.NET Core Blazor [Preview]","isRobots":true}},"gcse":"014729256687841406486:qzbiyd0sri4'","header":"<div id=\"doc-right-toc\"><span>Contents</span>\n<ul>\n  <li class=\"doc-anchor-h2\"><a href=\"#create-symbol-palette\">Create symbol palette</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#add-palettes-to-symbolpalette\">Add palettes to SymbolPalette</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#addremove-symbols-to-palette-at-runtime\">AddRemove symbols to palette at runtime</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#customize-the-size-of-symbols\">Customize the size of symbols</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#symbol-preview\">Symbol preview</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#palette-interaction\">Palette interaction</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#escape-key-function\">Escape Key function</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#clear-previous-selection\">Clear Previous Selection</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#dragenter\">DragEnter</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#dragleave\">DragLeave</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#dragover\">DragOver</a></li>\n  <li class=\"doc-anchor-h2\"><a href=\"#see-also\">See Also</a></li>\n</ul></div>","breadCrumb":"Diagram/Symbol Palette","isReleaseNotes":false,"seoContent":"Symbol Palette in ASP.NET Core Blazor [Preview] Diagram | Syncfusion Documentation","platform":"ASP.NET Core Blazor [Preview]","isRobots":true}}