{"data":{"allPostTitles":{"edges":[{"node":{"fields":{"slug":"/accordion/animations/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/data-binding/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/expand-mode/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/customizing-and-multilevel-nesting/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/icons-and-navigations/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/template-and-multilevel-nesting/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/icons/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/auto-close/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/data-source-binding-and-custom-menu-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/usecase-scenario/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/docking-sidebar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/animations/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/localization/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/item-configuration/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/template-configuration/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/drag-and-drop/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/multiple-selection/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/node-editing/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/template/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/add-nested-accordion/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/enable-disable-accordion-item/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/integrate-treeview-inside-the-accordion/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/load-accordion-items-dynamically/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/load-content-through-post/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/to-keep-single-pane-open-always/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/add-or-remove-context-menu-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/bind-menu-events/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/change-animation-settings/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/change-menuitem-dynamically/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/data-binding/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/enable-or-disable-context-menu-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/open-and-close-context-menu/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/open-dialog/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/animation-settings/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/change-orientation/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/change-submenu-position/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/customize-menu-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/customize-menu-using-events/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/menu-with-rounded-corner/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/right-left/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/how-to/multiple-sidebar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/how-to/open-and-close-the-sidebar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/add-nested-tabs/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/add-remove-tab-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/create-collapsible-tabs/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/customize-selected-tab-styles/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/customize-the-scrolling-distance/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/load-content-through-post/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/load-tab-items-dynamically/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/load-tab-with-data-source/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/prevent-content-swipe-selection/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/set-state-persistence-of-the-tab-component/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/set-command-customization/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/set-item-wise-custom-template/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/set-tool-tip-to-the-commands/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/accordion-tree/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/check-uncheck-the-checkbox-on-clicking-the-tree-node-text/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/customize-the-tree-nodes-based-on-levels/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/get-all-child-nodes/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/get-dynamic-icon/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/process-the-tree-node-operations-using-context-menu/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/remove-parent-checkbox/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/set-tool-tip-for-tree-nodes/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/validate-the-text-when-renaming-the-tree-node/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/custom-context/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/content-render-modes/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/orientation/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/responsive-modes/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/responsive-mode/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/create-wizard-using-accordion/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/how-to/sidebar-with-list-view/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/add-toggle-button/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/check-box/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/header/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/add-icon-to-accordion-header/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/create-wizard-using-tab/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/customize-the-scrolling-distance/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/enable-or-disable-toolbar-item/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/customize-the-expand-and-collapse-icons/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/data-binding/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}}]},"postBySlug":{"html":"<h1 id=\"set-tooltip-for-treeview-nodes\"><a href=\"#set-tooltip-for-treeview-nodes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set tooltip for TreeView nodes</h1>\n<p>TreeView control allows you to set tooltip option to tree nodes using the <code class=\"language-text\">Tooltip</code> property. The following code example demonstrates how to set tooltip for TreeView nodes.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@<span class=\"token keyword\">using</span> Syncfusion<span class=\"token punctuation\">.</span>Blazor<span class=\"token punctuation\">.</span>Navigations\n\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">SfTreeView</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"DriveData\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">TreeViewFieldsSettings</span> DataSource<span class=\"token operator\">=</span><span class=\"token string\">\"@Drive\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"NodeId\"</span> Text<span class=\"token operator\">=</span><span class=\"token string\">\"NodeText\"</span> Tooltip<span class=\"token operator\">=</span><span class=\"token string\">\"Tooltip\"</span> Expanded<span class=\"token operator\">=</span><span class=\"token string\">\"Expanded\"</span> Child<span class=\"token operator\">=</span><span class=\"token string\">\"@(\"</span>Child<span class=\"token string\">\")\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeViewFieldsSettings<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SfTreeView<span class=\"token operator\">></span>\n\n@code<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span> Drive <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Drive<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Local Disk (C:)\"</span><span class=\"token punctuation\">,</span>\n            Tooltip <span class=\"token operator\">=</span> <span class=\"token string\">\"Local Disk (C:)\"</span><span class=\"token punctuation\">,</span>\n            Expanded <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-01\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Program Files\"</span><span class=\"token punctuation\">,</span> Tooltip <span class=\"token operator\">=</span> <span class=\"token string\">\"Program Files\"</span><span class=\"token punctuation\">,</span>\n                    Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-01-01\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Windows NT\"</span> <span class=\"token punctuation\">,</span> Tooltip <span class=\"token operator\">=</span> <span class=\"token string\">\"Windows NT\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-02\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Users\"</span><span class=\"token punctuation\">,</span> Tooltip<span class=\"token operator\">=</span><span class=\"token string\">\"Users\"</span><span class=\"token punctuation\">,</span>\n                    Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-02-01\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Smith\"</span><span class=\"token punctuation\">,</span> Tooltip<span class=\"token operator\">=</span> <span class=\"token string\">\"Smith\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-02-02\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Public\"</span><span class=\"token punctuation\">,</span> Tooltip<span class=\"token operator\">=</span><span class=\"token string\">\"Public\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-03\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Windows\"</span><span class=\"token punctuation\">,</span> Tooltip<span class=\"token operator\">=</span> <span class=\"token string\">\"Windows\"</span><span class=\"token punctuation\">,</span>\n                    Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-03-01\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Boot\"</span><span class=\"token punctuation\">,</span> Tooltip <span class=\"token operator\">=</span> <span class=\"token string\">\"Boot\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Drive<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"02\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Local Disk (D:)\"</span><span class=\"token punctuation\">,</span>\n            Tooltip <span class=\"token operator\">=</span> <span class=\"token string\">\"Local Disk (D:)\"</span><span class=\"token punctuation\">,</span>\n            Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"02-01\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Personals\"</span><span class=\"token punctuation\">,</span> Tooltip<span class=\"token operator\">=</span><span class=\"token string\">\"Personals\"</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"02-02\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Projects\"</span><span class=\"token punctuation\">,</span> Tooltip <span class=\"token operator\">=</span> <span class=\"token string\">\"Projects\"</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"02-02\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Office\"</span><span class=\"token punctuation\">,</span> Tooltip <span class=\"token operator\">=</span> <span class=\"token string\">\"Office\"</span>\n            <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Drive<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"03\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Local Disk (E:)\"</span><span class=\"token punctuation\">,</span>\n            Tooltip <span class=\"token operator\">=</span> <span class=\"token string\">\"Local Disk (E:)\"</span><span class=\"token punctuation\">,</span>\n            Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"03-01\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Pictures\"</span><span class=\"token punctuation\">,</span> Tooltip <span class=\"token operator\">=</span> <span class=\"token string\">\"Pictures\"</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"03-02\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Documents\"</span><span class=\"token punctuation\">,</span> Tooltip <span class=\"token operator\">=</span><span class=\"token string\">\"Documents\"</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"03-03\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Study Materials\"</span><span class=\"token punctuation\">,</span> Tooltip <span class=\"token operator\">=</span> <span class=\"token string\">\"Study Materials\"</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">DriveData</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> NodeId <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> NodeText <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Tooltip <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Icon <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> Expanded <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> Selected <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span> Child <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Output be like the below.</p>\n<p><img src=\"/production/blazor/documentation/treeview/images/tooltip.png\" alt=\"TreeView Sample\"></p>","timeToRead":2,"excerpt":"Set tooltip for TreeView nodes TreeView control allows you to set tooltip option to tree nodes using the   property. The following code…","fields":{"slug":"/treeview/how-to/set-tool-tip-for-tree-nodes/","gcse":"014729256687841406486:qzbiyd0sri4"}}},"pageContext":{"slug":"/treeview/how-to/set-tool-tip-for-tree-nodes/","previous":{"html":"<h1 id=\"validate-the-text-when-renaming-the-tree-node\"><a href=\"#validate-the-text-when-renaming-the-tree-node\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Validate the text when renaming the tree node</h1>\n<p>You can validate the tree node text while editing using <code class=\"language-text\">NodeEdited</code> event of the TreeView. Following is an example that shows how to validate and prevent empty values in tree node.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@<span class=\"token keyword\">using</span> Syncfusion<span class=\"token punctuation\">.</span>Blazor<span class=\"token punctuation\">.</span>Navigations\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SfTreeView</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"MusicAlbum\"</span> AllowEditing<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"tree\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">TreeViewEvents</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"MusicAlbum\"</span> NodeEdited<span class=\"token operator\">=</span><span class=\"token string\">\"AfterEdit\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeViewEvents<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">TreeViewFieldsSettings</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"MusicAlbum\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"Id\"</span> DataSource<span class=\"token operator\">=</span><span class=\"token string\">\"@Albums\"</span> Text<span class=\"token operator\">=</span><span class=\"token string\">\"Name\"</span> ParentID<span class=\"token operator\">=</span><span class=\"token string\">\"ParentId\"</span> HasChildren<span class=\"token operator\">=</span><span class=\"token string\">\"HasChild\"</span> Expanded<span class=\"token operator\">=</span><span class=\"token string\">\"Expanded\"</span> IsChecked<span class=\"token operator\">=</span><span class=\"token string\">\"IsChecked\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeViewFieldsSettings<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SfTreeView<span class=\"token operator\">></span>\n    @<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>EditedStatus <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        @EditedStatus\n    <span class=\"token punctuation\">}</span>\n    @code<span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MusicAlbum</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Id <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">?</span></span> ParentId <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> Expanded <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span><span class=\"token punctuation\">?</span></span> IsChecked <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> HasChild <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">SfTreeView<span class=\"token punctuation\">&lt;</span>MusicAlbum<span class=\"token punctuation\">></span></span> tree<span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> EditedStatus <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>MusicAlbum<span class=\"token punctuation\">></span></span> Albums <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>MusicAlbum<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AfterEdit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NodeEditEventArgs</span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>NewText<span class=\"token punctuation\">.</span><span class=\"token function\">Trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                args<span class=\"token punctuation\">.</span>Cancel <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                EditedStatus <span class=\"token operator\">=</span> <span class=\"token string\">\"TreeView item text should not be empty\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">StateHasChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>NewText <span class=\"token operator\">!=</span> args<span class=\"token punctuation\">.</span>OldText<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                EditedStatus <span class=\"token operator\">=</span> <span class=\"token string\">\"TreeView item text edited successfully\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">StateHasChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{</span>\n                EditedStatus <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            Albums<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MusicAlbum</span>\n            <span class=\"token punctuation\">{</span>\n                Id <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Discover Music\"</span><span class=\"token punctuation\">,</span>\n                HasChild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Albums<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MusicAlbum</span>\n            <span class=\"token punctuation\">{</span>\n                Id <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n                ParentId <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Hot Singles\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Albums<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MusicAlbum</span>\n            <span class=\"token punctuation\">{</span>\n                Id <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n                ParentId <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Rising Artists\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Albums<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MusicAlbum</span>\n            <span class=\"token punctuation\">{</span>\n                Id <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n                ParentId <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Live Music\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Albums<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MusicAlbum</span>\n            <span class=\"token punctuation\">{</span>\n                Id <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span>\n                HasChild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                Name <span class=\"token operator\">=</span> <span class=\"token string\">\"MP3 Albums\"</span><span class=\"token punctuation\">,</span>\n                Expanded <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                IsChecked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Albums<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MusicAlbum</span>\n            <span class=\"token punctuation\">{</span>\n                Id <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span>\n                ParentId <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span>\n                Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Rock\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Albums<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MusicAlbum</span>\n            <span class=\"token punctuation\">{</span>\n                Id <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n                Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Gospel\"</span><span class=\"token punctuation\">,</span>\n                ParentId <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Albums<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MusicAlbum</span>\n            <span class=\"token punctuation\">{</span>\n                Id <span class=\"token operator\">=</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span>\n                ParentId <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span>\n                Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Latin Music\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Albums<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MusicAlbum</span>\n            <span class=\"token punctuation\">{</span>\n                Id <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n                ParentId <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span>\n                Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Jazz\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Output be like the below.</p>\n<p><img src=\"/production/blazor/documentation/treeview/images/validate-text.png\" alt=\"TreeView Sample\"></p>","id":"03d84c2a-d91b-57e9-bb6e-b7eec68a9407","fields":{"slug":"/treeview/how-to/validate-the-text-when-renaming-the-tree-node/","parentPath":"treeview/how-to","childPath":"validate-the-text-when-renaming-the-tree-node","gcse":"014729256687841406486:qzbiyd0sri4","header":"","breadCrumb":"TreeView/How To/Validate the text when renaming the tree node","isReleaseNotes":false,"title":"How to Validate the text when renaming the tree node in Blazor [Preview] TreeView component - Syncfusion","description":"Checkout and learn about Validate the text when renaming the tree node in Blazor [Preview] TreeView component of Syncfusion Essential JS 2, and more details.","platform":"Blazor [Preview]","isRobots":true}},"next":{"html":"<h1 id=\"remove-the-check-box-of-the-parent-nodes-alone-in-treeview\"><a href=\"#remove-the-check-box-of-the-parent-nodes-alone-in-treeview\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remove the check box of the parent nodes alone in TreeView</h1>\n<p>By enabling the <code class=\"language-text\">ShowCheckBox</code> property, you can render check box before each node of TreeView. However, some application needs to render check box in child nodes alone. In such case, you can remove the check box of the parent node by customizing the CSS.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@<span class=\"token keyword\">using</span> Syncfusion<span class=\"token punctuation\">.</span>Blazor<span class=\"token punctuation\">.</span>Navigations\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">SfTreeView</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"Country\"</span> ShowCheckBox<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> CssClass<span class=\"token operator\">=</span><span class=\"token string\">\"CustomTree\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">TreeViewFieldsSettings</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"Country\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"Id\"</span> DataSource<span class=\"token operator\">=</span><span class=\"token string\">\"@Countries\"</span> Text<span class=\"token operator\">=</span><span class=\"token string\">\"Name\"</span> ParentID<span class=\"token operator\">=</span><span class=\"token string\">\"ParentId\"</span> HasChildren<span class=\"token operator\">=</span><span class=\"token string\">\"HasChild\"</span> Expanded<span class=\"token operator\">=</span><span class=\"token string\">\"Expanded\"</span> Selected<span class=\"token operator\">=</span><span class=\"token string\">\"IsSelected\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeViewFieldsSettings<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SfTreeView<span class=\"token operator\">></span>\n\n@code<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Country</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Id <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">?</span></span> ParentId <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> HasChild <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> Expanded <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> IsSelected <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Country<span class=\"token punctuation\">></span></span> Countries <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Country<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Australia\"</span><span class=\"token punctuation\">,</span>\n            HasChild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            Expanded <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"New South Wales\"</span><span class=\"token punctuation\">,</span>\n            IsSelected <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Victoria\"</span><span class=\"token punctuation\">,</span>\n            IsSelected <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"South Australia\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Western Australia\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Brazil\"</span><span class=\"token punctuation\">,</span>\n            HasChild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Paraná\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Ceará\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"China\"</span><span class=\"token punctuation\">,</span>\n            HasChild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Guangzhou\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Shantou\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">.</span>CustomTree <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>item<span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>level<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>text<span class=\"token operator\">-</span>content<span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>icon<span class=\"token operator\">-</span>wrapper\n    <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>checkbox<span class=\"token operator\">-</span>wrapper <span class=\"token punctuation\">{</span>\n        display<span class=\"token punctuation\">:</span> none\n    <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre></div>\n<p>Output be like the below.</p>\n<p><img src=\"/production/blazor/documentation/treeview/images/remove-parent-checkbox.png\" alt=\"TreeView Sample\"></p>","id":"a861fa39-7b9d-530d-9fd1-1ff5d305a1cc","fields":{"slug":"/treeview/how-to/remove-parent-checkbox/","parentPath":"treeview/how-to","childPath":"remove-parent-checkbox","gcse":"014729256687841406486:qzbiyd0sri4","header":"","breadCrumb":"TreeView/How To/Remove checkbox of the parent node","isReleaseNotes":false,"title":"How to Remove checkbox of the parent node in Blazor [Preview] TreeView component - Syncfusion","description":"Checkout and learn about Remove checkbox of the parent node in Blazor [Preview] TreeView component of Syncfusion Essential JS 2, and more details.","platform":"Blazor [Preview]","isRobots":true}},"gcse":"014729256687841406486:qzbiyd0sri4","header":"","breadCrumb":"TreeView/How To/Set tooltip for tree nodes","isReleaseNotes":false,"title":"How to Set tooltip for tree nodes in Blazor [Preview] TreeView component - Syncfusion","description":"Checkout and learn about Set tooltip for tree nodes in Blazor [Preview] TreeView component of Syncfusion Essential JS 2, and more details.","platform":"Blazor [Preview]","isRobots":true}}