{"data":{"allPostTitles":{"edges":[{"node":{"fields":{"slug":"/accordion/animations/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/data-binding/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/expand-mode/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/customizing-and-multilevel-nesting/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/icons-and-navigations/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/template-and-multilevel-nesting/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/icons/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/auto-close/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/data-source-binding-and-custom-menu-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/usecase-scenario/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/docking-sidebar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/animations/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/localization/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/item-configuration/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/template-configuration/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/drag-and-drop/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/multiple-selection/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/node-editing/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/template/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/add-nested-accordion/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/enable-disable-accordion-item/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/integrate-treeview-inside-the-accordion/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/load-accordion-items-dynamically/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/load-content-through-post/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/to-keep-single-pane-open-always/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/add-or-remove-context-menu-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/bind-menu-events/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/change-animation-settings/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/change-menuitem-dynamically/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/data-binding/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/enable-or-disable-context-menu-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/open-and-close-context-menu/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/open-dialog/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/animation-settings/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/change-orientation/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/change-submenu-position/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/customize-menu-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/customize-menu-using-events/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/menu-with-rounded-corner/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/right-left/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/how-to/multiple-sidebar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/how-to/open-and-close-the-sidebar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/add-nested-tabs/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/add-remove-tab-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/create-collapsible-tabs/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/customize-selected-tab-styles/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/customize-the-scrolling-distance/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/load-content-through-post/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/load-tab-items-dynamically/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/load-tab-with-data-source/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/prevent-content-swipe-selection/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/set-state-persistence-of-the-tab-component/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/set-command-customization/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/set-item-wise-custom-template/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/set-tool-tip-to-the-commands/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/accordion-tree/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/check-uncheck-the-checkbox-on-clicking-the-tree-node-text/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/customize-the-tree-nodes-based-on-levels/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/get-all-child-nodes/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/get-dynamic-icon/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/process-the-tree-node-operations-using-context-menu/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/remove-parent-checkbox/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/set-tool-tip-for-tree-nodes/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/validate-the-text-when-renaming-the-tree-node/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/custom-context/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/content-render-modes/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/orientation/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/responsive-modes/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/responsive-mode/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/create-wizard-using-accordion/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/how-to/sidebar-with-list-view/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/add-toggle-button/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/check-box/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/header/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/add-icon-to-accordion-header/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/create-wizard-using-tab/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/customize-the-scrolling-distance/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/enable-or-disable-toolbar-item/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/customize-the-expand-and-collapse-icons/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/data-binding/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}}]},"postBySlug":{"html":"<h1 id=\"get-all-child-nodes-through-parentid\"><a href=\"#get-all-child-nodes-through-parentid\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get all child nodes through parentID</h1>\n<p>This section demonstrates how to get the child nodes from corresponding Parent ID. Using the <code class=\"language-text\">GetTreeData</code> method, you can get the node details of TreeView. Please refer to the following sample.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@<span class=\"token keyword\">using</span> Syncfusion<span class=\"token punctuation\">.</span>Blazor<span class=\"token punctuation\">.</span>Navigations\n@<span class=\"token keyword\">using</span> Syncfusion<span class=\"token punctuation\">.</span>Blazor<span class=\"token punctuation\">.</span>Inputs\n@<span class=\"token keyword\">using</span> <span class=\"token namespace\">Newtonsoft<span class=\"token punctuation\">.</span>Json</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">SfTreeView</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"TreeData\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"tree\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">TreeViewFieldsSettings</span> DataSource<span class=\"token operator\">=</span><span class=\"token string\">\"@TreeDataSource\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"Code\"</span> Text<span class=\"token operator\">=</span><span class=\"token string\">\"Name\"</span> Selected<span class=\"token operator\">=</span><span class=\"token string\">\"Selected\"</span> Expanded<span class=\"token operator\">=</span><span class=\"token string\">\"Expanded\"</span> Child<span class=\"token operator\">=</span><span class=\"token string\">\"@(\"</span>Child<span class=\"token string\">\")\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeViewFieldsSettings<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SfTreeView<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">SfMaskedTextBox</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"mask\"</span> Placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Enter the ID (ex: NA)\"</span> FloatLabelType<span class=\"token operator\">=</span><span class=\"token string\">\"@FloatLabelType.Always\"</span> Width<span class=\"token operator\">=</span><span class=\"token string\">\"250\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SfMaskedTextBox<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>button <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"e-btn e-info\"</span> @onclick<span class=\"token operator\">=</span><span class=\"token string\">\"@GetDetails\"</span><span class=\"token operator\">></span>Submit<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n@<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>TreeNodeDetails <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    @TreeNodeDetails\n<span class=\"token punctuation\">}</span>\n\n@code<span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>TreeData<span class=\"token punctuation\">></span></span> TreeDataSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TreeData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">SfTreeView<span class=\"token punctuation\">&lt;</span>TreeData<span class=\"token punctuation\">></span></span> tree<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">SfMaskedTextBox</span> mask<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> TreeNodeDetails <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">GetDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span> EnteredText <span class=\"token operator\">=</span> mask<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>TreeData<span class=\"token punctuation\">></span></span> treeData <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> tree<span class=\"token punctuation\">.</span><span class=\"token function\">GetTreeData</span><span class=\"token punctuation\">(</span>EnteredText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TreeNodeDetails <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"NodeData: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">JsonConvert<span class=\"token punctuation\">.</span><span class=\"token function\">SerializeObject</span><span class=\"token punctuation\">(</span>treeData<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">StateHasChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        TreeDataSource<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span>\n        <span class=\"token punctuation\">{</span>\n            Code <span class=\"token operator\">=</span> <span class=\"token string\">\"NA\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"North America\"</span><span class=\"token punctuation\">,</span>\n            Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TreeData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"USA\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"United States of America\"</span><span class=\"token punctuation\">,</span> Selected <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"CUB\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Cuba\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"MEX\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Mexico\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TreeDataSource<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span>\n        <span class=\"token punctuation\">{</span>\n            Code <span class=\"token operator\">=</span> <span class=\"token string\">\"AF\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Africa\"</span><span class=\"token punctuation\">,</span>\n            Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TreeData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"NGA\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Nygeria\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"EGY\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Egypt\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"ZAF\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"South Africa\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TreeDataSource<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span>\n        <span class=\"token punctuation\">{</span>\n            Code <span class=\"token operator\">=</span> <span class=\"token string\">\"AS\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Asia\"</span><span class=\"token punctuation\">,</span>\n            Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TreeData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"CHN\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"China\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"IND\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"India\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"JPN\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Japan\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TreeDataSource<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span>\n        <span class=\"token punctuation\">{</span>\n            Code <span class=\"token operator\">=</span> <span class=\"token string\">\"EU\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Europe\"</span><span class=\"token punctuation\">,</span>\n            Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TreeData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"DNK\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Denmark\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"AUT\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Austria\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"FIN\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Finland\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TreeDataSource<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span>\n        <span class=\"token punctuation\">{</span>\n            Code <span class=\"token operator\">=</span> <span class=\"token string\">\"SA\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"South America\"</span><span class=\"token punctuation\">,</span>\n            Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TreeData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"BRA\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Brazil\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"COL\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Colombia\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"ARG\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Argentina\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TreeDataSource<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span>\n        <span class=\"token punctuation\">{</span>\n            Code <span class=\"token operator\">=</span> <span class=\"token string\">\"OC\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Oceania\"</span><span class=\"token punctuation\">,</span>\n            Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TreeData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"AUS\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Australia\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"NZL\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Newzealand\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"WSM\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Samoa\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TreeDataSource<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span>\n        <span class=\"token punctuation\">{</span>\n            Code <span class=\"token operator\">=</span> <span class=\"token string\">\"AN\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Antartica\"</span><span class=\"token punctuation\">,</span>\n            Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TreeData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"BVT\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Bouvet Island\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeData</span> <span class=\"token punctuation\">{</span> Code <span class=\"token operator\">=</span> <span class=\"token string\">\"ATF\"</span><span class=\"token punctuation\">,</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"French Southern Lands\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TreeData</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Code <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> Expanded <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> Selected <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>TreeData<span class=\"token punctuation\">></span></span> Child<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":2,"excerpt":"Get all child nodes through parentID This section demonstrates how to get the child nodes from corresponding Parent ID. Using the   method…","fields":{"slug":"/treeview/how-to/get-all-child-nodes/","gcse":"014729256687841406486:qzbiyd0sri4"}}},"pageContext":{"slug":"/treeview/how-to/get-all-child-nodes/","previous":{"html":"<h1 id=\"get-iconcss-dynamically-in-treeview\"><a href=\"#get-iconcss-dynamically-in-treeview\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get IconCss dynamically in TreeView</h1>\n<p>In TreeView component, you can get the original bound data using the <code class=\"language-text\">GetTreeData</code> method. For this method, if you pass the id of the tree node, it returns the corresponding node information, or otherwise the overall tree nodes information will be returned. You can use this method to get the bound IconCss class in the <code class=\"language-text\">NodeChecking</code> event. Please refer to the following sample.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@<span class=\"token keyword\">using</span> Syncfusion<span class=\"token punctuation\">.</span>Blazor<span class=\"token punctuation\">.</span>Navigations\n\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">SfTreeView</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"TreeItem\"</span> SortOrder<span class=\"token operator\">=</span><span class=\"token string\">\"@Syncfusion.Blazor.Navigations.SortOrder.Ascending\"</span> ShowCheckBox<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> AutoCheck<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"tree\"</span> @<span class=\"token keyword\">ref</span><span class=\"token punctuation\">:</span>suppressField<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">TreeViewEvents</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"TreeItem\"</span> NodeChecking<span class=\"token operator\">=</span><span class=\"token string\">\"BeforeCheck\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeViewEvents<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">TreeViewFieldsSettings</span> DataSource<span class=\"token operator\">=</span><span class=\"token string\">\"@TreeDataSource\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"NodeId\"</span> Text<span class=\"token operator\">=</span><span class=\"token string\">\"NodeText\"</span> Expanded<span class=\"token operator\">=</span><span class=\"token string\">\"Expanded\"</span> Child<span class=\"token operator\">=</span><span class=\"token string\">\"@(\"</span>Child<span class=\"token string\">\")\"</span> IconCss<span class=\"token operator\">=</span><span class=\"token string\">\"Icon\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeViewFieldsSettings<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SfTreeView<span class=\"token operator\">></span>\n@<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SelectedIcon <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    @SelectedIcon<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n@code<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">SfTreeView<span class=\"token punctuation\">&lt;</span>TreeItem<span class=\"token punctuation\">></span></span> tree<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>TreeItem<span class=\"token punctuation\">></span></span> TreeDataSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TreeItem<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> SelectedIcon <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> SelectedID <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">BeforeCheck</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NodeCheckEventArgs</span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>Action <span class=\"token operator\">==</span> <span class=\"token string\">\"check\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            SelectedID <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>TreeItem<span class=\"token punctuation\">></span></span> IconData <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tree<span class=\"token punctuation\">.</span><span class=\"token function\">GetTreeData</span><span class=\"token punctuation\">(</span>SelectedID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            SelectedIcon <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"Icon class is: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">IconData<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Icon</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">StateHasChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TreeDataSource<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeItem</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Music\"</span><span class=\"token punctuation\">,</span>\n            Icon <span class=\"token operator\">=</span> <span class=\"token string\">\"folder\"</span><span class=\"token punctuation\">,</span>\n            Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TreeItem<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeItem</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-01\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Gouttes.mp3\"</span><span class=\"token punctuation\">,</span> Icon <span class=\"token operator\">=</span> <span class=\"token string\">\"audio\"</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TreeDataSource<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeItem</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"02\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Videos\"</span><span class=\"token punctuation\">,</span>\n            Icon <span class=\"token operator\">=</span> <span class=\"token string\">\"folder\"</span><span class=\"token punctuation\">,</span>\n            Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TreeItem<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeItem</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"02-01\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Naturals.mp4\"</span><span class=\"token punctuation\">,</span> Icon <span class=\"token operator\">=</span> <span class=\"token string\">\"video\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeItem</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"02-02\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Wild.mpeg\"</span><span class=\"token punctuation\">,</span> Icon <span class=\"token operator\">=</span> <span class=\"token string\">\"video\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">TreeItem</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> NodeId <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> NodeText <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Icon <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> Expanded <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> Selected <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>TreeItem<span class=\"token punctuation\">></span></span> Child<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n\n    <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>img <span class=\"token punctuation\">{</span>\n        width<span class=\"token punctuation\">:</span> 25px<span class=\"token punctuation\">;</span>\n        height<span class=\"token punctuation\">:</span> 25px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/* Loading sprite image for TreeView */</span>\n    <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon <span class=\"token punctuation\">{</span>\n        background<span class=\"token operator\">-</span>repeat<span class=\"token punctuation\">:</span> no<span class=\"token operator\">-</span>repeat<span class=\"token punctuation\">;</span>\n        background<span class=\"token operator\">-</span>image<span class=\"token punctuation\">:</span> <span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"css/treeview/images/file_Icons.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        height<span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">/* Specify the Icon positions based upon class name */</span>\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>folder <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>552px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>docx <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>20px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>ppt <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>48px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>pdf <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>104px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>images <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>132px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>zip <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>188px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>audio <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>244px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>video <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>272px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>exe <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>412px\n        <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre></div>\n<p>Output be like the below.</p>\n<p><img src=\"/production/blazor/documentation/treeview/images/IconCss.png\" alt=\"TreeView Sample\"></p>","id":"a562a099-fd70-5fb3-9968-fddd8b9eeefb","fields":{"slug":"/treeview/how-to/get-dynamic-icon/","parentPath":"treeview/how-to","childPath":"get-dynamic-icon","gcse":"014729256687841406486:qzbiyd0sri4","header":"","breadCrumb":"TreeView/How To/Get iconCss dynamically  in treeview","isReleaseNotes":false,"title":"How to Get iconCss dynamically  in treeview in Blazor [Preview] TreeView component - Syncfusion","description":"Checkout and learn about Get iconCss dynamically  in treeview in Blazor [Preview] TreeView component of Syncfusion Essential JS 2, and more details.","platform":"Blazor [Preview]","isRobots":true}},"next":{"html":"<h1 id=\"customize-the-tree-nodes-based-on-levels\"><a href=\"#customize-the-tree-nodes-based-on-levels\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customize the tree nodes based on levels</h1>\n<p>You can customize the tree nodes level wise by adding custom CssClass to the component and enabling styles.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@<span class=\"token keyword\">using</span> Syncfusion<span class=\"token punctuation\">.</span>Blazor<span class=\"token punctuation\">.</span>Navigations\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">SfTreeView</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"DriveData\"</span> CssClass<span class=\"token operator\">=</span><span class=\"token string\">\"mytree\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">TreeViewFieldsSettings</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"DriveData\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"NodeId\"</span> Text<span class=\"token operator\">=</span><span class=\"token string\">\"NodeText\"</span> Child<span class=\"token operator\">=</span><span class=\"token string\">\"@Child\"</span> DataSource<span class=\"token operator\">=</span><span class=\"token string\">\"@Drive\"</span> Expanded<span class=\"token operator\">=</span><span class=\"token string\">\"Expanded\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeViewFieldsSettings<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SfTreeView<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">div</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"details\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>label<span class=\"token operator\">></span>Note<span class=\"token punctuation\">:</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>b<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span> The font<span class=\"token operator\">-</span>weight <span class=\"token string\">\"Bold\"</span> <span class=\"token keyword\">is</span> <span class=\"token class-name\">applied</span> <span class=\"token keyword\">for</span> all the leaf nodes<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>b<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>i<span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token punctuation\">.</span> The font<span class=\"token operator\">-</span>weight <span class=\"token string\">\"Italic\"</span> <span class=\"token keyword\">is</span> <span class=\"token class-name\">applied</span> <span class=\"token keyword\">for</span> first level nodes<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>i<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">div</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"color: darkmagenta\"</span><span class=\"token operator\">></span><span class=\"token number\">3</span><span class=\"token punctuation\">.</span> The color <span class=\"token string\">\"darkmagenta\"</span> <span class=\"token keyword\">is</span> <span class=\"token class-name\">applied</span> <span class=\"token keyword\">for</span> second level nodes<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n@code<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DriveData</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> NodeId <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> NodeText <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> Expanded <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> Selected <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span> Children<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token class-name\"><span class=\"token keyword\">object</span></span> Child<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span> Drive <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span> Folder1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        Drive<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Local Disk (C:)\"</span><span class=\"token punctuation\">,</span>\n            Expanded <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            Children <span class=\"token operator\">=</span> Folder1<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span> File1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        Folder1<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-01\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Program Files\"</span><span class=\"token punctuation\">,</span>\n            Children <span class=\"token operator\">=</span> File1\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        File1<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-01-01\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Windows NT\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span> File2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        Folder1<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-02\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Users\"</span><span class=\"token punctuation\">,</span>\n            Expanded <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            Children <span class=\"token operator\">=</span> File2\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        File2<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-02-01\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Smith\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        File2<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-02-02\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Public\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span> File3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        Folder1<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-03\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Windows\"</span><span class=\"token punctuation\">,</span>\n            Children <span class=\"token operator\">=</span> File3\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        File3<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-03-01\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Boot\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span> Folder2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>DriveData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        Drive<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"02\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Local Disk (D:)\"</span><span class=\"token punctuation\">,</span>\n            Children <span class=\"token operator\">=</span> Folder2<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Folder2<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"02-01\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Personals\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Folder2<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DriveData</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"02-02\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Projects\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>Child <span class=\"token operator\">=</span> <span class=\"token string\">\"Children\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n\n    <span class=\"token punctuation\">.</span>mytree <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>level<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>text<span class=\"token operator\">-</span>content <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>text <span class=\"token punctuation\">{</span>\n        font<span class=\"token operator\">-</span>style<span class=\"token punctuation\">:</span> italic<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">.</span>mytree <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>level<span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>text<span class=\"token operator\">-</span>content <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>text <span class=\"token punctuation\">{</span>\n        color<span class=\"token punctuation\">:</span> darkmagenta<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">.</span>mytree <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>level<span class=\"token operator\">-</span><span class=\"token number\">3</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>text<span class=\"token operator\">-</span>content <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>text <span class=\"token punctuation\">{</span>\n        font<span class=\"token operator\">-</span>weight<span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre></div>\n<p>Output be like the below.</p>\n<p><img src=\"/production/blazor/documentation/treeview/images/customize-level.png\" alt=\"TreeView Sample\"></p>","id":"0ebe575b-8f7b-5dfa-a5d7-52801a822bde","fields":{"slug":"/treeview/how-to/customize-the-tree-nodes-based-on-levels/","parentPath":"treeview/how-to","childPath":"customize-the-tree-nodes-based-on-levels","gcse":"014729256687841406486:qzbiyd0sri4","header":"","breadCrumb":"TreeView/How To/Customize the tree nodes based on levels","isReleaseNotes":false,"title":"How to Customize the tree nodes based on levels in Blazor [Preview] TreeView component - Syncfusion","description":"Checkout and learn about Customize the tree nodes based on levels in Blazor [Preview] TreeView component of Syncfusion Essential JS 2, and more details.","platform":"Blazor [Preview]","isRobots":true}},"gcse":"014729256687841406486:qzbiyd0sri4","header":"","breadCrumb":"TreeView/How To/Get all child nodes through parentID in treeview","isReleaseNotes":false,"title":"How to Get all child nodes through parentID in treeview in Blazor [Preview] TreeView component - Syncfusion","description":"Checkout and learn about Get all child nodes through parentID in treeview in Blazor [Preview] TreeView component of Syncfusion Essential JS 2, and more details.","platform":"Blazor [Preview]","isRobots":true}}