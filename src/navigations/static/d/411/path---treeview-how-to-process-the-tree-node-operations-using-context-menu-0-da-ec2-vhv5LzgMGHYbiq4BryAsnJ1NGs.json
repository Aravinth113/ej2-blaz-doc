{"data":{"allPostTitles":{"edges":[{"node":{"fields":{"slug":"/accordion/animations/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/data-binding/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/expand-mode/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/customizing-and-multilevel-nesting/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/icons-and-navigations/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/template-and-multilevel-nesting/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/icons/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/auto-close/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/data-source-binding-and-custom-menu-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/usecase-scenario/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/docking-sidebar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/animations/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/localization/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/item-configuration/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/template-configuration/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/drag-and-drop/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/multiple-selection/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/node-editing/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/template/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/add-nested-accordion/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/enable-disable-accordion-item/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/integrate-treeview-inside-the-accordion/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/load-accordion-items-dynamically/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/load-content-through-post/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/to-keep-single-pane-open-always/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/add-or-remove-context-menu-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/bind-menu-events/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/change-animation-settings/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/change-menuitem-dynamically/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/data-binding/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/enable-or-disable-context-menu-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/open-and-close-context-menu/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/context-menu/how-to/open-dialog/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/animation-settings/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/change-orientation/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/change-submenu-position/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/customize-menu-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/customize-menu-using-events/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/menu-with-rounded-corner/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/menu-bar/how-to/right-left/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/how-to/multiple-sidebar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/how-to/open-and-close-the-sidebar/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/add-nested-tabs/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/add-remove-tab-items/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/create-collapsible-tabs/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/customize-selected-tab-styles/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/customize-the-scrolling-distance/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/load-content-through-post/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/load-tab-items-dynamically/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/load-tab-with-data-source/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/prevent-content-swipe-selection/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/set-state-persistence-of-the-tab-component/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/set-command-customization/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/set-item-wise-custom-template/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/set-tool-tip-to-the-commands/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/accordion-tree/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/check-uncheck-the-checkbox-on-clicking-the-tree-node-text/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/customize-the-tree-nodes-based-on-levels/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/get-all-child-nodes/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/get-dynamic-icon/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/process-the-tree-node-operations-using-context-menu/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/remove-parent-checkbox/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/set-tool-tip-for-tree-nodes/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/validate-the-text-when-renaming-the-tree-node/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/custom-context/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/content-render-modes/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/orientation/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/responsive-modes/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/responsive-mode/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/create-wizard-using-accordion/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/how-to/sidebar-with-list-view/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/add-toggle-button/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/check-box/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/accessibility/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/header/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/accordion/how-to/add-icon-to-accordion-header/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/tabs/how-to/create-wizard-using-tab/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/customize-the-scrolling-distance/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/toolbar/how-to/enable-or-disable-toolbar-item/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/how-to/customize-the-expand-and-collapse-icons/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/treeview/data-binding/","gcse":"014729256687841406486:qzbiyd0sri4"}}},{"node":{"fields":{"slug":"/sidebar/getting-started/","gcse":"014729256687841406486:qzbiyd0sri4"}}}]},"postBySlug":{"html":"<h1 id=\"process-the-tree-node-operations-using-context-menu\"><a href=\"#process-the-tree-node-operations-using-context-menu\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Process the tree node operations using context menu</h1>\n<p>You can integrate the context menu with <code class=\"language-text\">TreeView</code> component in order to perform the TreeView related operations like add, remove and renaming node.</p>\n<p>Following is an example which demonstrates the above cases which are used to manipulate TreeView operations in the <code class=\"language-text\">ItemSelected</code> event of context menu.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@<span class=\"token keyword\">using</span> Syncfusion<span class=\"token punctuation\">.</span>Blazor<span class=\"token punctuation\">.</span>Navigations\n@<span class=\"token keyword\">using</span> <span class=\"token namespace\">Newtonsoft<span class=\"token punctuation\">.</span>Json</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">div</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"treeview\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SfTreeView</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"EmployeeData\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"tree\"</span> AllowDragAndDrop<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> SelectedNodes<span class=\"token operator\">=</span><span class=\"token string\">\"@selectedNodes\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">TreeViewFieldsSettings</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"Id\"</span> ParentID<span class=\"token operator\">=</span><span class=\"token string\">\"Pid\"</span> DataSource<span class=\"token operator\">=</span><span class=\"token string\">\"@ListData\"</span> Text<span class=\"token operator\">=</span><span class=\"token string\">\"Name\"</span> HasChildren<span class=\"token operator\">=</span><span class=\"token string\">\"HasChild\"</span> Expanded<span class=\"token operator\">=</span><span class=\"token string\">\"Expanded\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeViewFieldsSettings<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">TreeViewEvents</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"EmployeeData\"</span> NodeSelected<span class=\"token operator\">=</span><span class=\"token string\">\"OnSelect\"</span> NodeClicked<span class=\"token operator\">=</span><span class=\"token string\">\"nodeClicked\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeViewEvents<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token class-name\">SfContextMenu</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"menu\"</span> Target<span class=\"token operator\">=</span><span class=\"token string\">\"#treeview\"</span> Items<span class=\"token operator\">=</span><span class=\"token string\">\"@MenuItems\"</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token class-name\">ContextMenuEvents</span> ItemSelected<span class=\"token operator\">=</span><span class=\"token string\">\"MenuSelect\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ContextMenuEvents<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SfContextMenu<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SfTreeView<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n@code\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Reference for treeview</span>\n    <span class=\"token class-name\">SfTreeView<span class=\"token punctuation\">&lt;</span>EmployeeData<span class=\"token punctuation\">></span></span> tree<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Reference for context menu</span>\n    <span class=\"token class-name\">SfContextMenu</span> menu<span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> selectedId<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> selectedNodes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Datasource for menu items</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>MenuItem<span class=\"token punctuation\">></span></span> MenuItems <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>MenuItem<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MenuItem</span> <span class=\"token punctuation\">{</span> Text <span class=\"token operator\">=</span> <span class=\"token string\">\"Edit\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MenuItem</span> <span class=\"token punctuation\">{</span> Text <span class=\"token operator\">=</span> <span class=\"token string\">\"Remove\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MenuItem</span> <span class=\"token punctuation\">{</span> Text <span class=\"token operator\">=</span> <span class=\"token string\">\"Add\"</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EmployeeData</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Id <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Pid <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> HasChild <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Triggers when TreeView Node is selected</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnSelect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NodeSelectEventArgs</span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedId <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>NodeData<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Triggers when TreeView node is clicked</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">nodeClicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NodeClickEventArgs</span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> eventString <span class=\"token operator\">=</span> JsonConvert<span class=\"token punctuation\">.</span><span class=\"token function\">SerializeObject</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>Event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">dynamic</span><span class=\"token punctuation\">></span></span> eventParameters <span class=\"token operator\">=</span> JsonConvert<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">DeserializeObject</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">dynamic</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>eventString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>eventParameters<span class=\"token punctuation\">[</span><span class=\"token string\">\"which\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedNodes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> args<span class=\"token punctuation\">.</span>Node<span class=\"token punctuation\">.</span><span class=\"token function\">GetAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-uid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">StateHasChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// To add a new node</span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AddNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span> TreeData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"tree_\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TreeData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> NodeId<span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"NewItem\"</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tree<span class=\"token punctuation\">.</span><span class=\"token function\">AddNodes</span><span class=\"token punctuation\">(</span>TreeData<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedId<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tree<span class=\"token punctuation\">.</span><span class=\"token function\">BeginEdit</span><span class=\"token punctuation\">(</span>NodeId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>index <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// To delete a tree node</span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RemoveNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> removeNode <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tree<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveNodes</span><span class=\"token punctuation\">(</span>removeNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// To edit a tree node</span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RenameNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tree<span class=\"token punctuation\">.</span><span class=\"token function\">BeginEdit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Triggers when context menu is selected</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">MenuSelect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MenuEventArgs</span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> selectedText<span class=\"token punctuation\">;</span>\n        selectedText <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>Item<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selectedText <span class=\"token operator\">==</span> <span class=\"token string\">\"Edit\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">RenameNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selectedText <span class=\"token operator\">==</span> <span class=\"token string\">\"Remove\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">RemoveNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selectedText <span class=\"token operator\">==</span> <span class=\"token string\">\"Add\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token comment\">// local data source</span>\n    <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>EmployeeData<span class=\"token punctuation\">></span></span> ListData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>EmployeeData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>EmployeeData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Johnson\"</span><span class=\"token punctuation\">,</span>\n            HasChild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Sourav\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Sanjay\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"4\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Steve\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"6\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Martin\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"7\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Laura\"</span><span class=\"token punctuation\">,</span>\n            HasChild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"8\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"7\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Mic\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"9\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"7\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Nancy\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"7\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Andrew\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"11\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Robert King\"</span><span class=\"token punctuation\">,</span>\n            HasChild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"12\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"11\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Richard\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"13\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"11\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"James\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"14\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"11\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Murrey\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"15\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"11\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Chris\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"16\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Margaret Peacock\"</span><span class=\"token punctuation\">,</span>\n            HasChild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"17\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"16\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Ryaz\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"18\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"16\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Mary\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"19\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"16\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Stephen\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ListData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EmployeeData</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">,</span>\n            Pid <span class=\"token operator\">=</span> <span class=\"token string\">\"16\"</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Raffel\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Output be like the below.</p>\n<p><img src=\"/production/blazor/documentation/treeview/images/context-menu.png\" alt=\"TreeView Sample\"></p>","timeToRead":3,"excerpt":"Process the tree node operations using context menu You can integrate the context menu with   component in order to perform the TreeView…","fields":{"slug":"/treeview/how-to/process-the-tree-node-operations-using-context-menu/","gcse":"014729256687841406486:qzbiyd0sri4"}}},"pageContext":{"slug":"/treeview/how-to/process-the-tree-node-operations-using-context-menu/","previous":{"html":"<h1 id=\"remove-the-check-box-of-the-parent-nodes-alone-in-treeview\"><a href=\"#remove-the-check-box-of-the-parent-nodes-alone-in-treeview\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remove the check box of the parent nodes alone in TreeView</h1>\n<p>By enabling the <code class=\"language-text\">ShowCheckBox</code> property, you can render check box before each node of TreeView. However, some application needs to render check box in child nodes alone. In such case, you can remove the check box of the parent node by customizing the CSS.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@<span class=\"token keyword\">using</span> Syncfusion<span class=\"token punctuation\">.</span>Blazor<span class=\"token punctuation\">.</span>Navigations\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">SfTreeView</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"Country\"</span> ShowCheckBox<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> CssClass<span class=\"token operator\">=</span><span class=\"token string\">\"CustomTree\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">TreeViewFieldsSettings</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"Country\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"Id\"</span> DataSource<span class=\"token operator\">=</span><span class=\"token string\">\"@Countries\"</span> Text<span class=\"token operator\">=</span><span class=\"token string\">\"Name\"</span> ParentID<span class=\"token operator\">=</span><span class=\"token string\">\"ParentId\"</span> HasChildren<span class=\"token operator\">=</span><span class=\"token string\">\"HasChild\"</span> Expanded<span class=\"token operator\">=</span><span class=\"token string\">\"Expanded\"</span> Selected<span class=\"token operator\">=</span><span class=\"token string\">\"IsSelected\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeViewFieldsSettings<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SfTreeView<span class=\"token operator\">></span>\n\n@code<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Country</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Id <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">?</span></span> ParentId <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> HasChild <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> Expanded <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> IsSelected <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Country<span class=\"token punctuation\">></span></span> Countries <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Country<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Australia\"</span><span class=\"token punctuation\">,</span>\n            HasChild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            Expanded <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"New South Wales\"</span><span class=\"token punctuation\">,</span>\n            IsSelected <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Victoria\"</span><span class=\"token punctuation\">,</span>\n            IsSelected <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"South Australia\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Western Australia\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Brazil\"</span><span class=\"token punctuation\">,</span>\n            HasChild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Paraná\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Ceará\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"China\"</span><span class=\"token punctuation\">,</span>\n            HasChild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Guangzhou\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Countries<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Country</span>\n        <span class=\"token punctuation\">{</span>\n            Id <span class=\"token operator\">=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>\n            ParentId <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>\n            Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Shantou\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">.</span>CustomTree <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>item<span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>level<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>text<span class=\"token operator\">-</span>content<span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>icon<span class=\"token operator\">-</span>wrapper\n    <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>checkbox<span class=\"token operator\">-</span>wrapper <span class=\"token punctuation\">{</span>\n        display<span class=\"token punctuation\">:</span> none\n    <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre></div>\n<p>Output be like the below.</p>\n<p><img src=\"/production/blazor/documentation/treeview/images/remove-parent-checkbox.png\" alt=\"TreeView Sample\"></p>","id":"a861fa39-7b9d-530d-9fd1-1ff5d305a1cc","fields":{"slug":"/treeview/how-to/remove-parent-checkbox/","parentPath":"treeview/how-to","childPath":"remove-parent-checkbox","gcse":"014729256687841406486:qzbiyd0sri4","header":"","breadCrumb":"TreeView/How To/Remove checkbox of the parent node","isReleaseNotes":false,"title":"How to Remove checkbox of the parent node in Blazor [Preview] TreeView component - Syncfusion","description":"Checkout and learn about Remove checkbox of the parent node in Blazor [Preview] TreeView component of Syncfusion Essential JS 2, and more details.","platform":"Blazor [Preview]","isRobots":true}},"next":{"html":"<h1 id=\"get-iconcss-dynamically-in-treeview\"><a href=\"#get-iconcss-dynamically-in-treeview\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get IconCss dynamically in TreeView</h1>\n<p>In TreeView component, you can get the original bound data using the <code class=\"language-text\">GetTreeData</code> method. For this method, if you pass the id of the tree node, it returns the corresponding node information, or otherwise the overall tree nodes information will be returned. You can use this method to get the bound IconCss class in the <code class=\"language-text\">NodeChecking</code> event. Please refer to the following sample.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@<span class=\"token keyword\">using</span> Syncfusion<span class=\"token punctuation\">.</span>Blazor<span class=\"token punctuation\">.</span>Navigations\n\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">SfTreeView</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"TreeItem\"</span> SortOrder<span class=\"token operator\">=</span><span class=\"token string\">\"@Syncfusion.Blazor.Navigations.SortOrder.Ascending\"</span> ShowCheckBox<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> AutoCheck<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> @<span class=\"token keyword\">ref</span><span class=\"token operator\">=</span><span class=\"token string\">\"tree\"</span> @<span class=\"token keyword\">ref</span><span class=\"token punctuation\">:</span>suppressField<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">TreeViewEvents</span> TValue<span class=\"token operator\">=</span><span class=\"token string\">\"TreeItem\"</span> NodeChecking<span class=\"token operator\">=</span><span class=\"token string\">\"BeforeCheck\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeViewEvents<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">TreeViewFieldsSettings</span> DataSource<span class=\"token operator\">=</span><span class=\"token string\">\"@TreeDataSource\"</span> Id<span class=\"token operator\">=</span><span class=\"token string\">\"NodeId\"</span> Text<span class=\"token operator\">=</span><span class=\"token string\">\"NodeText\"</span> Expanded<span class=\"token operator\">=</span><span class=\"token string\">\"Expanded\"</span> Child<span class=\"token operator\">=</span><span class=\"token string\">\"@(\"</span>Child<span class=\"token string\">\")\"</span> IconCss<span class=\"token operator\">=</span><span class=\"token string\">\"Icon\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TreeViewFieldsSettings<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SfTreeView<span class=\"token operator\">></span>\n@<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SelectedIcon <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    @SelectedIcon<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n@code<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">SfTreeView<span class=\"token punctuation\">&lt;</span>TreeItem<span class=\"token punctuation\">></span></span> tree<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>TreeItem<span class=\"token punctuation\">></span></span> TreeDataSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TreeItem<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> SelectedIcon <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> SelectedID <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">BeforeCheck</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NodeCheckEventArgs</span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>Action <span class=\"token operator\">==</span> <span class=\"token string\">\"check\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            SelectedID <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>TreeItem<span class=\"token punctuation\">></span></span> IconData <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tree<span class=\"token punctuation\">.</span><span class=\"token function\">GetTreeData</span><span class=\"token punctuation\">(</span>SelectedID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            SelectedIcon <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"Icon class is: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">IconData<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Icon</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">StateHasChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TreeDataSource<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeItem</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Music\"</span><span class=\"token punctuation\">,</span>\n            Icon <span class=\"token operator\">=</span> <span class=\"token string\">\"folder\"</span><span class=\"token punctuation\">,</span>\n            Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TreeItem<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeItem</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"01-01\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Gouttes.mp3\"</span><span class=\"token punctuation\">,</span> Icon <span class=\"token operator\">=</span> <span class=\"token string\">\"audio\"</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TreeDataSource<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeItem</span>\n        <span class=\"token punctuation\">{</span>\n            NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"02\"</span><span class=\"token punctuation\">,</span>\n            NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Videos\"</span><span class=\"token punctuation\">,</span>\n            Icon <span class=\"token operator\">=</span> <span class=\"token string\">\"folder\"</span><span class=\"token punctuation\">,</span>\n            Child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TreeItem<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeItem</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"02-01\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Naturals.mp4\"</span><span class=\"token punctuation\">,</span> Icon <span class=\"token operator\">=</span> <span class=\"token string\">\"video\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TreeItem</span> <span class=\"token punctuation\">{</span> NodeId <span class=\"token operator\">=</span> <span class=\"token string\">\"02-02\"</span><span class=\"token punctuation\">,</span> NodeText <span class=\"token operator\">=</span> <span class=\"token string\">\"Wild.mpeg\"</span><span class=\"token punctuation\">,</span> Icon <span class=\"token operator\">=</span> <span class=\"token string\">\"video\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">TreeItem</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> NodeId <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> NodeText <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Icon <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> Expanded <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> Selected <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>TreeItem<span class=\"token punctuation\">></span></span> Child<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n\n    <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>img <span class=\"token punctuation\">{</span>\n        width<span class=\"token punctuation\">:</span> 25px<span class=\"token punctuation\">;</span>\n        height<span class=\"token punctuation\">:</span> 25px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/* Loading sprite image for TreeView */</span>\n    <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon <span class=\"token punctuation\">{</span>\n        background<span class=\"token operator\">-</span>repeat<span class=\"token punctuation\">:</span> no<span class=\"token operator\">-</span>repeat<span class=\"token punctuation\">;</span>\n        background<span class=\"token operator\">-</span>image<span class=\"token punctuation\">:</span> <span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"css/treeview/images/file_Icons.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        height<span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">/* Specify the Icon positions based upon class name */</span>\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>folder <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>552px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>docx <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>20px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>ppt <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>48px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>pdf <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>104px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>images <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>132px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>zip <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>188px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>audio <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>244px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>video <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>272px\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>treeview <span class=\"token punctuation\">.</span>e<span class=\"token operator\">-</span>list<span class=\"token operator\">-</span>icon<span class=\"token punctuation\">.</span>exe <span class=\"token punctuation\">{</span>\n            background<span class=\"token operator\">-</span>position<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>197px <span class=\"token operator\">-</span>412px\n        <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre></div>\n<p>Output be like the below.</p>\n<p><img src=\"/production/blazor/documentation/treeview/images/IconCss.png\" alt=\"TreeView Sample\"></p>","id":"a562a099-fd70-5fb3-9968-fddd8b9eeefb","fields":{"slug":"/treeview/how-to/get-dynamic-icon/","parentPath":"treeview/how-to","childPath":"get-dynamic-icon","gcse":"014729256687841406486:qzbiyd0sri4","header":"","breadCrumb":"TreeView/How To/Get iconCss dynamically  in treeview","isReleaseNotes":false,"title":"How to Get iconCss dynamically  in treeview in Blazor [Preview] TreeView component - Syncfusion","description":"Checkout and learn about Get iconCss dynamically  in treeview in Blazor [Preview] TreeView component of Syncfusion Essential JS 2, and more details.","platform":"Blazor [Preview]","isRobots":true}},"gcse":"014729256687841406486:qzbiyd0sri4","header":"","breadCrumb":"TreeView/How To/Process the tree node operations using context menu","isReleaseNotes":false,"title":"How to Process the tree node operations using context menu in Blazor [Preview] TreeView component - Syncfusion","description":"Checkout and learn about Process the tree node operations using context menu in Blazor [Preview] TreeView component of Syncfusion Essential JS 2, and more details.","platform":"Blazor [Preview]","isRobots":true}}